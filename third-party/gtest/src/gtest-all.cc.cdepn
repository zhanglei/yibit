F {testing::internal::DefaultGlobalTestPartResultReporter::~DefaultGlobalTestPartResultReporter()} {../third-party/gtest/src/gtest-internal-inl.h:474}
C {testing::internal::DefaultGlobalTestPartResultReporter::~DefaultGlobalTestPartResultReporter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::DefaultGlobalTestPartResultReporter::~DefaultGlobalTestPartResultReporter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResultReporterInterface::~TestPartResultReporterInterface()}
F {testing::TestPartResultReporterInterface::~TestPartResultReporterInterface()} {../third-party/gtest/include/gtest/gtest-test-part.h:148}
C {testing::TestPartResultReporterInterface::~TestPartResultReporterInterface()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
F {testing::internal::DefaultPerThreadTestPartResultReporter::~DefaultPerThreadTestPartResultReporter()} {../third-party/gtest/src/gtest-internal-inl.h:490}
C {testing::internal::DefaultPerThreadTestPartResultReporter::~DefaultPerThreadTestPartResultReporter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::DefaultPerThreadTestPartResultReporter::~DefaultPerThreadTestPartResultReporter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResultReporterInterface::~TestPartResultReporterInterface()}
F {testing::internal::PrettyUnitTestResultPrinter::~PrettyUnitTestResultPrinter()} {../third-party/gtest/src/gtest.cc:2692}
C {testing::internal::PrettyUnitTestResultPrinter::~PrettyUnitTestResultPrinter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::PrettyUnitTestResultPrinter::~PrettyUnitTestResultPrinter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestEventListener::~TestEventListener()}
F {testing::TestEventListener::~TestEventListener()} {../third-party/gtest/include/gtest/gtest.h:961}
C {testing::TestEventListener::~TestEventListener()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
F {testing::internal::XmlUnitTestResultPrinter::~XmlUnitTestResultPrinter()} {../third-party/gtest/src/gtest.cc:3012}
C {testing::internal::XmlUnitTestResultPrinter::~XmlUnitTestResultPrinter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::EmptyTestEventListener::~EmptyTestEventListener()}
C {testing::internal::XmlUnitTestResultPrinter::~XmlUnitTestResultPrinter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::XmlUnitTestResultPrinter::~XmlUnitTestResultPrinter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::EmptyTestEventListener::~EmptyTestEventListener()}
C {testing::internal::XmlUnitTestResultPrinter::~XmlUnitTestResultPrinter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:533}
C {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<char>::_Alloc_hider::~_Alloc_hider()}
C {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<char>::_Alloc_hider::~_Alloc_hider()}
C {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_dispose(const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::_Rep* std::basic_string<_CharT, _Traits, _Alloc>::_M_rep() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::allocator_type std::basic_string<_CharT, _Traits, _Alloc>::get_allocator() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::allocator_type = std::allocator<char>]}
F {std::basic_string<_CharT, _Traits, _Alloc>::allocator_type std::basic_string<_CharT, _Traits, _Alloc>::get_allocator() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::allocator_type = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:1783}
C {std::basic_string<_CharT, _Traits, _Alloc>::allocator_type std::basic_string<_CharT, _Traits, _Alloc>::get_allocator() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::allocator_type = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator(const std::allocator<_Alloc>&) [with _Tp = char, std::allocator<_Alloc> = std::allocator<char>]}
F {std::allocator<_Alloc>::allocator(const std::allocator<_Alloc>&) [with _Tp = char, std::allocator<_Alloc> = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:109}
C {std::allocator<_Alloc>::allocator(const std::allocator<_Alloc>&) [with _Tp = char, std::allocator<_Alloc> = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = char, __gnu_cxx::new_allocator<_Tp> = __gnu_cxx::new_allocator<char>]}
F {__gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = char, __gnu_cxx::new_allocator<_Tp> = __gnu_cxx::new_allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:71}
F {std::basic_string<_CharT, _Traits, _Alloc>::_Rep* std::basic_string<_CharT, _Traits, _Alloc>::_M_rep() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:295}
C {std::basic_string<_CharT, _Traits, _Alloc>::_Rep* std::basic_string<_CharT, _Traits, _Alloc>::_M_rep() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_CharT* std::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {_CharT* std::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:287}
F {void std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_dispose(const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:232}
C {void std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_dispose(const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_destroy(const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_dispose(const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_Atomic_word __gnu_cxx::__exchange_and_add_dispatch(_Atomic_word*, int)}
C {void std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_dispose(const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {long int __builtin_expect(long int, long int)}
C {void std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_dispose(const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::basic_string<_CharT, _Traits, _Alloc>::_Rep& std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_S_empty_rep() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::_Rep = std::basic_string<char>::_Rep]}
F {static std::basic_string<_CharT, _Traits, _Alloc>::_Rep& std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_S_empty_rep() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::_Rep = std::basic_string<char>::_Rep]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:176}
F {_Atomic_word __gnu_cxx::__exchange_and_add_dispatch(_Atomic_word*, int)} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/atomicity.h:77}
C {_Atomic_word __gnu_cxx::__exchange_and_add_dispatch(_Atomic_word*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {_Atomic_word __gnu_cxx::__exchange_and_add_single(_Atomic_word*, int)}
C {_Atomic_word __gnu_cxx::__exchange_and_add_dispatch(_Atomic_word*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {_Atomic_word __gnu_cxx::__exchange_and_add(volatile _Atomic_word*, int)}
C {_Atomic_word __gnu_cxx::__exchange_and_add_dispatch(_Atomic_word*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __gthread_active_p()}
F {int __gthread_active_p()} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/x86_64-unknown-linux-gnu/bits/gthr-default.h:240}
F {_Atomic_word __gnu_cxx::__exchange_and_add(volatile _Atomic_word*, int)} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/atomicity.h:47}
C {_Atomic_word __gnu_cxx::__exchange_and_add(volatile _Atomic_word*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {unsigned int __sync_fetch_and_add_4(volatile void*, unsigned int)}
F {_Atomic_word __gnu_cxx::__exchange_and_add_single(_Atomic_word*, int)} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/atomicity.h:64}
F {std::allocator<_Alloc>::~allocator() [with _Tp = char]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:115}
C {std::allocator<_Alloc>::~allocator() [with _Tp = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = char]}
F {__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = char]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:76}
F {std::basic_string<char>::_Alloc_hider::~_Alloc_hider()} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:267}
C {std::basic_string<char>::_Alloc_hider::~_Alloc_hider()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
F {testing::EmptyTestEventListener::~EmptyTestEventListener()} {../third-party/gtest/include/gtest/gtest.h:1012}
C {testing::EmptyTestEventListener::~EmptyTestEventListener()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::EmptyTestEventListener::~EmptyTestEventListener()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestEventListener::~TestEventListener()}
F {testing::internal::OsStackTraceGetter::~OsStackTraceGetter()} {../third-party/gtest/src/gtest-internal-inl.h:440}
C {testing::internal::OsStackTraceGetter::~OsStackTraceGetter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::OsStackTraceGetterInterface::~OsStackTraceGetterInterface()}
C {testing::internal::OsStackTraceGetter::~OsStackTraceGetter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::OsStackTraceGetter::~OsStackTraceGetter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::OsStackTraceGetterInterface::~OsStackTraceGetterInterface()}
C {testing::internal::OsStackTraceGetter::~OsStackTraceGetter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::Mutex::~Mutex()}
F {testing::internal::Mutex::~Mutex()} {../third-party/gtest/include/gtest/internal/gtest-port.h:1400}
C {testing::internal::Mutex::~Mutex()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {testing::internal::Mutex::~Mutex()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {testing::internal::Mutex::~Mutex()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char, _Traits = std::char_traits<char>]}
C {testing::internal::Mutex::~Mutex()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::Mutex::~Mutex()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::Mutex::~Mutex()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {testing::internal::Mutex::~Mutex()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {testing::internal::Mutex::~Mutex()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int pthread_mutex_destroy(pthread_mutex_t*)}
F {std::ostream& testing::internal::GTestLog::GetStream()} {../third-party/gtest/include/gtest/internal/gtest-port.h:1031}
F {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ostream:510}
C {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::__ostream_insert(std::basic_ostream<_CharT, _Traits>&, const _CharT*, std::streamsize) [with _CharT = char, _Traits = std::char_traits<char>, std::streamsize = long int]}
C {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::size_t std::char_traits<char>::length(const char_type*)}
C {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::basic_ios<_CharT, _Traits>::setstate(std::ios_base::iostate) [with _CharT = char, _Traits = std::char_traits<char>, std::ios_base::iostate = std::_Ios_Iostate]}
F {void std::basic_ios<_CharT, _Traits>::setstate(std::ios_base::iostate) [with _CharT = char, _Traits = std::char_traits<char>, std::ios_base::iostate = std::_Ios_Iostate]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_ios.h:149}
C {void std::basic_ios<_CharT, _Traits>::setstate(std::ios_base::iostate) [with _CharT = char, _Traits = std::char_traits<char>, std::ios_base::iostate = std::_Ios_Iostate]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::basic_ios<_CharT, _Traits>::clear(std::ios_base::iostate) [with _CharT = char, _Traits = std::char_traits<char>, std::ios_base::iostate = std::_Ios_Iostate]}
C {void std::basic_ios<_CharT, _Traits>::setstate(std::ios_base::iostate) [with _CharT = char, _Traits = std::char_traits<char>, std::ios_base::iostate = std::_Ios_Iostate]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Ios_Iostate std::operator|(std::_Ios_Iostate, std::_Ios_Iostate)}
C {void std::basic_ios<_CharT, _Traits>::setstate(std::ios_base::iostate) [with _CharT = char, _Traits = std::char_traits<char>, std::ios_base::iostate = std::_Ios_Iostate]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ios_base::iostate std::basic_ios<_CharT, _Traits>::rdstate() const [with _CharT = char, _Traits = std::char_traits<char>, std::ios_base::iostate = std::_Ios_Iostate]}
F {std::ios_base::iostate std::basic_ios<_CharT, _Traits>::rdstate() const [with _CharT = char, _Traits = std::char_traits<char>, std::ios_base::iostate = std::_Ios_Iostate]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_ios.h:129}
F {std::_Ios_Iostate std::operator|(std::_Ios_Iostate, std::_Ios_Iostate)} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/ios_base.h:159}
F {static std::size_t std::char_traits<char>::length(const char_type*)} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/char_traits.h:260}
C {static std::size_t std::char_traits<char>::length(const char_type*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {long unsigned int __builtin_strlen(const char*)}
F {testing::internal::OsStackTraceGetterInterface::~OsStackTraceGetterInterface()} {../third-party/gtest/src/gtest-internal-inl.h:420}
C {testing::internal::OsStackTraceGetterInterface::~OsStackTraceGetterInterface()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
F {testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-death-test.cc:374}
C {testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::DeathTest::~DeathTest()}
C {testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::DeathTest::~DeathTest()}
C {testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::AlwaysFalse()}
C {testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestAbort(const string&)}
C {testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsTrue(bool)}
F {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]} {../third-party/gtest/include/gtest/gtest-message.h:243}
C {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::Message::GetString() const}
C {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = int, testing::Message = testing::Message]}
C {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {testing::Message& testing::Message::operator<<(const T&) [with T = int, testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = int, testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char, _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = int, testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]} {../third-party/gtest/include/gtest/internal/gtest-port.h:897}
F {testing::Message::~Message()} {../third-party/gtest/include/gtest/gtest-message.h:85}
C {testing::Message::~Message()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = std::basic_stringstream<char>]}
F {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = std::basic_stringstream<char>]} {../third-party/gtest/include/gtest/internal/gtest-port.h:895}
C {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = std::basic_stringstream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::scoped_ptr<T>::reset(T*) [with T = std::basic_stringstream<char>]}
F {void testing::internal::scoped_ptr<T>::reset(T*) [with T = std::basic_stringstream<char>]} {../third-party/gtest/include/gtest/internal/gtest-port.h:907}
C {void testing::internal::scoped_ptr<T>::reset(T*) [with T = std::basic_stringstream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsTrue(bool)}
F {std::allocator<_Alloc>::allocator() [with _Tp = char]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:107}
C {std::allocator<_Alloc>::allocator() [with _Tp = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = char]}
F {__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = char]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:69}
F {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:2306}
C {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::append(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
F {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:2343}
C {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::append(const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
F {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::append(const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:997}
C {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::append(const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::append(const _CharT*, std::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::append(const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::size_t std::char_traits<char>::length(const char_type*)}
F {bool testing::internal::AlwaysFalse()} {../third-party/gtest/include/gtest/internal/gtest-internal.h:660}
C {bool testing::internal::AlwaysFalse()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::AlwaysTrue()}
F {testing::internal::DeathTest::~DeathTest()} {../third-party/gtest/include/gtest/internal/gtest-death-test-internal.h:82}
C {testing::internal::DeathTest::~DeathTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
F {testing::internal::ForkingDeathTest::~ForkingDeathTest()} {../third-party/gtest/src/gtest-death-test.cc:776}
C {testing::internal::ForkingDeathTest::~ForkingDeathTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::ForkingDeathTest::~ForkingDeathTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::DeathTestImpl::~DeathTestImpl()}
F {testing::internal::NoExecDeathTest::~NoExecDeathTest()} {../third-party/gtest/src/gtest-death-test.cc:813}
C {testing::internal::NoExecDeathTest::~NoExecDeathTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::NoExecDeathTest::~NoExecDeathTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ForkingDeathTest::~ForkingDeathTest()}
F {testing::internal::ExecDeathTest::~ExecDeathTest()} {../third-party/gtest/src/gtest-death-test.cc:868}
C {testing::internal::ExecDeathTest::~ExecDeathTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::ExecDeathTest::~ExecDeathTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ForkingDeathTest::~ForkingDeathTest()}
F {testing::internal::DefaultDeathTestFactory::~DefaultDeathTestFactory()} {../third-party/gtest/include/gtest/internal/gtest-death-test-internal.h:148}
C {testing::internal::DefaultDeathTestFactory::~DefaultDeathTestFactory()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::DefaultDeathTestFactory::~DefaultDeathTestFactory()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::DeathTestFactory::~DeathTestFactory()}
F {testing::internal::DeathTestFactory::~DeathTestFactory()} {../third-party/gtest/include/gtest/internal/gtest-death-test-internal.h:142}
C {testing::internal::DeathTestFactory::~DeathTestFactory()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
F {int pthread_equal(pthread_t, pthread_t)} {/usr/include/pthread.h:1137}
F {(static initializers for ../third-party/gtest/src/gtest-typed-test.cc)} {../third-party/gtest/src/gtest-typed-test.cc:110}
C {(static initializers for ../third-party/gtest/src/gtest-typed-test.cc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __static_initialization_and_destruction_0(int, int)}
F {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __cxa_atexit(void (*)(void*), void*, void*)}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::vector() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __cxa_atexit(void (*)(void*), void*, void*)}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __cxa_atexit(void (*)(void*), void*, void*)}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::BoolFromGTestEnv(const char*, bool)}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __cxa_atexit(void (*)(void*), void*, void*)}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::internal::StringFromGTestEnv(const char*, const char*)}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const void* testing::internal::GetTestTypeId()}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __cxa_atexit(void (*)(void*), void*, void*)}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::BoolFromGTestEnv(const char*, bool)}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __cxa_atexit(void (*)(void*), void*, void*)}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::internal::StringFromGTestEnv(const char*, const char*)}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::Int32 testing::internal::Int32FromGTestEnv(const char*, testing::internal::Int32)}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::BoolFromGTestEnv(const char*, bool)}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::Int32 testing::internal::Int32FromGTestEnv(const char*, testing::internal::Int32)}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::Int32 testing::internal::Int32FromGTestEnv(const char*, testing::internal::Int32)}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::BoolFromGTestEnv(const char*, bool)}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __cxa_atexit(void (*)(void*), void*, void*)}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::internal::StringFromGTestEnv(const char*, const char*)}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __cxa_atexit(void (*)(void*), void*, void*)}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::internal::StringFromGTestEnv(const char*, const char*)}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::GetDefaultFilter()}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __cxa_atexit(void (*)(void*), void*, void*)}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::internal::StringFromGTestEnv(const char*, const char*)}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::BoolFromGTestEnv(const char*, bool)}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::BoolFromGTestEnv(const char*, bool)}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::BoolFromGTestEnv(const char*, bool)}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __cxa_atexit(void (*)(void*), void*, void*)}
C {void __static_initialization_and_destruction_0(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ios_base::Init::Init()}
F {const char* testing::GetDefaultFilter()} {../third-party/gtest/src/gtest.cc:185}
F {std::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:432}
C {std::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {std::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {std::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(_CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_CharT* std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_refdata() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::basic_string<_CharT, _Traits, _Alloc>::_Rep& std::basic_string<_CharT, _Traits, _Alloc>::_S_empty_rep() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
F {static std::basic_string<_CharT, _Traits, _Alloc>::_Rep& std::basic_string<_CharT, _Traits, _Alloc>::_S_empty_rep() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:421}
C {static std::basic_string<_CharT, _Traits, _Alloc>::_Rep& std::basic_string<_CharT, _Traits, _Alloc>::_S_empty_rep() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::basic_string<_CharT, _Traits, _Alloc>::_Rep& std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_S_empty_rep() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::_Rep = std::basic_string<char>::_Rep]}
F {_CharT* std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_refdata() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:217}
F {std::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(_CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:269}
C {std::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(_CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator(const std::allocator<_Alloc>&) [with _Tp = char, std::allocator<_Alloc> = std::allocator<char>]}
F {std::vector<_Tp, _Alloc>::vector() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:217}
C {std::vector<_Tp, _Alloc>::vector() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]}
F {std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:106}
C {std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]}
F {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:82}
C {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = std::basic_string<char>]}
F {std::allocator<_Alloc>::allocator() [with _Tp = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:107}
C {std::allocator<_Alloc>::allocator() [with _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::basic_string<char>]}
F {__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:69}
F {std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:349}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = std::basic_string<char>*, _Tp = std::basic_string<char>]}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<std::basic_string<char> >]}
F {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:95}
F {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = std::basic_string<char>*, _Tp = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:150}
C {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = std::basic_string<char>*, _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::basic_string<char>*]}
F {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::basic_string<char>*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:123}
C {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::basic_string<char>*, bool <anonymous> = false]}
F {static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::basic_string<char>*, bool <anonymous> = false]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:101}
C {static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::basic_string<char>*, bool <anonymous> = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_Tp*) [with _Tp = std::basic_string<char>]}
C {static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::basic_string<char>*, bool <anonymous> = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_Tp* std::__addressof(_Tp&) [with _Tp = std::basic_string<char>]}
F {_Tp* std::__addressof(_Tp&) [with _Tp = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/move.h:43}
F {void std::_Destroy(_Tp*) [with _Tp = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:93}
C {void std::_Destroy(_Tp*) [with _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:141}
C {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<std::basic_string<char>, std::allocator<std::basic_string<char> > >::_Vector_impl::~_Vector_impl()}
C {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<std::basic_string<char>, std::allocator<std::basic_string<char> > >::_Vector_impl::~_Vector_impl()}
C {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, typename _Alloc::rebind<_Tp>::other::pointer = std::basic_string<char>*, std::size_t = long unsigned int]}
F {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, typename _Alloc::rebind<_Tp>::other::pointer = std::basic_string<char>*, std::size_t = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:153}
C {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, typename _Alloc::rebind<_Tp>::other::pointer = std::basic_string<char>*, std::size_t = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::basic_string<char>, __gnu_cxx::new_allocator<_Tp>::pointer = std::basic_string<char>*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::basic_string<char>, __gnu_cxx::new_allocator<_Tp>::pointer = std::basic_string<char>*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:97}
C {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::basic_string<char>, __gnu_cxx::new_allocator<_Tp>::pointer = std::basic_string<char>*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
F {std::_Vector_base<std::basic_string<char>, std::allocator<std::basic_string<char> > >::_Vector_impl::~_Vector_impl()} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:75}
C {std::_Vector_base<std::basic_string<char>, std::allocator<std::basic_string<char> > >::_Vector_impl::~_Vector_impl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = std::basic_string<char>]}
F {std::allocator<_Alloc>::~allocator() [with _Tp = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:115}
C {std::allocator<_Alloc>::~allocator() [with _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::basic_string<char>]}
F {__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:76}
F {bool testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Equals(const testing::internal::ParamIteratorInterface<T>&) const [with T = bool]} {../third-party/gtest/include/gtest/internal/gtest-param-util.h:314}
C {bool testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Equals(const testing::internal::ParamIteratorInterface<T>&) const [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {bool testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Equals(const testing::internal::ParamIteratorInterface<T>&) const [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::_Bit_iterator_base::operator==(const std::_Bit_iterator_base&) const}
C {bool testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Equals(const testing::internal::ParamIteratorInterface<T>&) const [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {Derived* testing::internal::CheckedDowncastToActualType(Base*) [with Derived = const testing::internal::ValuesInIteratorRangeGenerator<bool>::Iterator, Base = const testing::internal::ParamIteratorInterface<bool>]}
C {bool testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Equals(const testing::internal::ParamIteratorInterface<T>&) const [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {bool testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Equals(const testing::internal::ParamIteratorInterface<T>&) const [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ostream_type& (*)(std::basic_ostream<_CharT, _Traits>::__ostream_type&)) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]}
C {bool testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Equals(const testing::internal::ParamIteratorInterface<T>&) const [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {bool testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Equals(const testing::internal::ParamIteratorInterface<T>&) const [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {bool testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Equals(const testing::internal::ParamIteratorInterface<T>&) const [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {bool testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Equals(const testing::internal::ParamIteratorInterface<T>&) const [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {bool testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Equals(const testing::internal::ParamIteratorInterface<T>&) const [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {bool testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Equals(const testing::internal::ParamIteratorInterface<T>&) const [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsTrue(bool)}
F {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ostream_type& (*)(std::basic_ostream<_CharT, _Traits>::__ostream_type&)) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ostream:110}
F {Derived* testing::internal::CheckedDowncastToActualType(Base*) [with Derived = const testing::internal::ValuesInIteratorRangeGenerator<bool>::Iterator, Base = const testing::internal::ParamIteratorInterface<bool>]} {../third-party/gtest/include/gtest/internal/gtest-port.h:1145}
C {Derived* testing::internal::CheckedDowncastToActualType(Base*) [with Derived = const testing::internal::ValuesInIteratorRangeGenerator<bool>::Iterator, Base = const testing::internal::ParamIteratorInterface<bool>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {Derived* testing::internal::CheckedDowncastToActualType(Base*) [with Derived = const testing::internal::ValuesInIteratorRangeGenerator<bool>::Iterator, Base = const testing::internal::ParamIteratorInterface<bool>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __dynamic_cast(const void*, const __cxxabiv1::__class_type_info*, const __cxxabiv1::__class_type_info*, long int)}
C {Derived* testing::internal::CheckedDowncastToActualType(Base*) [with Derived = const testing::internal::ValuesInIteratorRangeGenerator<bool>::Iterator, Base = const testing::internal::ParamIteratorInterface<bool>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {Derived* testing::internal::CheckedDowncastToActualType(Base*) [with Derived = const testing::internal::ValuesInIteratorRangeGenerator<bool>::Iterator, Base = const testing::internal::ParamIteratorInterface<bool>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {Derived* testing::internal::CheckedDowncastToActualType(Base*) [with Derived = const testing::internal::ValuesInIteratorRangeGenerator<bool>::Iterator, Base = const testing::internal::ParamIteratorInterface<bool>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {Derived* testing::internal::CheckedDowncastToActualType(Base*) [with Derived = const testing::internal::ValuesInIteratorRangeGenerator<bool>::Iterator, Base = const testing::internal::ParamIteratorInterface<bool>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {Derived* testing::internal::CheckedDowncastToActualType(Base*) [with Derived = const testing::internal::ValuesInIteratorRangeGenerator<bool>::Iterator, Base = const testing::internal::ParamIteratorInterface<bool>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const std::type_info& __cxa_bad_typeid()}
C {Derived* testing::internal::CheckedDowncastToActualType(Base*) [with Derived = const testing::internal::ValuesInIteratorRangeGenerator<bool>::Iterator, Base = const testing::internal::ParamIteratorInterface<bool>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsTrue(bool)}
C {Derived* testing::internal::CheckedDowncastToActualType(Base*) [with Derived = const testing::internal::ValuesInIteratorRangeGenerator<bool>::Iterator, Base = const testing::internal::ParamIteratorInterface<bool>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::type_info::operator==(const std::type_info&) const}
F {bool std::type_info::operator==(const std::type_info&) const} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/typeinfo:123}
C {bool std::type_info::operator==(const std::type_info&) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __builtin_strcmp(const char*, const char*)}
F {bool std::_Bit_iterator_base::operator==(const std::_Bit_iterator_base&) const} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_bvector.h:153}
F {std::basic_ostream<_CharT, _Traits>& std::endl(std::basic_ostream<_CharT, _Traits>&) [with _CharT = char, _Traits = std::char_traits<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ostream:543}
C {std::basic_ostream<_CharT, _Traits>& std::endl(std::basic_ostream<_CharT, _Traits>&) [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::flush(std::basic_ostream<_CharT, _Traits>&) [with _CharT = char, _Traits = std::char_traits<char>]}
C {std::basic_ostream<_CharT, _Traits>& std::endl(std::basic_ostream<_CharT, _Traits>&) [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::put(std::basic_ostream<_CharT, _Traits>::char_type) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::char_type = char]}
C {std::basic_ostream<_CharT, _Traits>& std::endl(std::basic_ostream<_CharT, _Traits>&) [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ios<_CharT, _Traits>::char_type std::basic_ios<_CharT, _Traits>::widen(char) const [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ios<_CharT, _Traits>::char_type = char]}
F {std::basic_ios<_CharT, _Traits>::char_type std::basic_ios<_CharT, _Traits>::widen(char) const [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ios<_CharT, _Traits>::char_type = char]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_ios.h:441}
C {std::basic_ios<_CharT, _Traits>::char_type std::basic_ios<_CharT, _Traits>::widen(char) const [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ios<_CharT, _Traits>::char_type = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ctype<char>::char_type std::ctype<char>::widen(char) const}
C {std::basic_ios<_CharT, _Traits>::char_type std::basic_ios<_CharT, _Traits>::widen(char) const [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ios<_CharT, _Traits>::char_type = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Facet& std::__check_facet(const _Facet*) [with _Facet = std::ctype<char>]}
F {const _Facet& std::__check_facet(const _Facet*) [with _Facet = std::ctype<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_ios.h:48}
C {const _Facet& std::__check_facet(const _Facet*) [with _Facet = std::ctype<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::__throw_bad_cast()}
F {std::ctype<char>::char_type std::ctype<char>::widen(char) const} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/locale_facets.h:866}
C {std::ctype<char>::char_type std::ctype<char>::widen(char) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::ctype<char>::_M_widen_init() const}
F {std::basic_ostream<_CharT, _Traits>& std::flush(std::basic_ostream<_CharT, _Traits>&) [with _CharT = char, _Traits = std::char_traits<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ostream:564}
C {std::basic_ostream<_CharT, _Traits>& std::flush(std::basic_ostream<_CharT, _Traits>&) [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::flush() [with _CharT = char, _Traits = std::char_traits<char>]}
F {const T* testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Current() const [with T = bool]} {../third-party/gtest/include/gtest/internal/gtest-param-util.h:309}
C {const T* testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Current() const [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T* testing::internal::scoped_ptr<T>::get() const [with T = const bool]}
C {const T* testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Current() const [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::scoped_ptr<T>::reset(T*) [with T = const bool]}
C {const T* testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Current() const [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {const T* testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Current() const [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Bit_const_iterator::const_reference std::_Bit_const_iterator::operator*() const}
C {const T* testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Current() const [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T* testing::internal::scoped_ptr<T>::get() const [with T = const bool]}
F {std::_Bit_const_iterator::const_reference std::_Bit_const_iterator::operator*() const} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_bvector.h:285}
C {std::_Bit_const_iterator::const_reference std::_Bit_const_iterator::operator*() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Bit_reference::operator bool() const}
C {std::_Bit_const_iterator::const_reference std::_Bit_const_iterator::operator*() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Bit_reference::_Bit_reference(std::_Bit_type*, std::_Bit_type)}
F {std::_Bit_reference::_Bit_reference(std::_Bit_type*, std::_Bit_type)} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_bvector.h:74}
F {std::_Bit_reference::operator bool() const} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_bvector.h:79}
F {void testing::internal::scoped_ptr<T>::reset(T*) [with T = const bool]} {../third-party/gtest/include/gtest/internal/gtest-port.h:907}
C {void testing::internal::scoped_ptr<T>::reset(T*) [with T = const bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {void testing::internal::scoped_ptr<T>::reset(T*) [with T = const bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsTrue(bool)}
F {T* testing::internal::scoped_ptr<T>::get() const [with T = const bool]} {../third-party/gtest/include/gtest/internal/gtest-port.h:899}
F {testing::internal::ParamIteratorInterface<T>* testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Clone() const [with T = bool]} {../third-party/gtest/include/gtest/internal/gtest-param-util.h:299}
C {testing::internal::ParamIteratorInterface<T>* testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Clone() const [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::ParamIteratorInterface<T>* testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Clone() const [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Iterator(const testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator&) [with T = bool, testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator = testing::internal::ValuesInIteratorRangeGenerator<bool>::Iterator]}
C {testing::internal::ParamIteratorInterface<T>* testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Clone() const [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
F {testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Iterator(const testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator&) [with T = bool, testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator = testing::internal::ValuesInIteratorRangeGenerator<bool>::Iterator]} {../third-party/gtest/include/gtest/internal/gtest-param-util.h:325}
C {testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Iterator(const testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator&) [with T = bool, testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator = testing::internal::ValuesInIteratorRangeGenerator<bool>::Iterator]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ParamIteratorInterface<T>::~ParamIteratorInterface() [with T = bool]}
C {testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Iterator(const testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator&) [with T = bool, testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator = testing::internal::ValuesInIteratorRangeGenerator<bool>::Iterator]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::scoped_ptr(T*) [with T = const bool]}
C {testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Iterator(const testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator&) [with T = bool, testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator = testing::internal::ValuesInIteratorRangeGenerator<bool>::Iterator]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ParamIteratorInterface<bool>::ParamIteratorInterface()}
F {testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::~Iterator() [with T = bool]} {../third-party/gtest/include/gtest/internal/gtest-param-util.h:290}
C {testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::~Iterator() [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ParamIteratorInterface<T>::~ParamIteratorInterface() [with T = bool]}
C {testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::~Iterator() [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::~Iterator() [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ParamIteratorInterface<T>::~ParamIteratorInterface() [with T = bool]}
C {testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::~Iterator() [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = const bool]}
F {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = const bool]} {../third-party/gtest/include/gtest/internal/gtest-port.h:895}
C {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = const bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::scoped_ptr<T>::reset(T*) [with T = const bool]}
F {testing::internal::ParamIteratorInterface<bool>::ParamIteratorInterface()} {../third-party/gtest/include/gtest/internal/gtest-param-util.h:69}
F {testing::internal::scoped_ptr<T>::scoped_ptr(T*) [with T = const bool]} {../third-party/gtest/include/gtest/internal/gtest-port.h:894}
F {testing::internal::ParamIteratorInterface<T>::~ParamIteratorInterface() [with T = bool]} {../third-party/gtest/include/gtest/internal/gtest-param-util.h:71}
C {testing::internal::ParamIteratorInterface<T>::~ParamIteratorInterface() [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
F {void testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Advance() [with T = bool]} {../third-party/gtest/include/gtest/internal/gtest-param-util.h:295}
C {void testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Advance() [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::scoped_ptr<T>::reset(T*) [with T = const bool]}
C {void testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Advance() [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Bit_const_iterator::const_iterator& std::_Bit_const_iterator::operator++()}
F {std::_Bit_const_iterator::const_iterator& std::_Bit_const_iterator::operator++()} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_bvector.h:289}
C {std::_Bit_const_iterator::const_iterator& std::_Bit_const_iterator::operator++()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Bit_iterator_base::_M_bump_up()}
F {void std::_Bit_iterator_base::_M_bump_up()} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_bvector.h:119}
F {const testing::internal::ParamGeneratorInterface<T>* testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::BaseGenerator() const [with T = bool]} {../third-party/gtest/include/gtest/internal/gtest-param-util.h:292}
F {testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::~Iterator() [with T = bool]} {../third-party/gtest/include/gtest/internal/gtest-param-util.h:290}
C {testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::~Iterator() [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::~Iterator() [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::~Iterator() [with T = bool]}
F {testing::internal::ParamIteratorInterface<T>::~ParamIteratorInterface() [with T = bool]} {../third-party/gtest/include/gtest/internal/gtest-param-util.h:71}
C {testing::internal::ParamIteratorInterface<T>::~ParamIteratorInterface() [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::ParamIteratorInterface<T>::~ParamIteratorInterface() [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ParamIteratorInterface<T>::~ParamIteratorInterface() [with T = bool]}
F {testing::internal::ParamIteratorInterface<T>* testing::internal::ValuesInIteratorRangeGenerator<T>::End() const [with T = bool]} {../third-party/gtest/include/gtest/internal/gtest-param-util.h:278}
C {testing::internal::ParamIteratorInterface<T>* testing::internal::ValuesInIteratorRangeGenerator<T>::End() const [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::ParamIteratorInterface<T>* testing::internal::ValuesInIteratorRangeGenerator<T>::End() const [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Iterator(const testing::internal::ParamGeneratorInterface<T>*, typename testing::internal::ValuesInIteratorRangeGenerator<T>::ContainerType::const_iterator) [with T = bool, typename testing::internal::ValuesInIteratorRangeGenerator<T>::ContainerType::const_iterator = std::_Bit_const_iterator]}
C {testing::internal::ParamIteratorInterface<T>* testing::internal::ValuesInIteratorRangeGenerator<T>::End() const [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {testing::internal::ParamIteratorInterface<T>* testing::internal::ValuesInIteratorRangeGenerator<T>::End() const [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<bool, _Alloc>::const_iterator std::vector<bool, _Alloc>::end() const [with _Alloc = std::allocator<bool>, std::vector<bool, _Alloc>::const_iterator = std::_Bit_const_iterator]}
F {std::vector<bool, _Alloc>::const_iterator std::vector<bool, _Alloc>::end() const [with _Alloc = std::allocator<bool>, std::vector<bool, _Alloc>::const_iterator = std::_Bit_const_iterator]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_bvector.h:627}
C {std::vector<bool, _Alloc>::const_iterator std::vector<bool, _Alloc>::end() const [with _Alloc = std::allocator<bool>, std::vector<bool, _Alloc>::const_iterator = std::_Bit_const_iterator]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Bit_const_iterator::_Bit_const_iterator(const std::_Bit_iterator&)}
F {std::_Bit_const_iterator::_Bit_const_iterator(const std::_Bit_iterator&)} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_bvector.h:281}
C {std::_Bit_const_iterator::_Bit_const_iterator(const std::_Bit_iterator&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Bit_iterator_base::_Bit_iterator_base(std::_Bit_type*, unsigned int)}
F {std::_Bit_iterator_base::_Bit_iterator_base(std::_Bit_type*, unsigned int)} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_bvector.h:115}
C {std::_Bit_iterator_base::_Bit_iterator_base(std::_Bit_type*, unsigned int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::iterator<std::random_access_iterator_tag, bool>::iterator()}
F {std::iterator<std::random_access_iterator_tag, bool>::iterator()} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator_base_types.h:119}
F {testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Iterator(const testing::internal::ParamGeneratorInterface<T>*, typename testing::internal::ValuesInIteratorRangeGenerator<T>::ContainerType::const_iterator) [with T = bool, typename testing::internal::ValuesInIteratorRangeGenerator<T>::ContainerType::const_iterator = std::_Bit_const_iterator]} {../third-party/gtest/include/gtest/internal/gtest-param-util.h:287}
C {testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Iterator(const testing::internal::ParamGeneratorInterface<T>*, typename testing::internal::ValuesInIteratorRangeGenerator<T>::ContainerType::const_iterator) [with T = bool, typename testing::internal::ValuesInIteratorRangeGenerator<T>::ContainerType::const_iterator = std::_Bit_const_iterator]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ParamIteratorInterface<T>::~ParamIteratorInterface() [with T = bool]}
C {testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Iterator(const testing::internal::ParamGeneratorInterface<T>*, typename testing::internal::ValuesInIteratorRangeGenerator<T>::ContainerType::const_iterator) [with T = bool, typename testing::internal::ValuesInIteratorRangeGenerator<T>::ContainerType::const_iterator = std::_Bit_const_iterator]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::scoped_ptr(T*) [with T = const bool]}
C {testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Iterator(const testing::internal::ParamGeneratorInterface<T>*, typename testing::internal::ValuesInIteratorRangeGenerator<T>::ContainerType::const_iterator) [with T = bool, typename testing::internal::ValuesInIteratorRangeGenerator<T>::ContainerType::const_iterator = std::_Bit_const_iterator]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ParamIteratorInterface<bool>::ParamIteratorInterface()}
F {testing::internal::ParamIteratorInterface<T>* testing::internal::ValuesInIteratorRangeGenerator<T>::Begin() const [with T = bool]} {../third-party/gtest/include/gtest/internal/gtest-param-util.h:275}
C {testing::internal::ParamIteratorInterface<T>* testing::internal::ValuesInIteratorRangeGenerator<T>::Begin() const [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::ParamIteratorInterface<T>* testing::internal::ValuesInIteratorRangeGenerator<T>::Begin() const [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ValuesInIteratorRangeGenerator<T>::Iterator::Iterator(const testing::internal::ParamGeneratorInterface<T>*, typename testing::internal::ValuesInIteratorRangeGenerator<T>::ContainerType::const_iterator) [with T = bool, typename testing::internal::ValuesInIteratorRangeGenerator<T>::ContainerType::const_iterator = std::_Bit_const_iterator]}
C {testing::internal::ParamIteratorInterface<T>* testing::internal::ValuesInIteratorRangeGenerator<T>::Begin() const [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {testing::internal::ParamIteratorInterface<T>* testing::internal::ValuesInIteratorRangeGenerator<T>::Begin() const [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<bool, _Alloc>::const_iterator std::vector<bool, _Alloc>::begin() const [with _Alloc = std::allocator<bool>, std::vector<bool, _Alloc>::const_iterator = std::_Bit_const_iterator]}
F {std::vector<bool, _Alloc>::const_iterator std::vector<bool, _Alloc>::begin() const [with _Alloc = std::allocator<bool>, std::vector<bool, _Alloc>::const_iterator = std::_Bit_const_iterator]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_bvector.h:619}
C {std::vector<bool, _Alloc>::const_iterator std::vector<bool, _Alloc>::begin() const [with _Alloc = std::allocator<bool>, std::vector<bool, _Alloc>::const_iterator = std::_Bit_const_iterator]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Bit_const_iterator::_Bit_const_iterator(const std::_Bit_iterator&)}
F {testing::internal::ValuesInIteratorRangeGenerator<T>::~ValuesInIteratorRangeGenerator() [with T = bool]} {../third-party/gtest/include/gtest/internal/gtest-param-util.h:273}
C {testing::internal::ValuesInIteratorRangeGenerator<T>::~ValuesInIteratorRangeGenerator() [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::ValuesInIteratorRangeGenerator<T>::~ValuesInIteratorRangeGenerator() [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ValuesInIteratorRangeGenerator<T>::~ValuesInIteratorRangeGenerator() [with T = bool]}
F {testing::internal::ValuesInIteratorRangeGenerator<T>::~ValuesInIteratorRangeGenerator() [with T = bool]} {../third-party/gtest/include/gtest/internal/gtest-param-util.h:273}
C {testing::internal::ValuesInIteratorRangeGenerator<T>::~ValuesInIteratorRangeGenerator() [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ParamGeneratorInterface< <template-parameter-1-1> >::~ParamGeneratorInterface() [with T = bool]}
C {testing::internal::ValuesInIteratorRangeGenerator<T>::~ValuesInIteratorRangeGenerator() [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::ValuesInIteratorRangeGenerator<T>::~ValuesInIteratorRangeGenerator() [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ParamGeneratorInterface< <template-parameter-1-1> >::~ParamGeneratorInterface() [with T = bool]}
C {testing::internal::ValuesInIteratorRangeGenerator<T>::~ValuesInIteratorRangeGenerator() [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<bool, _Alloc>::~vector() [with _Alloc = std::allocator<bool>]}
F {std::vector<bool, _Alloc>::~vector() [with _Alloc = std::allocator<bool>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_bvector.h:556}
C {std::vector<bool, _Alloc>::~vector() [with _Alloc = std::allocator<bool>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Bvector_base<_Alloc>::~_Bvector_base() [with _Alloc = std::allocator<bool>]}
F {std::_Bvector_base<_Alloc>::~_Bvector_base() [with _Alloc = std::allocator<bool>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_bvector.h:431}
C {std::_Bvector_base<_Alloc>::~_Bvector_base() [with _Alloc = std::allocator<bool>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::~_Bvector_impl()}
C {std::_Bvector_base<_Alloc>::~_Bvector_base() [with _Alloc = std::allocator<bool>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::~_Bvector_impl()}
C {std::_Bvector_base<_Alloc>::~_Bvector_base() [with _Alloc = std::allocator<bool>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Bvector_base<_Alloc>::_M_deallocate() [with _Alloc = std::allocator<bool>]}
F {void std::_Bvector_base<_Alloc>::_M_deallocate() [with _Alloc = std::allocator<bool>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_bvector.h:443}
C {void std::_Bvector_base<_Alloc>::_M_deallocate() [with _Alloc = std::allocator<bool>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = long unsigned int, __gnu_cxx::new_allocator<_Tp>::pointer = long unsigned int*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = long unsigned int, __gnu_cxx::new_allocator<_Tp>::pointer = long unsigned int*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:97}
C {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = long unsigned int, __gnu_cxx::new_allocator<_Tp>::pointer = long unsigned int*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
F {std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::~_Bvector_impl()} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_bvector.h:381}
C {std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::~_Bvector_impl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = long unsigned int]}
F {std::allocator<_Alloc>::~allocator() [with _Tp = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:115}
C {std::allocator<_Alloc>::~allocator() [with _Tp = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = long unsigned int]}
F {__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:76}
F {testing::internal::ParamGeneratorInterface< <template-parameter-1-1> >::~ParamGeneratorInterface() [with T = bool]} {../third-party/gtest/include/gtest/internal/gtest-param-util.h:146}
C {testing::internal::ParamGeneratorInterface< <template-parameter-1-1> >::~ParamGeneratorInterface() [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
F {virtual testing::internal::StreamingListener::~StreamingListener()} {../third-party/gtest/src/gtest-internal-inl.h:1070}
C {virtual testing::internal::StreamingListener::~StreamingListener()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual testing::internal::StreamingListener::~StreamingListener()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::StreamingListener::~StreamingListener()}
F {testing::internal::StreamingListener::~StreamingListener()} {../third-party/gtest/src/gtest-internal-inl.h:1070}
C {testing::internal::StreamingListener::~StreamingListener()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::EmptyTestEventListener::~EmptyTestEventListener()}
C {testing::internal::StreamingListener::~StreamingListener()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::StreamingListener::~StreamingListener()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::EmptyTestEventListener::~EmptyTestEventListener()}
C {testing::internal::StreamingListener::~StreamingListener()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = testing::internal::StreamingListener::AbstractSocketWriter]}
F {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = testing::internal::StreamingListener::AbstractSocketWriter]} {../third-party/gtest/include/gtest/internal/gtest-port.h:895}
C {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = testing::internal::StreamingListener::AbstractSocketWriter]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::scoped_ptr<T>::reset(T*) [with T = testing::internal::StreamingListener::AbstractSocketWriter]}
F {void testing::internal::scoped_ptr<T>::reset(T*) [with T = testing::internal::StreamingListener::AbstractSocketWriter]} {../third-party/gtest/include/gtest/internal/gtest-port.h:907}
C {void testing::internal::scoped_ptr<T>::reset(T*) [with T = testing::internal::StreamingListener::AbstractSocketWriter]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsTrue(bool)}
F {virtual testing::internal::PrettyUnitTestResultPrinter::~PrettyUnitTestResultPrinter()} {../third-party/gtest/src/gtest.cc:2692}
C {virtual testing::internal::PrettyUnitTestResultPrinter::~PrettyUnitTestResultPrinter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual testing::internal::PrettyUnitTestResultPrinter::~PrettyUnitTestResultPrinter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::PrettyUnitTestResultPrinter::~PrettyUnitTestResultPrinter()}
F {virtual testing::internal::XmlUnitTestResultPrinter::~XmlUnitTestResultPrinter()} {../third-party/gtest/src/gtest.cc:3012}
C {virtual testing::internal::XmlUnitTestResultPrinter::~XmlUnitTestResultPrinter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual testing::internal::XmlUnitTestResultPrinter::~XmlUnitTestResultPrinter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::XmlUnitTestResultPrinter::~XmlUnitTestResultPrinter()}
F {virtual testing::internal::OsStackTraceGetter::~OsStackTraceGetter()} {../third-party/gtest/src/gtest-internal-inl.h:440}
C {virtual testing::internal::OsStackTraceGetter::~OsStackTraceGetter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual testing::internal::OsStackTraceGetter::~OsStackTraceGetter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::OsStackTraceGetter::~OsStackTraceGetter()}
F {virtual testing::internal::NoExecDeathTest::~NoExecDeathTest()} {../third-party/gtest/src/gtest-death-test.cc:813}
C {virtual testing::internal::NoExecDeathTest::~NoExecDeathTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual testing::internal::NoExecDeathTest::~NoExecDeathTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::NoExecDeathTest::~NoExecDeathTest()}
F {virtual testing::internal::ExecDeathTest::~ExecDeathTest()} {../third-party/gtest/src/gtest-death-test.cc:868}
C {virtual testing::internal::ExecDeathTest::~ExecDeathTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual testing::internal::ExecDeathTest::~ExecDeathTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ExecDeathTest::~ExecDeathTest()}
F {virtual testing::internal::DefaultDeathTestFactory::~DefaultDeathTestFactory()} {../third-party/gtest/include/gtest/internal/gtest-death-test-internal.h:148}
C {virtual testing::internal::DefaultDeathTestFactory::~DefaultDeathTestFactory()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual testing::internal::DefaultDeathTestFactory::~DefaultDeathTestFactory()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::DefaultDeathTestFactory::~DefaultDeathTestFactory()}
F {virtual testing::internal::ThreadLocal<std::vector<testing::internal::TraceInfo> >::ValueHolder::~ValueHolder()} {../third-party/gtest/include/gtest/internal/gtest-port.h:1496}
C {virtual testing::internal::ThreadLocal<std::vector<testing::internal::TraceInfo> >::ValueHolder::~ValueHolder()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual testing::internal::ThreadLocal<std::vector<testing::internal::TraceInfo> >::ValueHolder::~ValueHolder()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ThreadLocal<std::vector<testing::internal::TraceInfo> >::ValueHolder::~ValueHolder()}
F {testing::internal::ThreadLocal<std::vector<testing::internal::TraceInfo> >::ValueHolder::~ValueHolder()} {../third-party/gtest/include/gtest/internal/gtest-port.h:1496}
C {testing::internal::ThreadLocal<std::vector<testing::internal::TraceInfo> >::ValueHolder::~ValueHolder()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ThreadLocalValueHolderBase::~ThreadLocalValueHolderBase()}
C {testing::internal::ThreadLocal<std::vector<testing::internal::TraceInfo> >::ValueHolder::~ValueHolder()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::ThreadLocal<std::vector<testing::internal::TraceInfo> >::ValueHolder::~ValueHolder()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ThreadLocalValueHolderBase::~ThreadLocalValueHolderBase()}
C {testing::internal::ThreadLocal<std::vector<testing::internal::TraceInfo> >::ValueHolder::~ValueHolder()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>]}
F {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:349}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>]}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>]}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::internal::TraceInfo*, _Tp = testing::internal::TraceInfo]}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::internal::TraceInfo>]}
F {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::internal::TraceInfo>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:95}
F {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::internal::TraceInfo*, _Tp = testing::internal::TraceInfo]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:150}
C {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::internal::TraceInfo*, _Tp = testing::internal::TraceInfo]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::internal::TraceInfo*]}
F {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::internal::TraceInfo*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:123}
C {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::internal::TraceInfo*, bool <anonymous> = false]}
F {static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::internal::TraceInfo*, bool <anonymous> = false]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:101}
C {static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::internal::TraceInfo*, bool <anonymous> = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_Tp*) [with _Tp = testing::internal::TraceInfo]}
C {static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::internal::TraceInfo*, bool <anonymous> = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_Tp* std::__addressof(_Tp&) [with _Tp = testing::internal::TraceInfo]}
F {_Tp* std::__addressof(_Tp&) [with _Tp = testing::internal::TraceInfo]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/move.h:43}
F {void std::_Destroy(_Tp*) [with _Tp = testing::internal::TraceInfo]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:93}
C {void std::_Destroy(_Tp*) [with _Tp = testing::internal::TraceInfo]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TraceInfo::~TraceInfo()}
F {testing::internal::TraceInfo::~TraceInfo()} {../third-party/gtest/src/gtest-internal-inl.h:466}
C {testing::internal::TraceInfo::~TraceInfo()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:141}
C {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<testing::internal::TraceInfo, std::allocator<testing::internal::TraceInfo> >::_Vector_impl::~_Vector_impl()}
C {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<testing::internal::TraceInfo, std::allocator<testing::internal::TraceInfo> >::_Vector_impl::~_Vector_impl()}
C {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, typename _Alloc::rebind<_Tp>::other::pointer = testing::internal::TraceInfo*, std::size_t = long unsigned int]}
F {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, typename _Alloc::rebind<_Tp>::other::pointer = testing::internal::TraceInfo*, std::size_t = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:153}
C {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, typename _Alloc::rebind<_Tp>::other::pointer = testing::internal::TraceInfo*, std::size_t = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = testing::internal::TraceInfo, __gnu_cxx::new_allocator<_Tp>::pointer = testing::internal::TraceInfo*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = testing::internal::TraceInfo, __gnu_cxx::new_allocator<_Tp>::pointer = testing::internal::TraceInfo*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:97}
C {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = testing::internal::TraceInfo, __gnu_cxx::new_allocator<_Tp>::pointer = testing::internal::TraceInfo*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
F {std::_Vector_base<testing::internal::TraceInfo, std::allocator<testing::internal::TraceInfo> >::_Vector_impl::~_Vector_impl()} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:75}
C {std::_Vector_base<testing::internal::TraceInfo, std::allocator<testing::internal::TraceInfo> >::_Vector_impl::~_Vector_impl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = testing::internal::TraceInfo]}
F {std::allocator<_Alloc>::~allocator() [with _Tp = testing::internal::TraceInfo]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:115}
C {std::allocator<_Alloc>::~allocator() [with _Tp = testing::internal::TraceInfo]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = testing::internal::TraceInfo]}
F {__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = testing::internal::TraceInfo]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:76}
F {testing::internal::ThreadLocalValueHolderBase::~ThreadLocalValueHolderBase()} {../third-party/gtest/include/gtest/internal/gtest-port.h:1434}
C {testing::internal::ThreadLocalValueHolderBase::~ThreadLocalValueHolderBase()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
F {virtual testing::internal::ThreadLocal<testing::TestPartResultReporterInterface*>::ValueHolder::~ValueHolder()} {../third-party/gtest/include/gtest/internal/gtest-port.h:1496}
C {virtual testing::internal::ThreadLocal<testing::TestPartResultReporterInterface*>::ValueHolder::~ValueHolder()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual testing::internal::ThreadLocal<testing::TestPartResultReporterInterface*>::ValueHolder::~ValueHolder()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ThreadLocal<testing::TestPartResultReporterInterface*>::ValueHolder::~ValueHolder()}
F {testing::internal::ThreadLocal<testing::TestPartResultReporterInterface*>::ValueHolder::~ValueHolder()} {../third-party/gtest/include/gtest/internal/gtest-port.h:1496}
C {testing::internal::ThreadLocal<testing::TestPartResultReporterInterface*>::ValueHolder::~ValueHolder()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::ThreadLocal<testing::TestPartResultReporterInterface*>::ValueHolder::~ValueHolder()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ThreadLocalValueHolderBase::~ThreadLocalValueHolderBase()}
F {testing::internal::ParamGeneratorInterface< <template-parameter-1-1> >::~ParamGeneratorInterface() [with T = bool]} {../third-party/gtest/include/gtest/internal/gtest-param-util.h:146}
C {testing::internal::ParamGeneratorInterface< <template-parameter-1-1> >::~ParamGeneratorInterface() [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::ParamGeneratorInterface< <template-parameter-1-1> >::~ParamGeneratorInterface() [with T = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ParamGeneratorInterface< <template-parameter-1-1> >::~ParamGeneratorInterface() [with T = bool]}
F {std::basic_ostream<_CharT, _Traits>::~basic_ostream() [with _CharT = char, _Traits = std::char_traits<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ostream:93}
C {std::basic_ostream<_CharT, _Traits>::~basic_ostream() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {std::basic_ostream<_CharT, _Traits>::~basic_ostream() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>::~basic_ostream() [with _CharT = char, _Traits = std::char_traits<char>]}
F {std::basic_ostream<_CharT, _Traits>::~basic_ostream() [with _CharT = char, _Traits = std::char_traits<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ostream:93}
C {std::basic_ostream<_CharT, _Traits>::~basic_ostream() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {std::basic_ostream<_CharT, _Traits>::~basic_ostream() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ios<_CharT, _Traits>::~basic_ios() [with _CharT = char, _Traits = std::char_traits<char>]}
F {std::basic_ios<_CharT, _Traits>::~basic_ios() [with _CharT = char, _Traits = std::char_traits<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_ios.h:274}
C {std::basic_ios<_CharT, _Traits>::~basic_ios() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {std::basic_ios<_CharT, _Traits>::~basic_ios() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ios_base::~ios_base()}
F {std::basic_istream<_CharT, _Traits>::~basic_istream() [with _CharT = char, _Traits = std::char_traits<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/istream:103}
C {std::basic_istream<_CharT, _Traits>::~basic_istream() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {std::basic_istream<_CharT, _Traits>::~basic_istream() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_istream<_CharT, _Traits>::~basic_istream() [with _CharT = char, _Traits = std::char_traits<char>]}
F {std::basic_istream<_CharT, _Traits>::~basic_istream() [with _CharT = char, _Traits = std::char_traits<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/istream:103}
C {std::basic_istream<_CharT, _Traits>::~basic_istream() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {std::basic_istream<_CharT, _Traits>::~basic_istream() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ios<_CharT, _Traits>::~basic_ios() [with _CharT = char, _Traits = std::char_traits<char>]}
F {std::basic_streambuf<_CharT, _Traits>::~basic_streambuf() [with _CharT = char, _Traits = std::char_traits<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/streambuf:195}
C {std::basic_streambuf<_CharT, _Traits>::~basic_streambuf() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {std::basic_streambuf<_CharT, _Traits>::~basic_streambuf() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_streambuf<_CharT, _Traits>::~basic_streambuf() [with _CharT = char, _Traits = std::char_traits<char>]}
F {std::basic_streambuf<_CharT, _Traits>::~basic_streambuf() [with _CharT = char, _Traits = std::char_traits<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/streambuf:195}
C {std::basic_streambuf<_CharT, _Traits>::~basic_streambuf() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {std::basic_streambuf<_CharT, _Traits>::~basic_streambuf() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::locale::~locale()}
F {std::basic_iostream<_CharT, _Traits>::~basic_iostream() [with _CharT = char, _Traits = std::char_traits<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/istream:806}
C {std::basic_iostream<_CharT, _Traits>::~basic_iostream() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {std::basic_iostream<_CharT, _Traits>::~basic_iostream() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_iostream<_CharT, _Traits>::~basic_iostream() [with _CharT = char, _Traits = std::char_traits<char>]}
F {std::basic_iostream<_CharT, _Traits>::~basic_iostream() [with _CharT = char, _Traits = std::char_traits<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/istream:806}
C {std::basic_iostream<_CharT, _Traits>::~basic_iostream() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ios<_CharT, _Traits>::~basic_ios() [with _CharT = char, _Traits = std::char_traits<char>]}
C {std::basic_iostream<_CharT, _Traits>::~basic_iostream() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_istream<_CharT, _Traits>::~basic_istream() [with _CharT = char, _Traits = std::char_traits<char>]}
C {std::basic_iostream<_CharT, _Traits>::~basic_iostream() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {std::basic_iostream<_CharT, _Traits>::~basic_iostream() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ios<_CharT, _Traits>::~basic_ios() [with _CharT = char, _Traits = std::char_traits<char>]}
C {std::basic_iostream<_CharT, _Traits>::~basic_iostream() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_istream<_CharT, _Traits>::~basic_istream() [with _CharT = char, _Traits = std::char_traits<char>]}
C {std::basic_iostream<_CharT, _Traits>::~basic_iostream() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>::~basic_ostream() [with _CharT = char, _Traits = std::char_traits<char>]}
F {std::basic_ostream<_CharT, _Traits>::~basic_ostream() [with _CharT = char, _Traits = std::char_traits<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ostream:93}
C {std::basic_ostream<_CharT, _Traits>::~basic_ostream() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {std::basic_ostream<_CharT, _Traits>::~basic_ostream() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ios<_CharT, _Traits>::~basic_ios() [with _CharT = char, _Traits = std::char_traits<char>]}
F {std::basic_istream<_CharT, _Traits>::~basic_istream() [with _CharT = char, _Traits = std::char_traits<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/istream:103}
C {std::basic_istream<_CharT, _Traits>::~basic_istream() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {std::basic_istream<_CharT, _Traits>::~basic_istream() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ios<_CharT, _Traits>::~basic_ios() [with _CharT = char, _Traits = std::char_traits<char>]}
F {std::basic_ios<_CharT, _Traits>::~basic_ios() [with _CharT = char, _Traits = std::char_traits<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_ios.h:274}
C {std::basic_ios<_CharT, _Traits>::~basic_ios() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {std::basic_ios<_CharT, _Traits>::~basic_ios() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ios<_CharT, _Traits>::~basic_ios() [with _CharT = char, _Traits = std::char_traits<char>]}
F {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/sstream:544}
C {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/sstream:544}
C {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ios<_CharT, _Traits>::~basic_ios() [with _CharT = char, _Traits = std::char_traits<char>]}
C {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_iostream<_CharT, _Traits>::~basic_iostream() [with _CharT = char, _Traits = std::char_traits<char>]}
C {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ios<_CharT, _Traits>::~basic_ios() [with _CharT = char, _Traits = std::char_traits<char>]}
C {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_iostream<_CharT, _Traits>::~basic_iostream() [with _CharT = char, _Traits = std::char_traits<char>]}
C {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringbuf<char>::~basic_stringbuf()}
F {std::basic_stringbuf<char>::~basic_stringbuf()} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/sstream:60}
C {std::basic_stringbuf<char>::~basic_stringbuf()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_streambuf<_CharT, _Traits>::~basic_streambuf() [with _CharT = char, _Traits = std::char_traits<char>]}
C {std::basic_stringbuf<char>::~basic_stringbuf()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {std::basic_stringbuf<char>::~basic_stringbuf()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_streambuf<_CharT, _Traits>::~basic_streambuf() [with _CharT = char, _Traits = std::char_traits<char>]}
C {std::basic_stringbuf<char>::~basic_stringbuf()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {std::basic_iostream<_CharT, _Traits>::~basic_iostream() [with _CharT = char, _Traits = std::char_traits<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/istream:806}
C {std::basic_iostream<_CharT, _Traits>::~basic_iostream() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ios<_CharT, _Traits>::~basic_ios() [with _CharT = char, _Traits = std::char_traits<char>]}
C {std::basic_iostream<_CharT, _Traits>::~basic_iostream() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_istream<_CharT, _Traits>::~basic_istream() [with _CharT = char, _Traits = std::char_traits<char>]}
C {std::basic_iostream<_CharT, _Traits>::~basic_iostream() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {std::basic_iostream<_CharT, _Traits>::~basic_iostream() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ios<_CharT, _Traits>::~basic_ios() [with _CharT = char, _Traits = std::char_traits<char>]}
C {std::basic_iostream<_CharT, _Traits>::~basic_iostream() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_istream<_CharT, _Traits>::~basic_istream() [with _CharT = char, _Traits = std::char_traits<char>]}
C {std::basic_iostream<_CharT, _Traits>::~basic_iostream() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>::~basic_ostream() [with _CharT = char, _Traits = std::char_traits<char>]}
F {virtual std::basic_stringbuf<char>::~basic_stringbuf()} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/sstream:60}
C {virtual std::basic_stringbuf<char>::~basic_stringbuf()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual std::basic_stringbuf<char>::~basic_stringbuf()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringbuf<char>::~basic_stringbuf()}
F {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:51}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::set<std::basic_string<char> >::~set()}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::set<std::basic_string<char> >::~set()}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::posix::Abort()}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fflush(FILE*)}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fprintf(FILE*, const char*, ...)}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatFileLocation(const char*, int)}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::operator!=(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::Message::GetString() const}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::_Rb_tree_const_iterator<_Tp>::operator!=(const _Self&) const [with _Tp = const char*, std::_Rb_tree_const_iterator<_Tp>::_Self = std::_Rb_tree_const_iterator<const char*>]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::set<_Key, _Compare, _Alloc>::iterator std::set<_Key, _Compare, _Alloc>::end() const [with _Key = const char*, _Compare = std::less<const char*>, _Alloc = std::allocator<const char*>, std::set<_Key, _Compare, _Alloc>::iterator = std::_Rb_tree_const_iterator<const char*>]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree_const_iterator<_Tp>::_Self& std::_Rb_tree_const_iterator<_Tp>::operator++() [with _Tp = const char*, std::_Rb_tree_const_iterator<_Tp>::_Self = std::_Rb_tree_const_iterator<const char*>]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [3], testing::Message = testing::Message]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [25], testing::Message = testing::Message]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Tp& std::_Rb_tree_const_iterator<_Tp>::operator*() const [with _Tp = const char*, std::_Rb_tree_const_iterator<_Tp>::reference = const char* const&]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::set<_Key, _Compare, _Alloc>::size_type std::set<_Key, _Compare, _Alloc>::count(const key_type&) const [with _Key = std::basic_string<char>, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::set<_Key, _Compare, _Alloc>::size_type = long unsigned int, std::set<_Key, _Compare, _Alloc>::key_type = std::basic_string<char>]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Tp& std::_Rb_tree_const_iterator<_Tp>::operator*() const [with _Tp = const char*, std::_Rb_tree_const_iterator<_Tp>::reference = const char* const&]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::set<_Key, _Compare, _Alloc>::iterator std::set<_Key, _Compare, _Alloc>::begin() const [with _Key = const char*, _Compare = std::less<const char*>, _Alloc = std::allocator<const char*>, std::set<_Key, _Compare, _Alloc>::iterator = std::_Rb_tree_const_iterator<const char*>]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::internal::SkipComma(const char*)}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [34], testing::Message = testing::Message]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = std::basic_string<char>, testing::Message = testing::Message]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [15], testing::Message = testing::Message]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::pair<typename std::_Rb_tree<_Key, _Key, std::_Identity<_Key>, _Compare, typename _Alloc::rebind<_Key>::other>::const_iterator, bool> std::set<_Key, _Compare, _Alloc>::insert(const value_type&) [with _Key = std::basic_string<char>, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, typename std::_Rb_tree<_Key, _Key, std::_Identity<_Key>, _Compare, typename _Alloc::rebind<_Key>::other>::const_iterator = std::_Rb_tree_const_iterator<std::basic_string<char> >, std::set<_Key, _Compare, _Alloc>::value_type = std::basic_string<char>]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::_Rb_tree_const_iterator<_Tp>::operator!=(const _Self&) const [with _Tp = const char*, std::_Rb_tree_const_iterator<_Tp>::_Self = std::_Rb_tree_const_iterator<const char*>]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::set<_Key, _Compare, _Alloc>::iterator std::set<_Key, _Compare, _Alloc>::end() const [with _Key = const char*, _Compare = std::less<const char*>, _Alloc = std::allocator<const char*>, std::set<_Key, _Compare, _Alloc>::iterator = std::_Rb_tree_const_iterator<const char*>]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree_const_iterator<_Tp>::_Self& std::_Rb_tree_const_iterator<_Tp>::operator++() [with _Tp = const char*, std::_Rb_tree_const_iterator<_Tp>::_Self = std::_Rb_tree_const_iterator<const char*>]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Tp& std::_Rb_tree_const_iterator<_Tp>::operator*() const [with _Tp = const char*, std::_Rb_tree_const_iterator<_Tp>::reference = const char* const&]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::set<_Key, _Compare, _Alloc>::iterator std::set<_Key, _Compare, _Alloc>::begin() const [with _Key = const char*, _Compare = std::less<const char*>, _Alloc = std::allocator<const char*>, std::set<_Key, _Compare, _Alloc>::iterator = std::_Rb_tree_const_iterator<const char*>]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [28], testing::Message = testing::Message]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = std::basic_string<char>, testing::Message = testing::Message]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [6], testing::Message = testing::Message]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::set<_Key, _Compare, _Alloc>::size_type std::set<_Key, _Compare, _Alloc>::count(const key_type&) const [with _Key = std::basic_string<char>, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::set<_Key, _Compare, _Alloc>::size_type = long unsigned int, std::set<_Key, _Compare, _Alloc>::key_type = std::basic_string<char>]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::GetPrefixUntilComma(const char*)}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::set<_Key, _Compare, _Alloc>::set() [with _Key = std::basic_string<char>, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
C {const char* testing::internal::TypedTestCasePState::VerifyRegisteredTestNames(const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::internal::SkipSpaces(const char*)}
F {const char* testing::internal::SkipSpaces(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:42}
C {const char* testing::internal::SkipSpaces(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsSpace(char)}
F {bool testing::internal::IsSpace(char)} {../third-party/gtest/include/gtest/internal/gtest-port.h:1671}
C {bool testing::internal::IsSpace(char)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int isspace(int)}
F {std::set<_Key, _Compare, _Alloc>::set() [with _Key = std::basic_string<char>, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_set.h:138}
C {std::set<_Key, _Compare, _Alloc>::set() [with _Key = std::basic_string<char>, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree() [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]}
F {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree() [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:616}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree() [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree_impl<_Key_compare, _Is_pod_comparator>::_Rb_tree_impl() [with _Key_compare = std::less<std::basic_string<char> >, bool _Is_pod_comparator = false, _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]}
F {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree_impl<_Key_compare, _Is_pod_comparator>::_Rb_tree_impl() [with _Key_compare = std::less<std::basic_string<char> >, bool _Is_pod_comparator = false, _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:443}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree_impl<_Key_compare, _Is_pod_comparator>::_Rb_tree_impl() [with _Key_compare = std::less<std::basic_string<char> >, bool _Is_pod_comparator = false, _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = std::_Rb_tree_node<std::basic_string<char> >]}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree_impl<_Key_compare, _Is_pod_comparator>::_Rb_tree_impl() [with _Key_compare = std::less<std::basic_string<char> >, bool _Is_pod_comparator = false, _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree_impl<_Key_compare, _Is_pod_comparator>::_M_initialize() [with _Key_compare = std::less<std::basic_string<char> >, bool _Is_pod_comparator = false, _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree_impl<_Key_compare, _Is_pod_comparator>::_Rb_tree_impl() [with _Key_compare = std::less<std::basic_string<char> >, bool _Is_pod_comparator = false, _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = std::_Rb_tree_node<std::basic_string<char> >]}
F {std::allocator<_Alloc>::allocator() [with _Tp = std::_Rb_tree_node<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:107}
C {std::allocator<_Alloc>::allocator() [with _Tp = std::_Rb_tree_node<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::_Rb_tree_node<std::basic_string<char> >]}
F {__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::_Rb_tree_node<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:69}
F {void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Rb_tree_impl<_Key_compare, _Is_pod_comparator>::_M_initialize() [with _Key_compare = std::less<std::basic_string<char> >, bool _Is_pod_comparator = false, _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:455}
F {std::allocator<_Alloc>::~allocator() [with _Tp = std::_Rb_tree_node<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:115}
C {std::allocator<_Alloc>::~allocator() [with _Tp = std::_Rb_tree_node<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::_Rb_tree_node<std::basic_string<char> >]}
F {__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::_Rb_tree_node<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:76}
F {std::string testing::internal::GetPrefixUntilComma(const char*)} {../third-party/gtest/include/gtest/internal/gtest-internal.h:553}
C {std::string testing::internal::GetPrefixUntilComma(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {std::string testing::internal::GetPrefixUntilComma(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {std::string testing::internal::GetPrefixUntilComma(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {std::string testing::internal::GetPrefixUntilComma(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {std::string testing::internal::GetPrefixUntilComma(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(_InputIterator, _InputIterator, const _Alloc&) [with _InputIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::GetPrefixUntilComma(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {std::string testing::internal::GetPrefixUntilComma(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::GetPrefixUntilComma(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {std::string testing::internal::GetPrefixUntilComma(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* strchr(const char*, int)}
F {const char* strchr(const char*, int)} {/usr/include/string.h:228}
C {const char* strchr(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {char* __builtin_strchr(const char*, int)}
F {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(_InputIterator, _InputIterator, const _Alloc&) [with _InputIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.tcc:229}
C {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(_InputIterator, _InputIterator, const _Alloc&) [with _InputIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(_CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(_InputIterator, _InputIterator, const _Alloc&) [with _InputIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&) [with _InIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&) [with _InIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:1710}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&) [with _InIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct_aux(_InIterator, _InIterator, const _Alloc&, std::__false_type) [with _InIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct_aux(_InIterator, _InIterator, const _Alloc&, std::__false_type) [with _InIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:1688}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct_aux(_InIterator, _InIterator, const _Alloc&, std::__false_type) [with _InIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.tcc:125}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_rethrow()}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_destroy(const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_begin_catch(void*)}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_eh_pointer(int)}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_CharT* std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_refdata() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_set_length_and_sharable(std::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void std::basic_string<_CharT, _Traits, _Alloc>::_S_copy_chars(_CharT*, const _CharT*, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_CharT* std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_refdata() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::basic_string<_CharT, _Traits, _Alloc>::_Rep* std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_S_create(std::basic_string<_CharT, _Traits, _Alloc>::size_type, std::basic_string<_CharT, _Traits, _Alloc>::size_type, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const char*, typename std::iterator_traits<_Iterator>::difference_type = long int]}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::__throw_logic_error(const char*)}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool __gnu_cxx::__is_null_pointer(_Type*) [with _Type = const char]}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_CharT* std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_refdata() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::basic_string<_CharT, _Traits, _Alloc>::_Rep& std::basic_string<_CharT, _Traits, _Alloc>::_S_empty_rep() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::operator==(const std::allocator<_Tp1>&, const std::allocator<_Tp1>&) [with _Tp = char]}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
F {bool std::operator==(const std::allocator<_Tp1>&, const std::allocator<_Tp1>&) [with _Tp = char]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:127}
F {bool __gnu_cxx::__is_null_pointer(_Type*) [with _Type = const char]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/type_traits.h:150}
F {typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const char*, typename std::iterator_traits<_Iterator>::difference_type = long int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator_base_funcs.h:113}
C {typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const char*, typename std::iterator_traits<_Iterator>::difference_type = long int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::iterator_traits<_Iterator>::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = const char*, typename std::iterator_traits<_Iterator>::difference_type = long int]}
C {typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const char*, typename std::iterator_traits<_Iterator>::difference_type = long int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::iterator_traits<_Iterator>::iterator_category std::__iterator_category(const _Iter&) [with _Iter = const char*, typename std::iterator_traits<_Iterator>::iterator_category = std::random_access_iterator_tag]}
F {typename std::iterator_traits<_Iterator>::iterator_category std::__iterator_category(const _Iter&) [with _Iter = const char*, typename std::iterator_traits<_Iterator>::iterator_category = std::random_access_iterator_tag]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator_base_types.h:202}
F {typename std::iterator_traits<_Iterator>::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = const char*, typename std::iterator_traits<_Iterator>::difference_type = long int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator_base_funcs.h:90}
F {static void std::basic_string<_CharT, _Traits, _Alloc>::_S_copy_chars(_CharT*, const _CharT*, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:398}
C {static void std::basic_string<_CharT, _Traits, _Alloc>::_S_copy_chars(_CharT*, const _CharT*, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void std::basic_string<_CharT, _Traits, _Alloc>::_M_copy(_CharT*, const _CharT*, std::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
F {static void std::basic_string<_CharT, _Traits, _Alloc>::_M_copy(_CharT*, const _CharT*, std::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:349}
C {static void std::basic_string<_CharT, _Traits, _Alloc>::_M_copy(_CharT*, const _CharT*, std::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::char_traits<char>::char_type* std::char_traits<char>::copy(std::char_traits<char>::char_type*, const char_type*, std::size_t)}
C {static void std::basic_string<_CharT, _Traits, _Alloc>::_M_copy(_CharT*, const _CharT*, std::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void std::char_traits<char>::assign(std::char_traits<char>::char_type&, const char_type&)}
F {static void std::char_traits<char>::assign(std::char_traits<char>::char_type&, const char_type&)} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/char_traits.h:244}
F {static std::char_traits<char>::char_type* std::char_traits<char>::copy(std::char_traits<char>::char_type*, const char_type*, std::size_t)} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/char_traits.h:272}
C {static std::char_traits<char>::char_type* std::char_traits<char>::copy(std::char_traits<char>::char_type*, const char_type*, std::size_t)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_memcpy(void*, const void*, long unsigned int)}
F {void std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_set_length_and_sharable(std::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:202}
C {void std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_set_length_and_sharable(std::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void std::char_traits<char>::assign(std::char_traits<char>::char_type&, const char_type&)}
C {void std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_set_length_and_sharable(std::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_CharT* std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_refdata() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_set_length_and_sharable(std::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_set_sharable() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_set_length_and_sharable(std::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {long int __builtin_expect(long int, long int)}
C {void std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_set_length_and_sharable(std::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::basic_string<_CharT, _Traits, _Alloc>::_Rep& std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_S_empty_rep() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::_Rep = std::basic_string<char>::_Rep]}
F {void std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_set_sharable() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:198}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [6], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [6], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [6], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [28], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [28], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [28], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:2460}
C {bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {int std::basic_string<_CharT, _Traits, _Alloc>::compare(const _CharT*) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {std::pair<typename std::_Rb_tree<_Key, _Key, std::_Identity<_Key>, _Compare, typename _Alloc::rebind<_Key>::other>::const_iterator, bool> std::set<_Key, _Compare, _Alloc>::insert(const value_type&) [with _Key = std::basic_string<char>, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, typename std::_Rb_tree<_Key, _Key, std::_Identity<_Key>, _Compare, typename _Alloc::rebind<_Key>::other>::const_iterator = std::_Rb_tree_const_iterator<std::basic_string<char> >, std::set<_Key, _Compare, _Alloc>::value_type = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_set.h:407}
C {std::pair<typename std::_Rb_tree<_Key, _Key, std::_Identity<_Key>, _Compare, typename _Alloc::rebind<_Key>::other>::const_iterator, bool> std::set<_Key, _Compare, _Alloc>::insert(const value_type&) [with _Key = std::basic_string<char>, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, typename std::_Rb_tree<_Key, _Key, std::_Identity<_Key>, _Compare, typename _Alloc::rebind<_Key>::other>::const_iterator = std::_Rb_tree_const_iterator<std::basic_string<char> >, std::set<_Key, _Compare, _Alloc>::value_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _T1 = std::_Rb_tree_const_iterator<std::basic_string<char> >, _T2 = bool]}
C {std::pair<typename std::_Rb_tree<_Key, _Key, std::_Identity<_Key>, _Compare, typename _Alloc::rebind<_Key>::other>::const_iterator, bool> std::set<_Key, _Compare, _Alloc>::insert(const value_type&) [with _Key = std::basic_string<char>, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, typename std::_Rb_tree<_Key, _Key, std::_Identity<_Key>, _Compare, typename _Alloc::rebind<_Key>::other>::const_iterator = std::_Rb_tree_const_iterator<std::basic_string<char> >, std::set<_Key, _Compare, _Alloc>::value_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree_const_iterator<_Tp>::_Rb_tree_const_iterator(const iterator&) [with _Tp = std::basic_string<char>, std::_Rb_tree_const_iterator<_Tp>::iterator = std::_Rb_tree_iterator<std::basic_string<char> >]}
C {std::pair<typename std::_Rb_tree<_Key, _Key, std::_Identity<_Key>, _Compare, typename _Alloc::rebind<_Key>::other>::const_iterator, bool> std::set<_Key, _Compare, _Alloc>::insert(const value_type&) [with _Key = std::basic_string<char>, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, typename std::_Rb_tree<_Key, _Key, std::_Identity<_Key>, _Compare, typename _Alloc::rebind<_Key>::other>::const_iterator = std::_Rb_tree_const_iterator<std::basic_string<char> >, std::set<_Key, _Compare, _Alloc>::value_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(const _Val&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]}
F {std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(const _Val&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:1254}
C {std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(const _Val&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _T1 = std::_Rb_tree_iterator<std::basic_string<char> >, _T2 = bool]}
C {std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(const _Val&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _T1 = std::_Rb_tree_iterator<std::basic_string<char> >, _T2 = bool]}
C {std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(const _Val&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr, const _Val&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator = std::_Rb_tree_iterator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr = const std::_Rb_tree_node_base*]}
C {std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(const _Val&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::less<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = std::basic_string<char>]}
C {std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(const _Val&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr = const std::_Rb_tree_node_base*]}
C {std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(const _Val&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Tp& std::_Identity<_Tp>::operator()(const _Tp&) const [with _Tp = std::basic_string<char>]}
C {std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(const _Val&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree_iterator<_Tp>::_Self& std::_Rb_tree_iterator<_Tp>::operator--() [with _Tp = std::basic_string<char>, std::_Rb_tree_iterator<_Tp>::_Self = std::_Rb_tree_iterator<std::basic_string<char> >]}
C {std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(const _Val&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _T1 = std::_Rb_tree_iterator<std::basic_string<char> >, _T2 = bool]}
C {std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(const _Val&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr, const _Val&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator = std::_Rb_tree_iterator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr = const std::_Rb_tree_node_base*]}
C {std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(const _Val&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::_Rb_tree_iterator<_Tp>::operator==(const _Self&) const [with _Tp = std::basic_string<char>, std::_Rb_tree_iterator<_Tp>::_Self = std::_Rb_tree_iterator<std::basic_string<char> >]}
C {std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(const _Val&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::begin() [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator = std::_Rb_tree_iterator<std::basic_string<char> >]}
C {std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(const _Val&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree_iterator<_Tp>::_Rb_tree_iterator(std::_Rb_tree_iterator<_Tp>::_Link_type) [with _Tp = std::basic_string<char>, std::_Rb_tree_iterator<_Tp>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*]}
C {std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(const _Val&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_right(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr = std::_Rb_tree_node_base*]}
C {std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(const _Val&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_left(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr = std::_Rb_tree_node_base*]}
C {std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(const _Val&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::less<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = std::basic_string<char>]}
C {std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(const _Val&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Tp& std::_Identity<_Tp>::operator()(const _Tp&) const [with _Tp = std::basic_string<char>]}
C {std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(const _Val&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<std::basic_string<char> >*]}
C {std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(const _Val&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_end() [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*]}
C {std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(const _Val&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_begin() [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*]}
F {std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_begin() [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:492}
F {std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_end() [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:503}
F {static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<std::basic_string<char> >*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:515}
C {static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<std::basic_string<char> >*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Tp& std::_Identity<_Tp>::operator()(const _Tp&) const [with _Tp = std::basic_string<char>]}
C {static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<std::basic_string<char> >*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static const value_type& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_value(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_reference = const std::basic_string<char>&, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::value_type = std::basic_string<char>, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<std::basic_string<char> >*]}
F {static const value_type& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_value(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_reference = const std::basic_string<char>&, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::value_type = std::basic_string<char>, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<std::basic_string<char> >*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:511}
F {static std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_left(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr = std::_Rb_tree_node_base*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:519}
F {static std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_right(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr = std::_Rb_tree_node_base*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:527}
F {std::_Rb_tree_iterator<_Tp>::_Rb_tree_iterator(std::_Rb_tree_iterator<_Tp>::_Link_type) [with _Tp = std::basic_string<char>, std::_Rb_tree_iterator<_Tp>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:173}
F {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::begin() [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator = std::_Rb_tree_iterator<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:650}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::begin() [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator = std::_Rb_tree_iterator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree_iterator<_Tp>::_Rb_tree_iterator(std::_Rb_tree_iterator<_Tp>::_Link_type) [with _Tp = std::basic_string<char>, std::_Rb_tree_iterator<_Tp>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*]}
F {bool std::_Rb_tree_iterator<_Tp>::operator==(const _Self&) const [with _Tp = std::basic_string<char>, std::_Rb_tree_iterator<_Tp>::_Self = std::_Rb_tree_iterator<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:216}
F {std::_Rb_tree_iterator<_Tp>::_Self& std::_Rb_tree_iterator<_Tp>::operator--() [with _Tp = std::basic_string<char>, std::_Rb_tree_iterator<_Tp>::_Self = std::_Rb_tree_iterator<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:201}
C {std::_Rb_tree_iterator<_Tp>::_Self& std::_Rb_tree_iterator<_Tp>::operator--() [with _Tp = std::basic_string<char>, std::_Rb_tree_iterator<_Tp>::_Self = std::_Rb_tree_iterator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree_node_base* std::_Rb_tree_decrement(std::_Rb_tree_node_base*)}
F {const _Tp& std::_Identity<_Tp>::operator()(const _Tp&) const [with _Tp = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_function.h:481}
F {static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr = const std::_Rb_tree_node_base*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:539}
C {static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr = const std::_Rb_tree_node_base*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Tp& std::_Identity<_Tp>::operator()(const _Tp&) const [with _Tp = std::basic_string<char>]}
C {static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr = const std::_Rb_tree_node_base*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static const value_type& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_value(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_reference = const std::basic_string<char>&, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::value_type = std::basic_string<char>, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr = const std::_Rb_tree_node_base*]}
F {static const value_type& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_value(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_reference = const std::basic_string<char>&, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::value_type = std::basic_string<char>, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr = const std::_Rb_tree_node_base*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:535}
F {bool std::less<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_function.h:235}
C {bool std::less<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::operator<(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {bool std::operator<(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:2510}
C {bool std::operator<(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {int std::basic_string<_CharT, _Traits, _Alloc>::compare(const std::basic_string<_CharT, _Traits, _Alloc>&) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
F {int std::basic_string<_CharT, _Traits, _Alloc>::compare(const std::basic_string<_CharT, _Traits, _Alloc>&) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:2173}
C {int std::basic_string<_CharT, _Traits, _Alloc>::compare(const std::basic_string<_CharT, _Traits, _Alloc>&) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static int std::basic_string<_CharT, _Traits, _Alloc>::_S_compare(std::basic_string<_CharT, _Traits, _Alloc>::size_type, std::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {int std::basic_string<_CharT, _Traits, _Alloc>::compare(const std::basic_string<_CharT, _Traits, _Alloc>&) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static int std::char_traits<char>::compare(const char_type*, const char_type*, std::size_t)}
C {int std::basic_string<_CharT, _Traits, _Alloc>::compare(const std::basic_string<_CharT, _Traits, _Alloc>&) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_CharT* std::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int std::basic_string<_CharT, _Traits, _Alloc>::compare(const std::basic_string<_CharT, _Traits, _Alloc>&) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::data() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int std::basic_string<_CharT, _Traits, _Alloc>::compare(const std::basic_string<_CharT, _Traits, _Alloc>&) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Tp& std::min(const _Tp&, const _Tp&) [with _Tp = long unsigned int]}
C {int std::basic_string<_CharT, _Traits, _Alloc>::compare(const std::basic_string<_CharT, _Traits, _Alloc>&) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {int std::basic_string<_CharT, _Traits, _Alloc>::compare(const std::basic_string<_CharT, _Traits, _Alloc>&) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
F {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:710}
C {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::_Rep* std::basic_string<_CharT, _Traits, _Alloc>::_M_rep() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {const _Tp& std::min(const _Tp&, const _Tp&) [with _Tp = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:187}
F {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::data() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:1776}
C {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::data() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_CharT* std::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {static int std::char_traits<char>::compare(const char_type*, const char_type*, std::size_t)} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/char_traits.h:256}
C {static int std::char_traits<char>::compare(const char_type*, const char_type*, std::size_t)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __builtin_memcmp(const void*, const void*, long unsigned int)}
F {static int std::basic_string<_CharT, _Traits, _Alloc>::_S_compare(std::basic_string<_CharT, _Traits, _Alloc>::size_type, std::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:402}
F {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr, const _Val&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator = std::_Rb_tree_iterator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr = const std::_Rb_tree_node_base*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:950}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr, const _Val&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator = std::_Rb_tree_iterator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr = const std::_Rb_tree_node_base*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree_iterator<_Tp>::_Rb_tree_iterator(std::_Rb_tree_iterator<_Tp>::_Link_type) [with _Tp = std::basic_string<char>, std::_Rb_tree_iterator<_Tp>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*]}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr, const _Val&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator = std::_Rb_tree_iterator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr = const std::_Rb_tree_node_base*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr, const _Val&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator = std::_Rb_tree_iterator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr = const std::_Rb_tree_node_base*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_create_node(const value_type&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::value_type = std::basic_string<char>]}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr, const _Val&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator = std::_Rb_tree_iterator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr = const std::_Rb_tree_node_base*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::less<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = std::basic_string<char>]}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr, const _Val&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator = std::_Rb_tree_iterator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr = const std::_Rb_tree_node_base*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Tp& std::_Identity<_Tp>::operator()(const _Tp&) const [with _Tp = std::basic_string<char>]}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr, const _Val&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator = std::_Rb_tree_iterator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr = const std::_Rb_tree_node_base*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr = const std::_Rb_tree_node_base*]}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr, const _Val&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator = std::_Rb_tree_iterator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr = const std::_Rb_tree_node_base*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_end() [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*]}
F {std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_create_node(const value_type&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::value_type = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:377}
C {std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_create_node(const value_type&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::value_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_rethrow()}
C {std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_create_node(const value_type&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::value_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_put_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*]}
C {std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_create_node(const value_type&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::value_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_begin_catch(void*)}
C {std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_create_node(const value_type&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::value_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_eh_pointer(int)}
C {std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_create_node(const value_type&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::value_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_create_node(const value_type&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::value_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = std::basic_string<char>]}
C {std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_create_node(const value_type&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::value_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = std::basic_string<char>]}
C {std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_create_node(const value_type&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::value_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = std::basic_string<char>, __gnu_cxx::new_allocator<_Tp>::pointer = std::basic_string<char>*]}
C {std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_create_node(const value_type&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::value_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::allocator_type std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::get_allocator() const [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::allocator_type = std::allocator<std::basic_string<char> >]}
C {std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_create_node(const value_type&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::value_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_Tp* std::__addressof(_Tp&) [with _Tp = std::basic_string<char>]}
C {std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_create_node(const value_type&) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::value_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_node() [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*]}
F {std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_node() [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:368}
C {std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_node() [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::_Rb_tree_node<std::basic_string<char> >, __gnu_cxx::new_allocator<_Tp>::pointer = std::_Rb_tree_node<std::basic_string<char> >*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::_Rb_tree_node<std::basic_string<char> >, __gnu_cxx::new_allocator<_Tp>::pointer = std::_Rb_tree_node<std::basic_string<char> >*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:87}
C {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::_Rb_tree_node<std::basic_string<char> >, __gnu_cxx::new_allocator<_Tp>::pointer = std::_Rb_tree_node<std::basic_string<char> >*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::_Rb_tree_node<std::basic_string<char> >, __gnu_cxx::new_allocator<_Tp>::pointer = std::_Rb_tree_node<std::basic_string<char> >*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::__throw_bad_alloc()}
C {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::_Rb_tree_node<std::basic_string<char> >, __gnu_cxx::new_allocator<_Tp>::pointer = std::_Rb_tree_node<std::basic_string<char> >*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = std::_Rb_tree_node<std::basic_string<char> >, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = std::_Rb_tree_node<std::basic_string<char> >, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:101}
F {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::allocator_type std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::get_allocator() const [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::allocator_type = std::allocator<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:363}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::allocator_type std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::get_allocator() const [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::allocator_type = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::_Rb_tree_node<std::basic_string<char> >, _Tp = std::basic_string<char>]}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::allocator_type std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::get_allocator() const [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::allocator_type = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Node_allocator& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_Node_allocator() const [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Node_allocator = std::allocator<std::_Rb_tree_node<std::basic_string<char> > >]}
F {const _Node_allocator& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_Node_allocator() const [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Node_allocator = std::allocator<std::_Rb_tree_node<std::basic_string<char> > >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:359}
F {std::allocator<_Alloc>::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::_Rb_tree_node<std::basic_string<char> >, _Tp = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:113}
C {std::allocator<_Alloc>::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::_Rb_tree_node<std::basic_string<char> >, _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::basic_string<char>]}
F {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = std::basic_string<char>, __gnu_cxx::new_allocator<_Tp>::pointer = std::basic_string<char>*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:107}
C {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = std::basic_string<char>, __gnu_cxx::new_allocator<_Tp>::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*, void*)}
C {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = std::basic_string<char>, __gnu_cxx::new_allocator<_Tp>::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = std::basic_string<char>, __gnu_cxx::new_allocator<_Tp>::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t, void*)}
F {void* operator new(std::size_t, void*)} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/new:103}
F {void operator delete(void*, void*)} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/new:107}
F {void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_put_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:372}
C {void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_put_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::_Rb_tree_node<std::basic_string<char> >, __gnu_cxx::new_allocator<_Tp>::pointer = std::_Rb_tree_node<std::basic_string<char> >*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::_Rb_tree_node<std::basic_string<char> >, __gnu_cxx::new_allocator<_Tp>::pointer = std::_Rb_tree_node<std::basic_string<char> >*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:97}
C {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::_Rb_tree_node<std::basic_string<char> >, __gnu_cxx::new_allocator<_Tp>::pointer = std::_Rb_tree_node<std::basic_string<char> >*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
F {std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _T1 = std::_Rb_tree_iterator<std::basic_string<char> >, _T2 = bool]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_pair.h:103}
F {std::_Rb_tree_const_iterator<_Tp>::_Rb_tree_const_iterator(const iterator&) [with _Tp = std::basic_string<char>, std::_Rb_tree_const_iterator<_Tp>::iterator = std::_Rb_tree_iterator<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:249}
F {std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _T1 = std::_Rb_tree_const_iterator<std::basic_string<char> >, _T2 = bool]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_pair.h:103}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [15], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [15], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [15], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::Message& testing::Message::operator<<(const T&) [with T = std::basic_string<char>, testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = std::basic_string<char>, testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = std::basic_string<char>, testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:2693}
C {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::__ostream_insert(std::basic_ostream<_CharT, _Traits>&, const _CharT*, std::streamsize) [with _CharT = char, _Traits = std::char_traits<char>, std::streamsize = long int]}
C {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::data() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [34], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [34], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [34], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {const char* testing::internal::SkipComma(const char*)} {../third-party/gtest/include/gtest/internal/gtest-internal.h:542}
C {const char* testing::internal::SkipComma(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsSpace(char)}
C {const char* testing::internal::SkipComma(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* strchr(const char*, int)}
F {std::set<_Key, _Compare, _Alloc>::iterator std::set<_Key, _Compare, _Alloc>::begin() const [with _Key = const char*, _Compare = std::less<const char*>, _Alloc = std::allocator<const char*>, std::set<_Key, _Compare, _Alloc>::iterator = std::_Rb_tree_const_iterator<const char*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_set.h:294}
C {std::set<_Key, _Compare, _Alloc>::iterator std::set<_Key, _Compare, _Alloc>::begin() const [with _Key = const char*, _Compare = std::less<const char*>, _Alloc = std::allocator<const char*>, std::set<_Key, _Compare, _Alloc>::iterator = std::_Rb_tree_const_iterator<const char*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::begin() const [with _Key = const char*, _Val = const char*, _KeyOfValue = std::_Identity<const char*>, _Compare = std::less<const char*>, _Alloc = std::allocator<const char*>, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<const char*>]}
F {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::begin() const [with _Key = const char*, _Val = const char*, _KeyOfValue = std::_Identity<const char*>, _Compare = std::less<const char*>, _Alloc = std::allocator<const char*>, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<const char*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:657}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::begin() const [with _Key = const char*, _Val = const char*, _KeyOfValue = std::_Identity<const char*>, _Compare = std::less<const char*>, _Alloc = std::allocator<const char*>, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<const char*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree_const_iterator<_Tp>::_Rb_tree_const_iterator(std::_Rb_tree_const_iterator<_Tp>::_Link_type) [with _Tp = const char*, std::_Rb_tree_const_iterator<_Tp>::_Link_type = const std::_Rb_tree_node<const char*>*]}
F {std::_Rb_tree_const_iterator<_Tp>::_Rb_tree_const_iterator(std::_Rb_tree_const_iterator<_Tp>::_Link_type) [with _Tp = const char*, std::_Rb_tree_const_iterator<_Tp>::_Link_type = const std::_Rb_tree_node<const char*>*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:246}
F {std::set<_Key, _Compare, _Alloc>::size_type std::set<_Key, _Compare, _Alloc>::count(const key_type&) const [with _Key = std::basic_string<char>, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::set<_Key, _Compare, _Alloc>::size_type = long unsigned int, std::set<_Key, _Compare, _Alloc>::key_type = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_set.h:586}
C {std::set<_Key, _Compare, _Alloc>::size_type std::set<_Key, _Compare, _Alloc>::count(const key_type&) const [with _Key = std::basic_string<char>, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::set<_Key, _Compare, _Alloc>::size_type = long unsigned int, std::set<_Key, _Compare, _Alloc>::key_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::_Rb_tree_const_iterator<_Tp>::operator==(const _Self&) const [with _Tp = std::basic_string<char>, std::_Rb_tree_const_iterator<_Tp>::_Self = std::_Rb_tree_const_iterator<std::basic_string<char> >]}
C {std::set<_Key, _Compare, _Alloc>::size_type std::set<_Key, _Compare, _Alloc>::count(const key_type&) const [with _Key = std::basic_string<char>, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::set<_Key, _Compare, _Alloc>::size_type = long unsigned int, std::set<_Key, _Compare, _Alloc>::key_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::find(const _Key&) const [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::basic_string<char> >]}
C {std::set<_Key, _Compare, _Alloc>::size_type std::set<_Key, _Compare, _Alloc>::count(const key_type&) const [with _Key = std::basic_string<char>, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::set<_Key, _Compare, _Alloc>::size_type = long unsigned int, std::set<_Key, _Compare, _Alloc>::key_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::end() const [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::basic_string<char> >]}
F {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::end() const [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:668}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::end() const [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree_const_iterator<_Tp>::_Rb_tree_const_iterator(std::_Rb_tree_const_iterator<_Tp>::_Link_type) [with _Tp = std::basic_string<char>, std::_Rb_tree_const_iterator<_Tp>::_Link_type = const std::_Rb_tree_node<std::basic_string<char> >*]}
F {std::_Rb_tree_const_iterator<_Tp>::_Rb_tree_const_iterator(std::_Rb_tree_const_iterator<_Tp>::_Link_type) [with _Tp = std::basic_string<char>, std::_Rb_tree_const_iterator<_Tp>::_Link_type = const std::_Rb_tree_node<std::basic_string<char> >*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:246}
F {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::find(const _Key&) const [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:1536}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::find(const _Key&) const [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::end() const [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::basic_string<char> >]}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::find(const _Key&) const [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::less<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = std::basic_string<char>]}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::find(const _Key&) const [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr = const std::_Rb_tree_node_base*]}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::find(const _Key&) const [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::_Rb_tree_const_iterator<_Tp>::operator==(const _Self&) const [with _Tp = std::basic_string<char>, std::_Rb_tree_const_iterator<_Tp>::_Self = std::_Rb_tree_const_iterator<std::basic_string<char> >]}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::find(const _Key&) const [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::end() const [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::basic_string<char> >]}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::find(const _Key&) const [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_lower_bound(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type, const _Key&) const [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<std::basic_string<char> >*]}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::find(const _Key&) const [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_begin() const [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<std::basic_string<char> >*]}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::find(const _Key&) const [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_end() const [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<std::basic_string<char> >*]}
F {const std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_end() const [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<std::basic_string<char> >*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:507}
F {const std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_begin() const [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<std::basic_string<char> >*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:496}
F {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_lower_bound(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type, const _Key&) const [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<std::basic_string<char> >*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:1091}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_lower_bound(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type, const _Key&) const [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<std::basic_string<char> >*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree_const_iterator<_Tp>::_Rb_tree_const_iterator(std::_Rb_tree_const_iterator<_Tp>::_Link_type) [with _Tp = std::basic_string<char>, std::_Rb_tree_const_iterator<_Tp>::_Link_type = const std::_Rb_tree_node<std::basic_string<char> >*]}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_lower_bound(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type, const _Key&) const [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<std::basic_string<char> >*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static const std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_right(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<std::basic_string<char> >*, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr = const std::_Rb_tree_node_base*]}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_lower_bound(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type, const _Key&) const [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<std::basic_string<char> >*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static const std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_left(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<std::basic_string<char> >*, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr = const std::_Rb_tree_node_base*]}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_lower_bound(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type, const _Key&) const [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<std::basic_string<char> >*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::less<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = std::basic_string<char>]}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_lower_bound(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type, const _Key&) const [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<std::basic_string<char> >*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static const _Key& std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_key(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<std::basic_string<char> >*]}
F {static const std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_left(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<std::basic_string<char> >*, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr = const std::_Rb_tree_node_base*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:523}
F {static const std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_right(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Link_type = const std::_Rb_tree_node<std::basic_string<char> >*, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Const_Base_ptr = const std::_Rb_tree_node_base*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:531}
F {bool std::_Rb_tree_const_iterator<_Tp>::operator==(const _Self&) const [with _Tp = std::basic_string<char>, std::_Rb_tree_const_iterator<_Tp>::_Self = std::_Rb_tree_const_iterator<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:297}
F {const _Tp& std::_Rb_tree_const_iterator<_Tp>::operator*() const [with _Tp = const char*, std::_Rb_tree_const_iterator<_Tp>::reference = const char* const&]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:258}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [25], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [25], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [25], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:149}
C {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
C {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [3], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [3], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [3], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {std::_Rb_tree_const_iterator<_Tp>::_Self& std::_Rb_tree_const_iterator<_Tp>::operator++() [with _Tp = const char*, std::_Rb_tree_const_iterator<_Tp>::_Self = std::_Rb_tree_const_iterator<const char*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:267}
C {std::_Rb_tree_const_iterator<_Tp>::_Self& std::_Rb_tree_const_iterator<_Tp>::operator++() [with _Tp = const char*, std::_Rb_tree_const_iterator<_Tp>::_Self = std::_Rb_tree_const_iterator<const char*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const std::_Rb_tree_node_base* std::_Rb_tree_increment(const std::_Rb_tree_node_base*)}
F {std::set<_Key, _Compare, _Alloc>::iterator std::set<_Key, _Compare, _Alloc>::end() const [with _Key = const char*, _Compare = std::less<const char*>, _Alloc = std::allocator<const char*>, std::set<_Key, _Compare, _Alloc>::iterator = std::_Rb_tree_const_iterator<const char*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_set.h:303}
C {std::set<_Key, _Compare, _Alloc>::iterator std::set<_Key, _Compare, _Alloc>::end() const [with _Key = const char*, _Compare = std::less<const char*>, _Alloc = std::allocator<const char*>, std::set<_Key, _Compare, _Alloc>::iterator = std::_Rb_tree_const_iterator<const char*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::end() const [with _Key = const char*, _Val = const char*, _KeyOfValue = std::_Identity<const char*>, _Compare = std::less<const char*>, _Alloc = std::allocator<const char*>, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<const char*>]}
F {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::end() const [with _Key = const char*, _Val = const char*, _KeyOfValue = std::_Identity<const char*>, _Compare = std::less<const char*>, _Alloc = std::allocator<const char*>, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<const char*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:668}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::end() const [with _Key = const char*, _Val = const char*, _KeyOfValue = std::_Identity<const char*>, _Compare = std::less<const char*>, _Alloc = std::allocator<const char*>, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<const char*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree_const_iterator<_Tp>::_Rb_tree_const_iterator(std::_Rb_tree_const_iterator<_Tp>::_Link_type) [with _Tp = const char*, std::_Rb_tree_const_iterator<_Tp>::_Link_type = const std::_Rb_tree_node<const char*>*]}
F {bool std::_Rb_tree_const_iterator<_Tp>::operator!=(const _Self&) const [with _Tp = const char*, std::_Rb_tree_const_iterator<_Tp>::_Self = std::_Rb_tree_const_iterator<const char*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:301}
F {bool std::operator!=(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:2497}
C {bool std::operator!=(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:1766}
C {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_CharT* std::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {void testing::internal::posix::Abort()} {../third-party/gtest/include/gtest/internal/gtest-port.h:1816}
C {void testing::internal::posix::Abort()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void abort()}
F {std::set<std::basic_string<char> >::~set()} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_set.h:89}
C {std::set<std::basic_string<char> >::~set()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::~_Rb_tree() [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]}
F {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::~_Rb_tree() [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:638}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::~_Rb_tree() [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree<std::basic_string<char>, std::basic_string<char>, std::_Identity<std::basic_string<char> >, std::less<std::basic_string<char> >, std::allocator<std::basic_string<char> > >::_Rb_tree_impl<std::less<std::basic_string<char> >, false>::~_Rb_tree_impl()}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::~_Rb_tree() [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree<std::basic_string<char>, std::basic_string<char>, std::_Identity<std::basic_string<char> >, std::less<std::basic_string<char> >, std::allocator<std::basic_string<char> > >::_Rb_tree_impl<std::less<std::basic_string<char> >, false>::~_Rb_tree_impl()}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::~_Rb_tree() [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*]}
C {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::~_Rb_tree() [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_begin() [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*]}
F {void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:1058}
C {void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_destroy_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*]}
C {void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_left(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr = std::_Rb_tree_node_base*]}
C {void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*]}
C {void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_erase(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_S_right(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Base_ptr = std::_Rb_tree_node_base*]}
F {void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_destroy_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:392}
C {void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_destroy_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = std::basic_string<char>]}
C {void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_destroy_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_put_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*]}
C {void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_destroy_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = std::basic_string<char>]}
C {void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_destroy_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::destroy(__gnu_cxx::new_allocator<_Tp>::pointer) [with _Tp = std::basic_string<char>, __gnu_cxx::new_allocator<_Tp>::pointer = std::basic_string<char>*]}
C {void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_destroy_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::allocator_type std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::get_allocator() const [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::allocator_type = std::allocator<std::basic_string<char> >]}
C {void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_destroy_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type) [with _Key = std::basic_string<char>, _Val = std::basic_string<char>, _KeyOfValue = std::_Identity<std::basic_string<char> >, _Compare = std::less<std::basic_string<char> >, _Alloc = std::allocator<std::basic_string<char> >, std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::basic_string<char> >*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_Tp* std::__addressof(_Tp&) [with _Tp = std::basic_string<char>]}
F {void __gnu_cxx::new_allocator<_Tp>::destroy(__gnu_cxx::new_allocator<_Tp>::pointer) [with _Tp = std::basic_string<char>, __gnu_cxx::new_allocator<_Tp>::pointer = std::basic_string<char>*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:118}
C {void __gnu_cxx::new_allocator<_Tp>::destroy(__gnu_cxx::new_allocator<_Tp>::pointer) [with _Tp = std::basic_string<char>, __gnu_cxx::new_allocator<_Tp>::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {std::_Rb_tree<std::basic_string<char>, std::basic_string<char>, std::_Identity<std::basic_string<char> >, std::less<std::basic_string<char> >, std::allocator<std::basic_string<char> > >::_Rb_tree_impl<std::less<std::basic_string<char> >, false>::~_Rb_tree_impl()} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_tree.h:437}
C {std::_Rb_tree<std::basic_string<char>, std::basic_string<char>, std::_Identity<std::basic_string<char> >, std::less<std::basic_string<char> >, std::allocator<std::basic_string<char> > >::_Rb_tree_impl<std::less<std::basic_string<char> >, false>::~_Rb_tree_impl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = std::_Rb_tree_node<std::basic_string<char> >]}
F {virtual void testing::internal::HasNewFatalFailureHelper::ReportTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-test-part.cc:101}
C {virtual void testing::internal::HasNewFatalFailureHelper::ReportTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::TestPartResult::fatally_failed() const}
F {bool testing::TestPartResult::fatally_failed() const} {../third-party/gtest/include/gtest/gtest-test-part.h:100}
F {virtual testing::internal::HasNewFatalFailureHelper::~HasNewFatalFailureHelper()} {../third-party/gtest/src/gtest-test-part.cc:96}
C {virtual testing::internal::HasNewFatalFailureHelper::~HasNewFatalFailureHelper()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual testing::internal::HasNewFatalFailureHelper::~HasNewFatalFailureHelper()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::HasNewFatalFailureHelper::~HasNewFatalFailureHelper()}
F {testing::internal::HasNewFatalFailureHelper::~HasNewFatalFailureHelper()} {../third-party/gtest/src/gtest-test-part.cc:96}
C {testing::internal::HasNewFatalFailureHelper::~HasNewFatalFailureHelper()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResultReporterInterface::~TestPartResultReporterInterface()}
C {testing::internal::HasNewFatalFailureHelper::~HasNewFatalFailureHelper()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::HasNewFatalFailureHelper::~HasNewFatalFailureHelper()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResultReporterInterface::~TestPartResultReporterInterface()}
C {testing::internal::HasNewFatalFailureHelper::~HasNewFatalFailureHelper()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::UnitTestImpl::SetTestPartResultReporterForCurrentThread(testing::TestPartResultReporterInterface*)}
C {testing::internal::HasNewFatalFailureHelper::~HasNewFatalFailureHelper()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UnitTestImpl* testing::internal::GetUnitTestImpl()}
F {testing::internal::UnitTestImpl* testing::internal::GetUnitTestImpl()} {../third-party/gtest/src/gtest-internal-inl.h:936}
C {testing::internal::UnitTestImpl* testing::internal::GetUnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UnitTestImpl* testing::UnitTest::impl()}
C {testing::internal::UnitTestImpl* testing::internal::GetUnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {static testing::UnitTest* testing::UnitTest::GetInstance()}
F {testing::internal::UnitTestImpl* testing::UnitTest::impl()} {../third-party/gtest/include/gtest/gtest.h:1255}
F {testing::internal::HasNewFatalFailureHelper::HasNewFatalFailureHelper()} {../third-party/gtest/src/gtest-test-part.cc:89}
C {testing::internal::HasNewFatalFailureHelper::HasNewFatalFailureHelper()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResultReporterInterface::~TestPartResultReporterInterface()}
C {testing::internal::HasNewFatalFailureHelper::HasNewFatalFailureHelper()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::UnitTestImpl::SetTestPartResultReporterForCurrentThread(testing::TestPartResultReporterInterface*)}
C {testing::internal::HasNewFatalFailureHelper::HasNewFatalFailureHelper()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UnitTestImpl* testing::internal::GetUnitTestImpl()}
C {testing::internal::HasNewFatalFailureHelper::HasNewFatalFailureHelper()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResultReporterInterface* testing::internal::UnitTestImpl::GetTestPartResultReporterForCurrentThread()}
C {testing::internal::HasNewFatalFailureHelper::HasNewFatalFailureHelper()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UnitTestImpl* testing::internal::GetUnitTestImpl()}
C {testing::internal::HasNewFatalFailureHelper::HasNewFatalFailureHelper()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResultReporterInterface::TestPartResultReporterInterface()}
F {testing::TestPartResultReporterInterface::TestPartResultReporterInterface()} {../third-party/gtest/include/gtest/gtest-test-part.h:146}
F {int testing::TestPartResultArray::size() const} {../third-party/gtest/src/gtest-test-part.cc:83}
C {int testing::TestPartResultArray::size() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:570}
F {const testing::TestPartResult& testing::TestPartResultArray::GetTestPartResult(int) const} {../third-party/gtest/src/gtest-test-part.cc:73}
C {const testing::TestPartResult& testing::TestPartResultArray::GetTestPartResult(int) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::const_reference = const testing::TestPartResult&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {const testing::TestPartResult& testing::TestPartResultArray::GetTestPartResult(int) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::posix::Abort()}
C {const testing::TestPartResult& testing::TestPartResultArray::GetTestPartResult(int) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int printf(const char*, ...)}
C {const testing::TestPartResult& testing::TestPartResultArray::GetTestPartResult(int) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::TestPartResultArray::size() const}
F {std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::const_reference = const testing::TestPartResult&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:710}
F {void testing::TestPartResultArray::Append(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-test-part.cc:68}
C {void testing::TestPartResultArray::Append(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::value_type = testing::TestPartResult]}
F {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::value_type = testing::TestPartResult]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:826}
C {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::value_type = testing::TestPartResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]}
C {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::value_type = testing::TestPartResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]}
C {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::value_type = testing::TestPartResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::TestPartResult, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestPartResult*]}
F {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::TestPartResult, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestPartResult*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:107}
C {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::TestPartResult, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*, void*)}
C {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::TestPartResult, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResult::TestPartResult(const testing::TestPartResult&)}
C {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::TestPartResult, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t, void*)}
F {testing::TestPartResult::TestPartResult(const testing::TestPartResult&)} {../third-party/gtest/include/gtest/gtest-test-part.h:47}
C {testing::TestPartResult::TestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestPartResult::TestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestPartResult::TestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {testing::TestPartResult::TestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {testing::TestPartResult::TestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
F {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:481}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::TestPartResult*, _Container = std::vector<testing::TestPartResult>]}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::TestPartResult*, _Container = std::vector<testing::TestPartResult>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:720}
F {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/vector.tcc:300}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_rethrow()}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestPartResult*, std::size_t = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::TestPartResult*, _Tp = testing::TestPartResult]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestPartResult>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::destroy(__gnu_cxx::new_allocator<_Tp>::pointer) [with _Tp = testing::TestPartResult, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestPartResult*]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_begin_catch(void*)}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_eh_pointer(int)}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResult::~TestPartResult()}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestPartResult*, std::size_t = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::TestPartResult*, _Tp = testing::TestPartResult]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestPartResult>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = testing::TestPartResult*, _ForwardIterator = testing::TestPartResult*, _Allocator = std::allocator<testing::TestPartResult>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestPartResult*, _Container = std::vector<testing::TestPartResult>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestPartResult>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = testing::TestPartResult*, _ForwardIterator = testing::TestPartResult*, _Allocator = std::allocator<testing::TestPartResult>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestPartResult*, _Container = std::vector<testing::TestPartResult>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestPartResult>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::TestPartResult, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestPartResult*]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename _Alloc::rebind<_Tp>::other::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestPartResult*, std::size_t = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestPartResult*, _Container = std::vector<testing::TestPartResult>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResult::~TestPartResult()}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResult& testing::TestPartResult::operator=(const testing::TestPartResult&)}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::TestPartResult*, _Container = std::vector<testing::TestPartResult>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::TestPartResult&]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::TestPartResult*, _BI2 = testing::TestPartResult*]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestPartResult*, _Container = std::vector<testing::TestPartResult>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResult::TestPartResult(const testing::TestPartResult&)}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::TestPartResult, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestPartResult*]}
F {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::TestPartResult*, _BI2 = testing::TestPartResult*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:613}
C {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::TestPartResult*, _BI2 = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestPartResult*, _BI2 = testing::TestPartResult*]}
C {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::TestPartResult*, _BI2 = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::TestPartResult*, typename std::_Miter_base<_Iterator>::iterator_type = testing::TestPartResult*]}
C {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::TestPartResult*, _BI2 = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::TestPartResult*, typename std::_Miter_base<_Iterator>::iterator_type = testing::TestPartResult*]}
F {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::TestPartResult*, typename std::_Miter_base<_Iterator>::iterator_type = testing::TestPartResult*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:282}
C {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::TestPartResult*, typename std::_Miter_base<_Iterator>::iterator_type = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = testing::TestPartResult*, bool _HasBase = false, std::_Iter_base<_Iterator, _HasBase>::iterator_type = testing::TestPartResult*]}
F {static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = testing::TestPartResult*, bool _HasBase = false, std::_Iter_base<_Iterator, _HasBase>::iterator_type = testing::TestPartResult*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator_base_types.h:213}
F {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestPartResult*, _BI2 = testing::TestPartResult*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:586}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestPartResult*, _BI2 = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestPartResult*, _BI2 = testing::TestPartResult*]}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestPartResult*, _BI2 = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestPartResult*, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestPartResult*]}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestPartResult*, _BI2 = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestPartResult*, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestPartResult*]}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestPartResult*, _BI2 = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestPartResult*, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestPartResult*]}
F {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestPartResult*, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestPartResult*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:271}
C {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestPartResult*, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = testing::TestPartResult*, bool _HasBase = false, std::_Iter_base<_Iterator, _HasBase>::iterator_type = testing::TestPartResult*]}
F {_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestPartResult*, _BI2 = testing::TestPartResult*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:568}
C {_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestPartResult*, _BI2 = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _BI2 std::__copy_move_backward<false, false, std::random_access_iterator_tag>::__copy_move_b(_BI1, _BI1, _BI2) [with _BI1 = testing::TestPartResult*, _BI2 = testing::TestPartResult*]}
F {static _BI2 std::__copy_move_backward<false, false, std::random_access_iterator_tag>::__copy_move_b(_BI1, _BI1, _BI2) [with _BI1 = testing::TestPartResult*, _BI2 = testing::TestPartResult*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:527}
C {static _BI2 std::__copy_move_backward<false, false, std::random_access_iterator_tag>::__copy_move_b(_BI1, _BI1, _BI2) [with _BI1 = testing::TestPartResult*, _BI2 = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResult& testing::TestPartResult::operator=(const testing::TestPartResult&)}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::TestPartResult*, _Container = std::vector<testing::TestPartResult>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::TestPartResult&]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:732}
F {testing::TestPartResult& testing::TestPartResult::operator=(const testing::TestPartResult&)} {../third-party/gtest/include/gtest/gtest-test-part.h:47}
C {testing::TestPartResult& testing::TestPartResult::operator=(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {testing::TestPartResult& testing::TestPartResult::operator=(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {testing::TestPartResult& testing::TestPartResult::operator=(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
F {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:541}
C {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::assign(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
F {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:1239}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::__throw_length_error(const char*)}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:210}
F {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:575}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = testing::TestPartResult, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestPartResult>]}
F {const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestPartResult>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:99}
F {__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = testing::TestPartResult, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:101}
F {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:463}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::TestPartResult*, _Container = std::vector<testing::TestPartResult>]}
F {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestPartResult*, _Container = std::vector<testing::TestPartResult>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:890}
C {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestPartResult*, _Container = std::vector<testing::TestPartResult>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestPartResult*, _Container = std::vector<testing::TestPartResult>]}
C {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestPartResult*, _Container = std::vector<testing::TestPartResult>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestPartResult*, _Container = std::vector<testing::TestPartResult>]}
F {typename _Alloc::rebind<_Tp>::other::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestPartResult*, std::size_t = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:149}
C {typename _Alloc::rebind<_Tp>::other::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestPartResult*, std::size_t = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::TestPartResult, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestPartResult*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::TestPartResult, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestPartResult*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:87}
C {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::TestPartResult, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestPartResult*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::TestPartResult, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestPartResult*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::__throw_bad_alloc()}
C {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::TestPartResult, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestPartResult*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = testing::TestPartResult, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestPartResult*, _Container = std::vector<testing::TestPartResult>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:784}
F {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = testing::TestPartResult*, _ForwardIterator = testing::TestPartResult*, _Allocator = std::allocator<testing::TestPartResult>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:264}
C {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = testing::TestPartResult*, _ForwardIterator = testing::TestPartResult*, _Allocator = std::allocator<testing::TestPartResult>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = testing::TestPartResult*, _ForwardIterator = testing::TestPartResult*, _Tp = testing::TestPartResult]}
F {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = testing::TestPartResult*, _ForwardIterator = testing::TestPartResult*, _Tp = testing::TestPartResult]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:257}
C {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = testing::TestPartResult*, _ForwardIterator = testing::TestPartResult*, _Tp = testing::TestPartResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestPartResult*, _ForwardIterator = testing::TestPartResult*]}
F {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestPartResult*, _ForwardIterator = testing::TestPartResult*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:109}
C {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestPartResult*, _ForwardIterator = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestPartResult*, _ForwardIterator = testing::TestPartResult*, bool _TrivialValueTypes = false]}
F {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestPartResult*, _ForwardIterator = testing::TestPartResult*, bool _TrivialValueTypes = false]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:70}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestPartResult*, _ForwardIterator = testing::TestPartResult*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_rethrow()}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestPartResult*, _ForwardIterator = testing::TestPartResult*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::TestPartResult*]}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestPartResult*, _ForwardIterator = testing::TestPartResult*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_begin_catch(void*)}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestPartResult*, _ForwardIterator = testing::TestPartResult*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_eh_pointer(int)}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestPartResult*, _ForwardIterator = testing::TestPartResult*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestPartResult*, _ForwardIterator = testing::TestPartResult*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Construct(_T1*, const _T2&) [with _T1 = testing::TestPartResult, _T2 = testing::TestPartResult]}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestPartResult*, _ForwardIterator = testing::TestPartResult*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_Tp* std::__addressof(_Tp&) [with _Tp = testing::TestPartResult]}
F {_Tp* std::__addressof(_Tp&) [with _Tp = testing::TestPartResult]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/move.h:43}
F {void std::_Construct(_T1*, const _T2&) [with _T1 = testing::TestPartResult, _T2 = testing::TestPartResult]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:80}
C {void std::_Construct(_T1*, const _T2&) [with _T1 = testing::TestPartResult, _T2 = testing::TestPartResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*, void*)}
C {void std::_Construct(_T1*, const _T2&) [with _T1 = testing::TestPartResult, _T2 = testing::TestPartResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResult::TestPartResult(const testing::TestPartResult&)}
C {void std::_Construct(_T1*, const _T2&) [with _T1 = testing::TestPartResult, _T2 = testing::TestPartResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t, void*)}
F {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::TestPartResult*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:123}
C {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::TestPartResult*, bool <anonymous> = false]}
F {static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::TestPartResult*, bool <anonymous> = false]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:101}
C {static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::TestPartResult*, bool <anonymous> = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_Tp*) [with _Tp = testing::TestPartResult]}
C {static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::TestPartResult*, bool <anonymous> = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_Tp* std::__addressof(_Tp&) [with _Tp = testing::TestPartResult]}
F {void std::_Destroy(_Tp*) [with _Tp = testing::TestPartResult]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:93}
C {void std::_Destroy(_Tp*) [with _Tp = testing::TestPartResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResult::~TestPartResult()}
F {testing::TestPartResult::~TestPartResult()} {../third-party/gtest/include/gtest/gtest-test-part.h:47}
C {testing::TestPartResult::~TestPartResult()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestPartResult::~TestPartResult()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestPartResult::~TestPartResult()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestPartResult::~TestPartResult()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestPartResult::~TestPartResult()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {void __gnu_cxx::new_allocator<_Tp>::destroy(__gnu_cxx::new_allocator<_Tp>::pointer) [with _Tp = testing::TestPartResult, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestPartResult*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:118}
C {void __gnu_cxx::new_allocator<_Tp>::destroy(__gnu_cxx::new_allocator<_Tp>::pointer) [with _Tp = testing::TestPartResult, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResult::~TestPartResult()}
F {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestPartResult>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:95}
F {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::TestPartResult*, _Tp = testing::TestPartResult]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:150}
C {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::TestPartResult*, _Tp = testing::TestPartResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::TestPartResult*]}
F {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestPartResult*, std::size_t = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:153}
C {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestPartResult*, std::size_t = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = testing::TestPartResult, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestPartResult*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = testing::TestPartResult, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestPartResult*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:97}
C {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = testing::TestPartResult, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestPartResult*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
F {std::ostream& testing::operator<<(std::ostream&, const testing::TestPartResult&)} {../third-party/gtest/src/gtest-test-part.cc:58}
C {std::ostream& testing::operator<<(std::ostream&, const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ostream_type& (*)(std::basic_ostream<_CharT, _Traits>::__ostream_type&)) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]}
C {std::ostream& testing::operator<<(std::ostream&, const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {std::ostream& testing::operator<<(std::ostream&, const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {std::ostream& testing::operator<<(std::ostream&, const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {std::ostream& testing::operator<<(std::ostream&, const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {std::ostream& testing::operator<<(std::ostream&, const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char, _Traits = std::char_traits<char>]}
C {std::ostream& testing::operator<<(std::ostream&, const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {std::ostream& testing::operator<<(std::ostream&, const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {std::ostream& testing::operator<<(std::ostream&, const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestPartResult::file_name() const}
C {std::ostream& testing::operator<<(std::ostream&, const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::TestPartResult::line_number() const}
C {std::ostream& testing::operator<<(std::ostream&, const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResult::Type testing::TestPartResult::type() const}
C {std::ostream& testing::operator<<(std::ostream&, const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResult::Type testing::TestPartResult::type() const}
C {std::ostream& testing::operator<<(std::ostream&, const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestPartResult::message() const}
F {const char* testing::TestPartResult::message() const} {../third-party/gtest/include/gtest/gtest-test-part.h:88}
C {const char* testing::TestPartResult::message() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {testing::TestPartResult::Type testing::TestPartResult::type() const} {../third-party/gtest/include/gtest/gtest-test-part.h:72}
F {int testing::TestPartResult::line_number() const} {../third-party/gtest/include/gtest/gtest-test-part.h:82}
F {const char* testing::TestPartResult::file_name() const} {../third-party/gtest/include/gtest/gtest-test-part.h:76}
C {const char* testing::TestPartResult::file_name() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::TestPartResult::file_name() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::basic_string<_CharT, _Traits, _Alloc>::empty() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {bool std::basic_string<_CharT, _Traits, _Alloc>::empty() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:803}
C {bool std::basic_string<_CharT, _Traits, _Alloc>::empty() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
F {static std::string testing::TestPartResult::ExtractSummary(const char*)} {../third-party/gtest/src/gtest-test-part.cc:51}
C {static std::string testing::TestPartResult::ExtractSummary(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static std::string testing::TestPartResult::ExtractSummary(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static std::string testing::TestPartResult::ExtractSummary(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static std::string testing::TestPartResult::ExtractSummary(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static std::string testing::TestPartResult::ExtractSummary(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(_InputIterator, _InputIterator, const _Alloc&) [with _InputIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::TestPartResult::ExtractSummary(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static std::string testing::TestPartResult::ExtractSummary(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::TestPartResult::ExtractSummary(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static std::string testing::TestPartResult::ExtractSummary(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* strstr(const char*, const char*)}
F {const char* strstr(const char*, const char*)} {/usr/include/string.h:335}
C {const char* strstr(const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {char* __builtin_strstr(const char*, const char*)}
F {void testing::internal::PrintWideStringTo(const wstring&, std::ostream*)} {../third-party/gtest/src/gtest-printers.cc:356}
C {void testing::internal::PrintWideStringTo(const wstring&, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::PrintCharsAsStringTo(const CharType*, size_t, std::ostream*) [with CharType = wchar_t, size_t = long unsigned int, std::ostream = std::basic_ostream<char>]}
C {void testing::internal::PrintWideStringTo(const wstring&, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::data() const [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]}
C {void testing::internal::PrintWideStringTo(const wstring&, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
F {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:710}
C {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::_Rep* std::basic_string<_CharT, _Traits, _Alloc>::_M_rep() const [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]}
F {std::basic_string<_CharT, _Traits, _Alloc>::_Rep* std::basic_string<_CharT, _Traits, _Alloc>::_M_rep() const [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:295}
C {std::basic_string<_CharT, _Traits, _Alloc>::_Rep* std::basic_string<_CharT, _Traits, _Alloc>::_M_rep() const [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_CharT* std::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]}
F {_CharT* std::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:287}
F {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::data() const [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:1776}
C {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::data() const [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_CharT* std::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]}
F {void testing::internal::PrintCharsAsStringTo(const CharType*, size_t, std::ostream*) [with CharType = wchar_t, size_t = long unsigned int, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-printers.cc:255}
C {void testing::internal::PrintCharsAsStringTo(const CharType*, size_t, std::ostream*) [with CharType = wchar_t, size_t = long unsigned int, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::PrintCharsAsStringTo(const CharType*, size_t, std::ostream*) [with CharType = wchar_t, size_t = long unsigned int, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::CharFormat testing::internal::PrintAsStringLiteralTo(wchar_t, std::ostream*)}
C {void testing::internal::PrintCharsAsStringTo(const CharType*, size_t, std::ostream*) [with CharType = wchar_t, size_t = long unsigned int, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::PrintCharsAsStringTo(const CharType*, size_t, std::ostream*) [with CharType = wchar_t, size_t = long unsigned int, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::PrintCharsAsStringTo(const CharType*, size_t, std::ostream*) [with CharType = wchar_t, size_t = long unsigned int, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsXDigit(wchar_t)}
C {void testing::internal::PrintCharsAsStringTo(const CharType*, size_t, std::ostream*) [with CharType = wchar_t, size_t = long unsigned int, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
F {bool testing::internal::IsXDigit(wchar_t)} {../third-party/gtest/include/gtest/internal/gtest-port.h:1680}
C {bool testing::internal::IsXDigit(wchar_t)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int isxdigit(int)}
F {testing::internal::CharFormat testing::internal::PrintAsStringLiteralTo(wchar_t, std::ostream*)} {../third-party/gtest/src/gtest-printers.cc:188}
C {testing::internal::CharFormat testing::internal::PrintAsStringLiteralTo(wchar_t, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsStringLiteralTo(wchar_t, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsStringLiteralTo(wchar_t, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
F {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-printers.cc:142}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::string testing::internal::String::FormatHexInt(int)}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, char) [with _Traits = std::char_traits<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsPrintableAscii(wchar_t)}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
F {bool testing::internal::IsPrintableAscii(wchar_t)} {../third-party/gtest/src/gtest-printers.cc:133}
F {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, char) [with _Traits = std::char_traits<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ostream:462}
C {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, char) [with _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::__ostream_insert(std::basic_ostream<_CharT, _Traits>&, const _CharT*, std::streamsize) [with _CharT = char, _Traits = std::char_traits<char>, std::streamsize = long int]}
F {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.tcc:694}
C {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::append(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::append(const _CharT*, std::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::basic_string<_CharT, _Traits, _Alloc>::reserve(std::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::size_t std::char_traits<char>::length(const char_type*)}
F {void testing::internal::PrintStringTo(const string&, std::ostream*)} {../third-party/gtest/src/gtest-printers.cc:344}
C {void testing::internal::PrintStringTo(const string&, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::PrintCharsAsStringTo(const CharType*, size_t, std::ostream*) [with CharType = char, size_t = long unsigned int, std::ostream = std::basic_ostream<char>]}
C {void testing::internal::PrintStringTo(const string&, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::data() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::PrintStringTo(const string&, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
F {void testing::internal::PrintCharsAsStringTo(const CharType*, size_t, std::ostream*) [with CharType = char, size_t = long unsigned int, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-printers.cc:255}
C {void testing::internal::PrintCharsAsStringTo(const CharType*, size_t, std::ostream*) [with CharType = char, size_t = long unsigned int, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::PrintCharsAsStringTo(const CharType*, size_t, std::ostream*) [with CharType = char, size_t = long unsigned int, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::CharFormat testing::internal::PrintAsStringLiteralTo(char, std::ostream*)}
C {void testing::internal::PrintCharsAsStringTo(const CharType*, size_t, std::ostream*) [with CharType = char, size_t = long unsigned int, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::PrintCharsAsStringTo(const CharType*, size_t, std::ostream*) [with CharType = char, size_t = long unsigned int, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::PrintCharsAsStringTo(const CharType*, size_t, std::ostream*) [with CharType = char, size_t = long unsigned int, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsXDigit(char)}
C {void testing::internal::PrintCharsAsStringTo(const CharType*, size_t, std::ostream*) [with CharType = char, size_t = long unsigned int, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
F {bool testing::internal::IsXDigit(char)} {../third-party/gtest/include/gtest/internal/gtest-port.h:1677}
C {bool testing::internal::IsXDigit(char)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int isxdigit(int)}
F {testing::internal::CharFormat testing::internal::PrintAsStringLiteralTo(char, std::ostream*)} {../third-party/gtest/src/gtest-printers.cc:203}
C {testing::internal::CharFormat testing::internal::PrintAsStringLiteralTo(char, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::CharFormat testing::internal::PrintAsStringLiteralTo(wchar_t, std::ostream*)}
F {void testing::internal::PrintTo(const wchar_t*, std::ostream*)} {../third-party/gtest/src/gtest-printers.cc:327}
C {void testing::internal::PrintTo(const wchar_t*, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::PrintCharsAsStringTo(const CharType*, size_t, std::ostream*) [with CharType = wchar_t, size_t = long unsigned int, std::ostream = std::basic_ostream<char>]}
C {void testing::internal::PrintTo(const wchar_t*, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {size_t wcslen(const wchar_t*)}
C {void testing::internal::PrintTo(const wchar_t*, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::PrintTo(const wchar_t*, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(const void*) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]}
C {void testing::internal::PrintTo(const wchar_t*, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {To testing::internal::ImplicitCast_(To) [with To = const void*]}
C {void testing::internal::PrintTo(const wchar_t*, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
F {To testing::internal::ImplicitCast_(To) [with To = const void*]} {../third-party/gtest/include/gtest/internal/gtest-port.h:1098}
F {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(const void*) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ostream:227}
C {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(const void*) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::_M_insert(_ValueT) [with _ValueT = const void*, _CharT = char, _Traits = std::char_traits<char>]}
F {void testing::internal::PrintTo(const char*, std::ostream*)} {../third-party/gtest/src/gtest-printers.cc:310}
C {void testing::internal::PrintTo(const char*, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::PrintCharsAsStringTo(const CharType*, size_t, std::ostream*) [with CharType = char, size_t = long unsigned int, std::ostream = std::basic_ostream<char>]}
C {void testing::internal::PrintTo(const char*, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {size_t strlen(const char*)}
C {void testing::internal::PrintTo(const char*, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::PrintTo(const char*, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(const void*) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]}
C {void testing::internal::PrintTo(const char*, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {To testing::internal::ImplicitCast_(To) [with To = const void*]}
C {void testing::internal::PrintTo(const char*, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
F {void testing::internal::UniversalPrintArray(const wchar_t*, size_t, std::ostream*)} {../third-party/gtest/src/gtest-printers.cc:305}
C {void testing::internal::UniversalPrintArray(const wchar_t*, size_t, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::UniversalPrintCharArray(const CharType*, size_t, std::ostream*) [with CharType = wchar_t, size_t = long unsigned int, std::ostream = std::basic_ostream<char>]}
F {void testing::internal::UniversalPrintCharArray(const CharType*, size_t, std::ostream*) [with CharType = wchar_t, size_t = long unsigned int, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-printers.cc:276}
C {void testing::internal::UniversalPrintCharArray(const CharType*, size_t, std::ostream*) [with CharType = wchar_t, size_t = long unsigned int, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::UniversalPrintCharArray(const CharType*, size_t, std::ostream*) [with CharType = wchar_t, size_t = long unsigned int, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::PrintCharsAsStringTo(const CharType*, size_t, std::ostream*) [with CharType = wchar_t, size_t = long unsigned int, std::ostream = std::basic_ostream<char>]}
C {void testing::internal::UniversalPrintCharArray(const CharType*, size_t, std::ostream*) [with CharType = wchar_t, size_t = long unsigned int, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::PrintCharsAsStringTo(const CharType*, size_t, std::ostream*) [with CharType = wchar_t, size_t = long unsigned int, std::ostream = std::basic_ostream<char>]}
F {void testing::internal::UniversalPrintArray(const char*, size_t, std::ostream*)} {../third-party/gtest/src/gtest-printers.cc:299}
C {void testing::internal::UniversalPrintArray(const char*, size_t, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::UniversalPrintCharArray(const CharType*, size_t, std::ostream*) [with CharType = char, size_t = long unsigned int, std::ostream = std::basic_ostream<char>]}
F {void testing::internal::UniversalPrintCharArray(const CharType*, size_t, std::ostream*) [with CharType = char, size_t = long unsigned int, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-printers.cc:276}
C {void testing::internal::UniversalPrintCharArray(const CharType*, size_t, std::ostream*) [with CharType = char, size_t = long unsigned int, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::UniversalPrintCharArray(const CharType*, size_t, std::ostream*) [with CharType = char, size_t = long unsigned int, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::PrintCharsAsStringTo(const CharType*, size_t, std::ostream*) [with CharType = char, size_t = long unsigned int, std::ostream = std::basic_ostream<char>]}
C {void testing::internal::UniversalPrintCharArray(const CharType*, size_t, std::ostream*) [with CharType = char, size_t = long unsigned int, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::PrintCharsAsStringTo(const CharType*, size_t, std::ostream*) [with CharType = char, size_t = long unsigned int, std::ostream = std::basic_ostream<char>]}
F {void testing::internal::PrintTo(wchar_t, std::ostream*)} {../third-party/gtest/src/gtest-printers.cc:246}
C {void testing::internal::PrintTo(wchar_t, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]}
F {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-printers.cc:213}
C {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::string testing::internal::String::FormatHexInt(int)}
C {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char, _Traits = std::char_traits<char>]}
C {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]}
C {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = wchar_t, Char = wchar_t, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
F {void testing::internal::PrintTo(signed char, std::ostream*)} {../third-party/gtest/src/gtest-printers.cc:240}
C {void testing::internal::PrintTo(signed char, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]}
F {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-printers.cc:213}
C {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::string testing::internal::String::FormatHexInt(int)}
C {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char, _Traits = std::char_traits<char>]}
C {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]}
C {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
F {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-printers.cc:142}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::string testing::internal::String::FormatHexInt(int)}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, char) [with _Traits = std::char_traits<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsPrintableAscii(wchar_t)}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = signed char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
F {void testing::internal::PrintTo(unsigned char, std::ostream*)} {../third-party/gtest/src/gtest-printers.cc:237}
C {void testing::internal::PrintTo(unsigned char, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]}
F {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-printers.cc:213}
C {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::string testing::internal::String::FormatHexInt(int)}
C {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char, _Traits = std::char_traits<char>]}
C {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]}
C {void testing::internal::PrintCharAndCodeTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
F {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-printers.cc:142}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::string testing::internal::String::FormatHexInt(int)}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, char) [with _Traits = std::char_traits<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsPrintableAscii(wchar_t)}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::CharFormat testing::internal::PrintAsCharLiteralTo(Char, std::ostream*) [with UnsignedChar = unsigned char, Char = unsigned char, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
F {void testing::internal2::PrintBytesInObjectTo(const unsigned char*, size_t, std::ostream*)} {../third-party/gtest/src/gtest-printers.cc:110}
C {void testing::internal2::PrintBytesInObjectTo(const unsigned char*, size_t, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::{anonymous}::PrintBytesInObjectToImpl(const unsigned char*, size_t, std::ostream*)}
F {void testing::{anonymous}::PrintBytesInObjectToImpl(const unsigned char*, size_t, std::ostream*)} {../third-party/gtest/src/gtest-printers.cc:78}
C {void testing::{anonymous}::PrintBytesInObjectToImpl(const unsigned char*, size_t, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::{anonymous}::PrintBytesInObjectToImpl(const unsigned char*, size_t, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::{anonymous}::PrintByteSegmentInObjectTo(const unsigned char*, size_t, size_t, std::ostream*)}
C {void testing::{anonymous}::PrintBytesInObjectToImpl(const unsigned char*, size_t, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::{anonymous}::PrintBytesInObjectToImpl(const unsigned char*, size_t, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::{anonymous}::PrintByteSegmentInObjectTo(const unsigned char*, size_t, size_t, std::ostream*)}
C {void testing::{anonymous}::PrintBytesInObjectToImpl(const unsigned char*, size_t, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::{anonymous}::PrintByteSegmentInObjectTo(const unsigned char*, size_t, size_t, std::ostream*)}
C {void testing::{anonymous}::PrintBytesInObjectToImpl(const unsigned char*, size_t, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::{anonymous}::PrintBytesInObjectToImpl(const unsigned char*, size_t, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long unsigned int) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]}
F {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long unsigned int) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ostream:171}
C {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long unsigned int) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::_M_insert(_ValueT) [with _ValueT = long unsigned int, _CharT = char, _Traits = std::char_traits<char>]}
F {void testing::{anonymous}::PrintByteSegmentInObjectTo(const unsigned char*, size_t, size_t, std::ostream*)} {../third-party/gtest/src/gtest-printers.cc:59}
C {void testing::{anonymous}::PrintByteSegmentInObjectTo(const unsigned char*, size_t, size_t, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::{anonymous}::PrintByteSegmentInObjectTo(const unsigned char*, size_t, size_t, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int snprintf(char*, size_t, const char*, ...)}
C {void testing::{anonymous}::PrintByteSegmentInObjectTo(const unsigned char*, size_t, size_t, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, char) [with _Traits = std::char_traits<char>]}
C {void testing::{anonymous}::PrintByteSegmentInObjectTo(const unsigned char*, size_t, size_t, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, char) [with _Traits = std::char_traits<char>]}
F {const char* testing::internal::StringFromGTestEnv(const char*, const char*)} {../third-party/gtest/src/gtest-port.cc:798}
C {const char* testing::internal::StringFromGTestEnv(const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::internal::StringFromGTestEnv(const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::internal::StringFromGTestEnv(const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::internal::posix::GetEnv(const char*)}
C {const char* testing::internal::StringFromGTestEnv(const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::internal::StringFromGTestEnv(const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FlagToEnvVar(const char*)}
F {std::string testing::internal::FlagToEnvVar(const char*)} {../third-party/gtest/src/gtest-port.cc:709}
C {std::string testing::internal::FlagToEnvVar(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FlagToEnvVar(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {std::string testing::internal::FlagToEnvVar(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {std::string testing::internal::FlagToEnvVar(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FlagToEnvVar(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {std::string testing::internal::FlagToEnvVar(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::Message::GetString() const}
C {std::string testing::internal::FlagToEnvVar(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {std::string testing::internal::FlagToEnvVar(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char, testing::Message = testing::Message]}
C {std::string testing::internal::FlagToEnvVar(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {char testing::internal::ToUpper(char)}
C {std::string testing::internal::FlagToEnvVar(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FlagToEnvVar(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
C {std::string testing::internal::FlagToEnvVar(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {std::string testing::internal::FlagToEnvVar(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::Message::GetString() const}
C {std::string testing::internal::FlagToEnvVar(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]}
C {std::string testing::internal::FlagToEnvVar(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [7], testing::Message = testing::Message]}
C {std::string testing::internal::FlagToEnvVar(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [7], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [7], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [7], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {char testing::internal::ToUpper(char)} {../third-party/gtest/include/gtest/internal/gtest-port.h:1688}
C {char testing::internal::ToUpper(char)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int toupper(int)}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char, testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char, testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, char) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char, testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:716}
C {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::_Rep* std::basic_string<_CharT, _Traits, _Alloc>::_M_rep() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {const char* testing::internal::posix::GetEnv(const char*)} {../third-party/gtest/include/gtest/internal/gtest-port.h:1792}
C {const char* testing::internal::posix::GetEnv(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {char* getenv(const char*)}
F {testing::internal::Int32 testing::internal::Int32FromGTestEnv(const char*, testing::internal::Int32)} {../third-party/gtest/src/gtest-port.cc:776}
C {testing::internal::Int32 testing::internal::Int32FromGTestEnv(const char*, testing::internal::Int32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::Int32 testing::internal::Int32FromGTestEnv(const char*, testing::internal::Int32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::internal::Int32 testing::internal::Int32FromGTestEnv(const char*, testing::internal::Int32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::Int32 testing::internal::Int32FromGTestEnv(const char*, testing::internal::Int32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::internal::Int32 testing::internal::Int32FromGTestEnv(const char*, testing::internal::Int32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::Int32 testing::internal::Int32FromGTestEnv(const char*, testing::internal::Int32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fflush(FILE*)}
C {testing::internal::Int32 testing::internal::Int32FromGTestEnv(const char*, testing::internal::Int32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::internal::Int32 testing::internal::Int32FromGTestEnv(const char*, testing::internal::Int32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::Int32 testing::internal::Int32FromGTestEnv(const char*, testing::internal::Int32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int printf(const char*, ...)}
C {testing::internal::Int32 testing::internal::Int32FromGTestEnv(const char*, testing::internal::Int32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::Int32 testing::internal::Int32FromGTestEnv(const char*, testing::internal::Int32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::Message::GetString() const}
C {testing::internal::Int32 testing::internal::Int32FromGTestEnv(const char*, testing::internal::Int32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = int, testing::Message = testing::Message]}
C {testing::internal::Int32 testing::internal::Int32FromGTestEnv(const char*, testing::internal::Int32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
C {testing::internal::Int32 testing::internal::Int32FromGTestEnv(const char*, testing::internal::Int32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::internal::Int32 testing::internal::Int32FromGTestEnv(const char*, testing::internal::Int32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)}
C {testing::internal::Int32 testing::internal::Int32FromGTestEnv(const char*, testing::internal::Int32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = std::basic_string<char>, testing::Message = testing::Message]}
C {testing::internal::Int32 testing::internal::Int32FromGTestEnv(const char*, testing::internal::Int32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [22], testing::Message = testing::Message]}
C {testing::internal::Int32 testing::internal::Int32FromGTestEnv(const char*, testing::internal::Int32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
C {testing::internal::Int32 testing::internal::Int32FromGTestEnv(const char*, testing::internal::Int32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::internal::posix::GetEnv(const char*)}
C {testing::internal::Int32 testing::internal::Int32FromGTestEnv(const char*, testing::internal::Int32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::Int32 testing::internal::Int32FromGTestEnv(const char*, testing::internal::Int32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FlagToEnvVar(const char*)}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [22], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [22], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [22], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {bool testing::internal::BoolFromGTestEnv(const char*, bool)} {../third-party/gtest/src/gtest-port.cc:766}
C {bool testing::internal::BoolFromGTestEnv(const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {bool testing::internal::BoolFromGTestEnv(const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {bool testing::internal::BoolFromGTestEnv(const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int strcmp(const char*, const char*)}
C {bool testing::internal::BoolFromGTestEnv(const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::internal::posix::GetEnv(const char*)}
C {bool testing::internal::BoolFromGTestEnv(const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {bool testing::internal::BoolFromGTestEnv(const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FlagToEnvVar(const char*)}
F {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-port.cc:724}
C {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fflush(FILE*)}
C {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int printf(const char*, ...)}
C {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::Message::GetString() const}
C {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [20], testing::Message = testing::Message]}
C {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]}
C {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [12], testing::Message = testing::Message]}
C {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [50], testing::Message = testing::Message]}
C {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = testing::Message, testing::Message = testing::Message]}
C {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [10], testing::Message = testing::Message]}
C {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
C {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fflush(FILE*)}
C {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int printf(const char*, ...)}
C {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::Message::GetString() const}
C {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [4], testing::Message = testing::Message]}
C {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]}
C {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [13], testing::Message = testing::Message]}
C {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [50], testing::Message = testing::Message]}
C {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = testing::Message, testing::Message = testing::Message]}
C {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [10], testing::Message = testing::Message]}
C {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
C {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {long int strtol(const char*, char**, int)}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [13], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [13], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [13], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [4], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [4], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [4], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [10], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [10], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [10], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::Message& testing::Message::operator<<(const T&) [with T = testing::Message, testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = testing::Message, testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::operator<<(std::ostream&, const testing::Message&)}
C {testing::Message& testing::Message::operator<<(const T&) [with T = testing::Message, testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {std::ostream& testing::operator<<(std::ostream&, const testing::Message&)} {../third-party/gtest/include/gtest/gtest-message.h:232}
C {std::ostream& testing::operator<<(std::ostream&, const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::ostream& testing::operator<<(std::ostream&, const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::ostream& testing::operator<<(std::ostream&, const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::ostream& testing::operator<<(std::ostream&, const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::Message::GetString() const}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [50], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [50], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [50], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [12], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [12], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [12], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [20], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [20], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [20], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {const std::vector<std::basic_string<char> >& testing::internal::GetInjectableArgvs()} {../third-party/gtest/src/gtest-port.cc:689}
F {void testing::internal::SetInjectableArgvs(const std::vector<std::basic_string<char> >*)} {../third-party/gtest/src/gtest-port.cc:683}
C {void testing::internal::SetInjectableArgvs(const std::vector<std::basic_string<char> >*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {void testing::internal::SetInjectableArgvs(const std::vector<std::basic_string<char> >*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]}
F {std::string testing::internal::GetCapturedStderr()} {../third-party/gtest/src/gtest-port.cc:669}
C {std::string testing::internal::GetCapturedStderr()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::GetCapturedStream(testing::internal::CapturedStream**)}
F {std::string testing::internal::GetCapturedStdout()} {../third-party/gtest/src/gtest-port.cc:664}
C {std::string testing::internal::GetCapturedStdout()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::GetCapturedStream(testing::internal::CapturedStream**)}
F {void testing::internal::CaptureStderr()} {../third-party/gtest/src/gtest-port.cc:659}
C {void testing::internal::CaptureStderr()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::CaptureStream(int, const char*, testing::internal::CapturedStream**)}
F {void testing::internal::CaptureStdout()} {../third-party/gtest/src/gtest-port.cc:654}
C {void testing::internal::CaptureStdout()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::CaptureStream(int, const char*, testing::internal::CapturedStream**)}
F {std::string testing::internal::GetCapturedStream(testing::internal::CapturedStream**)} {../third-party/gtest/src/gtest-port.cc:644}
C {std::string testing::internal::GetCapturedStream(testing::internal::CapturedStream**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::GetCapturedStream(testing::internal::CapturedStream**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {std::string testing::internal::GetCapturedStream(testing::internal::CapturedStream**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::CapturedStream::~CapturedStream()}
C {std::string testing::internal::GetCapturedStream(testing::internal::CapturedStream**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::CapturedStream::GetCapturedString()}
F {std::string testing::internal::CapturedStream::GetCapturedString()} {../third-party/gtest/src/gtest-port.cc:568}
C {std::string testing::internal::CapturedStream::GetCapturedString()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::CapturedStream::GetCapturedString()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::posix::FClose(FILE*)}
C {std::string testing::internal::CapturedStream::GetCapturedString()} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::string testing::internal::CapturedStream::ReadEntireFile(FILE*)}
C {std::string testing::internal::CapturedStream::GetCapturedString()} {../third-party/gtest/src/gtest-typed-test.cc:110} {FILE* testing::internal::posix::FOpen(const char*, const char*)}
C {std::string testing::internal::CapturedStream::GetCapturedString()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::CapturedStream::GetCapturedString()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int close(int)}
C {std::string testing::internal::CapturedStream::GetCapturedString()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int dup2(int, int)}
C {std::string testing::internal::CapturedStream::GetCapturedString()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fflush(FILE*)}
F {FILE* testing::internal::posix::FOpen(const char*, const char*)} {../third-party/gtest/include/gtest/internal/gtest-port.h:1772}
C {FILE* testing::internal::posix::FOpen(const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {FILE* fopen(const char*, const char*)}
F {int testing::internal::posix::FClose(FILE*)} {../third-party/gtest/include/gtest/internal/gtest-port.h:1781}
C {int testing::internal::posix::FClose(FILE*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fclose(FILE*)}
F {testing::internal::CapturedStream::~CapturedStream()} {../third-party/gtest/src/gtest-port.cc:564}
C {testing::internal::CapturedStream::~CapturedStream()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::CapturedStream::~CapturedStream()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::CapturedStream::~CapturedStream()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int remove(const char*)}
C {testing::internal::CapturedStream::~CapturedStream()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {void testing::internal::CaptureStream(int, const char*, testing::internal::CapturedStream**)} {../third-party/gtest/src/gtest-port.cc:635}
C {void testing::internal::CaptureStream(int, const char*, testing::internal::CapturedStream**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {void testing::internal::CaptureStream(int, const char*, testing::internal::CapturedStream**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {void testing::internal::CaptureStream(int, const char*, testing::internal::CapturedStream**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::CapturedStream::CapturedStream(int)}
C {void testing::internal::CaptureStream(int, const char*, testing::internal::CapturedStream**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {void testing::internal::CaptureStream(int, const char*, testing::internal::CapturedStream**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {void testing::internal::CaptureStream(int, const char*, testing::internal::CapturedStream**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::CaptureStream(int, const char*, testing::internal::CapturedStream**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::CaptureStream(int, const char*, testing::internal::CapturedStream**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::CaptureStream(int, const char*, testing::internal::CapturedStream**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {void testing::internal::CaptureStream(int, const char*, testing::internal::CapturedStream**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
F {testing::internal::CapturedStream::CapturedStream(int)} {../third-party/gtest/src/gtest-port.cc:516}
C {testing::internal::CapturedStream::CapturedStream(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::CapturedStream::CapturedStream(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int close(int)}
C {testing::internal::CapturedStream::CapturedStream(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int dup2(int, int)}
C {testing::internal::CapturedStream::CapturedStream(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fflush(FILE*)}
C {testing::internal::CapturedStream::CapturedStream(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {testing::internal::CapturedStream::CapturedStream(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int mkstemp(char*)}
C {testing::internal::CapturedStream::CapturedStream(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::CapturedStream::CapturedStream(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int dup(int)}
F {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:549}
C {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::assign(const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
F {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::assign(const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:1118}
C {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::assign(const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::assign(const _CharT*, std::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::assign(const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::size_t std::char_traits<char>::length(const char_type*)}
F {static std::string testing::internal::CapturedStream::ReadEntireFile(FILE*)} {../third-party/gtest/src/gtest-port.cc:605}
C {static std::string testing::internal::CapturedStream::ReadEntireFile(FILE*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static std::string testing::internal::CapturedStream::ReadEntireFile(FILE*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete [](void*)}
C {static std::string testing::internal::CapturedStream::ReadEntireFile(FILE*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static std::string testing::internal::CapturedStream::ReadEntireFile(FILE*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, std::basic_string<_CharT, _Traits, _Alloc>::size_type, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {static std::string testing::internal::CapturedStream::ReadEntireFile(FILE*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static std::string testing::internal::CapturedStream::ReadEntireFile(FILE*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {size_t fread(void*, size_t, size_t, FILE*)}
C {static std::string testing::internal::CapturedStream::ReadEntireFile(FILE*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fseek(FILE*, long int, int)}
C {static std::string testing::internal::CapturedStream::ReadEntireFile(FILE*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new [](std::size_t)}
C {static std::string testing::internal::CapturedStream::ReadEntireFile(FILE*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static size_t testing::internal::CapturedStream::GetFileSize(FILE*)}
F {static size_t testing::internal::CapturedStream::GetFileSize(FILE*)} {../third-party/gtest/src/gtest-port.cc:599}
C {static size_t testing::internal::CapturedStream::GetFileSize(FILE*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {long int ftell(FILE*)}
C {static size_t testing::internal::CapturedStream::GetFileSize(FILE*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fseek(FILE*, long int, int)}
F {testing::internal::GTestLog::~GTestLog()} {../third-party/gtest/src/gtest-port.cc:496}
C {testing::internal::GTestLog::~GTestLog()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::posix::Abort()}
C {testing::internal::GTestLog::~GTestLog()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fflush(FILE*)}
C {testing::internal::GTestLog::~GTestLog()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ostream_type& (*)(std::basic_ostream<_CharT, _Traits>::__ostream_type&)) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]}
C {testing::internal::GTestLog::~GTestLog()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
F {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)} {../third-party/gtest/src/gtest-port.cc:485}
C {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ostream_type& (*)(std::basic_ostream<_CharT, _Traits>::__ostream_type&)) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]}
C {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatFileLocation(const char*, int)}
F {std::string testing::internal::FormatCompilerIndependentFileLocation(const char*, int)} {../third-party/gtest/src/gtest-port.cc:474}
C {std::string testing::internal::FormatCompilerIndependentFileLocation(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatCompilerIndependentFileLocation(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatCompilerIndependentFileLocation(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatCompilerIndependentFileLocation(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {std::string testing::internal::FormatCompilerIndependentFileLocation(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatCompilerIndependentFileLocation(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatCompilerIndependentFileLocation(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatCompilerIndependentFileLocation(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatCompilerIndependentFileLocation(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatCompilerIndependentFileLocation(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {std::string testing::internal::FormatCompilerIndependentFileLocation(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {std::string testing::internal::FormatCompilerIndependentFileLocation(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {std::string testing::internal::FormatCompilerIndependentFileLocation(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatCompilerIndependentFileLocation(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
F {std::string testing::internal::FormatFileLocation(const char*, int)} {../third-party/gtest/src/gtest-port.cc:456}
C {std::string testing::internal::FormatFileLocation(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatFileLocation(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatFileLocation(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatFileLocation(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatFileLocation(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {std::string testing::internal::FormatFileLocation(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatFileLocation(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatFileLocation(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatFileLocation(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatFileLocation(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatFileLocation(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatFileLocation(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatFileLocation(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {std::string testing::internal::FormatFileLocation(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatFileLocation(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {std::string testing::internal::FormatFileLocation(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatFileLocation(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
F {void testing::internal::RE::Init(const char*)} {../third-party/gtest/src/gtest-port.cc:170}
C {void testing::internal::RE::Init(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {void testing::internal::RE::Init(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {void testing::internal::RE::Init(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::RE::Init(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::AssertHelper::~AssertHelper()}
C {void testing::internal::RE::Init(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete [](void*)}
C {void testing::internal::RE::Init(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {void testing::internal::RE::Init(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {void testing::internal::RE::Init(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::RE::Init(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::AssertHelper::~AssertHelper()}
C {void testing::internal::RE::Init(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::AssertHelper::operator=(const testing::Message&) const}
C {void testing::internal::RE::Init(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::AssertHelper::AssertHelper(testing::TestPartResult::Type, const char*, int, const char*)}
C {void testing::internal::RE::Init(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::RE::Init(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::GetBoolAssertionFailureMessage(const testing::AssertionResult&, const char*, const char*, const char*)}
C {void testing::internal::RE::Init(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [52], testing::Message = testing::Message]}
C {void testing::internal::RE::Init(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]}
C {void testing::internal::RE::Init(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [21], testing::Message = testing::Message]}
C {void testing::internal::RE::Init(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
C {void testing::internal::RE::Init(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::operator bool() const}
C {void testing::internal::RE::Init(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::AssertionResult(bool)}
C {void testing::internal::RE::Init(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int regcomp(regex_t*, const char*, int)}
C {void testing::internal::RE::Init(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int regcomp(regex_t*, const char*, int)}
C {void testing::internal::RE::Init(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int snprintf(char*, size_t, const char*, ...)}
C {void testing::internal::RE::Init(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new [](std::size_t)}
C {void testing::internal::RE::Init(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {size_t strlen(const char*)}
C {void testing::internal::RE::Init(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {char* testing::internal::posix::StrDup(const char*)}
F {char* testing::internal::posix::StrDup(const char*)} {../third-party/gtest/include/gtest/internal/gtest-port.h:1747}
C {char* testing::internal::posix::StrDup(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {char* strdup(const char*)}
F {testing::AssertionResult::AssertionResult(bool)} {../third-party/gtest/include/gtest/gtest.h:262}
C {testing::AssertionResult::AssertionResult(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::scoped_ptr(T*) [with T = std::basic_string<char>]}
F {testing::internal::scoped_ptr<T>::scoped_ptr(T*) [with T = std::basic_string<char>]} {../third-party/gtest/include/gtest/internal/gtest-port.h:894}
F {testing::AssertionResult::operator bool() const} {../third-party/gtest/include/gtest/gtest.h:265}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [21], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [21], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [21], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [52], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [52], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [52], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::AssertionResult::~AssertionResult()} {../third-party/gtest/include/gtest/gtest.h:256}
C {testing::AssertionResult::~AssertionResult()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = std::basic_string<char>]}
F {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = std::basic_string<char>]} {../third-party/gtest/include/gtest/internal/gtest-port.h:895}
C {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::scoped_ptr<T>::reset(T*) [with T = std::basic_string<char>]}
F {void testing::internal::scoped_ptr<T>::reset(T*) [with T = std::basic_string<char>]} {../third-party/gtest/include/gtest/internal/gtest-port.h:907}
C {void testing::internal::scoped_ptr<T>::reset(T*) [with T = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {void testing::internal::scoped_ptr<T>::reset(T*) [with T = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::scoped_ptr<T>::reset(T*) [with T = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsTrue(bool)}
F {static bool testing::internal::RE::PartialMatch(const char*, const testing::internal::RE&)} {../third-party/gtest/src/gtest-port.cc:162}
C {static bool testing::internal::RE::PartialMatch(const char*, const testing::internal::RE&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int regexec(const regex_t*, const char*, size_t, regmatch_t*, int)}
F {static bool testing::internal::RE::FullMatch(const char*, const testing::internal::RE&)} {../third-party/gtest/src/gtest-port.cc:153}
C {static bool testing::internal::RE::FullMatch(const char*, const testing::internal::RE&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int regexec(const regex_t*, const char*, size_t, regmatch_t*, int)}
F {testing::internal::RE::~RE()} {../third-party/gtest/src/gtest-port.cc:140}
C {testing::internal::RE::~RE()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void free(void*)}
C {testing::internal::RE::~RE()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void regfree(regex_t*)}
C {testing::internal::RE::~RE()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void regfree(regex_t*)}
F {size_t testing::internal::GetThreadCount()} {../third-party/gtest/src/gtest-port.cc:128}
F {void testing::internal::FilePath::Normalize()} {../third-party/gtest/src/gtest-filepath.cc:351}
C {void testing::internal::FilePath::Normalize()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete [](void*)}
C {void testing::internal::FilePath::Normalize()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {void testing::internal::FilePath::Normalize()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsPathSeparator(char)}
C {void testing::internal::FilePath::Normalize()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsPathSeparator(char)}
C {void testing::internal::FilePath::Normalize()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* memset(void*, int, size_t)}
C {void testing::internal::FilePath::Normalize()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {void testing::internal::FilePath::Normalize()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new [](std::size_t)}
C {void testing::internal::FilePath::Normalize()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {void testing::internal::FilePath::Normalize()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::FilePath::Normalize()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {void testing::internal::FilePath::Normalize()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {bool testing::internal::IsPathSeparator(char)} {../third-party/gtest/src/gtest-filepath.cc:92}
F {testing::internal::FilePath testing::internal::FilePath::RemoveTrailingPathSeparator() const} {../third-party/gtest/src/gtest-filepath.cc:341}
C {testing::internal::FilePath testing::internal::FilePath::RemoveTrailingPathSeparator() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveTrailingPathSeparator() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveTrailingPathSeparator() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::FilePath(const testing::internal::FilePath&)}
C {testing::internal::FilePath testing::internal::FilePath::RemoveTrailingPathSeparator() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::FilePath(const string&)}
C {testing::internal::FilePath testing::internal::FilePath::RemoveTrailingPathSeparator() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::basic_string<_CharT, _Traits, _Alloc>::substr(std::basic_string<_CharT, _Traits, _Alloc>::size_type, std::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveTrailingPathSeparator() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveTrailingPathSeparator() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::FilePath::IsDirectory() const}
F {std::basic_string<_CharT, _Traits, _Alloc> std::basic_string<_CharT, _Traits, _Alloc>::substr(std::basic_string<_CharT, _Traits, _Alloc>::size_type, std::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:2155}
C {std::basic_string<_CharT, _Traits, _Alloc> std::basic_string<_CharT, _Traits, _Alloc>::substr(std::basic_string<_CharT, _Traits, _Alloc>::size_type, std::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&, std::basic_string<_CharT, _Traits, _Alloc>::size_type, std::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {std::basic_string<_CharT, _Traits, _Alloc> std::basic_string<_CharT, _Traits, _Alloc>::substr(std::basic_string<_CharT, _Traits, _Alloc>::size_type, std::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::_M_check(std::basic_string<_CharT, _Traits, _Alloc>::size_type, const char*) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
F {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::_M_check(std::basic_string<_CharT, _Traits, _Alloc>::size_type, const char*) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:316}
C {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::_M_check(std::basic_string<_CharT, _Traits, _Alloc>::size_type, const char*) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::__throw_out_of_range(const char*)}
C {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::_M_check(std::basic_string<_CharT, _Traits, _Alloc>::size_type, const char*) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
F {testing::internal::FilePath::FilePath(const string&)} {../third-party/gtest/include/gtest/internal/gtest-filepath.h:64}
C {testing::internal::FilePath::FilePath(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::FilePath::FilePath(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::FilePath::Normalize()}
C {testing::internal::FilePath::FilePath(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
F {testing::internal::FilePath::FilePath(const testing::internal::FilePath&)} {../third-party/gtest/include/gtest/internal/gtest-filepath.h:62}
C {testing::internal::FilePath::FilePath(const testing::internal::FilePath&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
F {bool testing::internal::FilePath::CreateFolder() const} {../third-party/gtest/src/gtest-filepath.cc:320}
C {bool testing::internal::FilePath::CreateFolder() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::FilePath::DirectoryExists() const}
C {bool testing::internal::FilePath::CreateFolder() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int mkdir(const char*, __mode_t)}
C {bool testing::internal::FilePath::CreateFolder() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {bool testing::internal::FilePath::CreateDirectoriesRecursively() const} {../third-party/gtest/src/gtest-filepath.cc:303}
C {bool testing::internal::FilePath::CreateDirectoriesRecursively() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {bool testing::internal::FilePath::CreateDirectoriesRecursively() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {bool testing::internal::FilePath::CreateDirectoriesRecursively() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {bool testing::internal::FilePath::CreateDirectoriesRecursively() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::FilePath::CreateFolder() const}
C {bool testing::internal::FilePath::CreateDirectoriesRecursively() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::FilePath::CreateDirectoriesRecursively() const}
C {bool testing::internal::FilePath::CreateDirectoriesRecursively() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {bool testing::internal::FilePath::CreateDirectoriesRecursively() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath testing::internal::FilePath::RemoveFileName() const}
C {bool testing::internal::FilePath::CreateDirectoriesRecursively() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath testing::internal::FilePath::RemoveTrailingPathSeparator() const}
C {bool testing::internal::FilePath::CreateDirectoriesRecursively() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::FilePath::DirectoryExists() const}
C {bool testing::internal::FilePath::CreateDirectoriesRecursively() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {bool testing::internal::FilePath::CreateDirectoriesRecursively() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::FilePath::IsDirectory() const}
F {testing::internal::FilePath::~FilePath()} {../third-party/gtest/include/gtest/internal/gtest-filepath.h:59}
C {testing::internal::FilePath::~FilePath()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {bool testing::internal::FilePath::IsDirectory() const} {../third-party/gtest/src/gtest-filepath.cc:295}
C {bool testing::internal::FilePath::IsDirectory() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsPathSeparator(char)}
C {bool testing::internal::FilePath::IsDirectory() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {bool testing::internal::FilePath::IsDirectory() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {bool testing::internal::FilePath::IsDirectory() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::basic_string<_CharT, _Traits, _Alloc>::empty() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {static testing::internal::FilePath testing::internal::FilePath::GenerateUniqueFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, const char*)} {../third-party/gtest/src/gtest-filepath.cc:281}
C {static testing::internal::FilePath testing::internal::FilePath::GenerateUniqueFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {static testing::internal::FilePath testing::internal::FilePath::GenerateUniqueFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {static testing::internal::FilePath testing::internal::FilePath::GenerateUniqueFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::FilePath::FileOrDirectoryExists() const}
C {static testing::internal::FilePath testing::internal::FilePath::GenerateUniqueFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {static testing::internal::FilePath testing::internal::FilePath::GenerateUniqueFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::FilePath::Set(const testing::internal::FilePath&)}
C {static testing::internal::FilePath testing::internal::FilePath::GenerateUniqueFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)}
C {static testing::internal::FilePath testing::internal::FilePath::GenerateUniqueFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::FilePath()}
F {testing::internal::FilePath::FilePath()} {../third-party/gtest/include/gtest/internal/gtest-filepath.h:61}
C {testing::internal::FilePath::FilePath()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::internal::FilePath::FilePath()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::internal::FilePath::FilePath()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::FilePath::FilePath()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
F {void testing::internal::FilePath::Set(const testing::internal::FilePath&)} {../third-party/gtest/include/gtest/internal/gtest-filepath.h:73}
C {void testing::internal::FilePath::Set(const testing::internal::FilePath&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
F {bool testing::internal::FilePath::IsAbsolutePath() const} {../third-party/gtest/src/gtest-filepath.cc:260}
C {bool testing::internal::FilePath::IsAbsolutePath() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsPathSeparator(char)}
C {bool testing::internal::FilePath::IsAbsolutePath() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {bool testing::internal::FilePath::IsRootDirectory() const} {../third-party/gtest/src/gtest-filepath.cc:248}
C {bool testing::internal::FilePath::IsRootDirectory() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsPathSeparator(char)}
C {bool testing::internal::FilePath::IsRootDirectory() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {bool testing::internal::FilePath::IsRootDirectory() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
F {bool testing::internal::FilePath::DirectoryExists() const} {../third-party/gtest/src/gtest-filepath.cc:218}
C {bool testing::internal::FilePath::DirectoryExists() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::posix::IsDir(const StatStruct&)}
C {bool testing::internal::FilePath::DirectoryExists() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::posix::Stat(const char*, testing::internal::posix::StatStruct*)}
C {bool testing::internal::FilePath::DirectoryExists() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::internal::FilePath::c_str() const}
F {const char* testing::internal::FilePath::c_str() const} {../third-party/gtest/include/gtest/internal/gtest-filepath.h:78}
C {const char* testing::internal::FilePath::c_str() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {int testing::internal::posix::Stat(const char*, testing::internal::posix::StatStruct*)} {../third-party/gtest/include/gtest/internal/gtest-port.h:1743}
C {int testing::internal::posix::Stat(const char*, testing::internal::posix::StatStruct*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int stat(const char*, stat*)}
F {int stat(const char*, stat*)} {/usr/include/sys/stat.h:455}
C {int stat(const char*, stat*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __xstat(int, const char*, stat*)}
F {bool testing::internal::posix::IsDir(const StatStruct&)} {../third-party/gtest/include/gtest/internal/gtest-port.h:1749}
F {bool testing::internal::FilePath::FileOrDirectoryExists() const} {../third-party/gtest/src/gtest-filepath.cc:204}
C {bool testing::internal::FilePath::FileOrDirectoryExists() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::posix::Stat(const char*, testing::internal::posix::StatStruct*)}
C {bool testing::internal::FilePath::FileOrDirectoryExists() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {static testing::internal::FilePath testing::internal::FilePath::ConcatPaths(const testing::internal::FilePath&, const testing::internal::FilePath&)} {../third-party/gtest/src/gtest-filepath.cc:194}
C {static testing::internal::FilePath testing::internal::FilePath::ConcatPaths(const testing::internal::FilePath&, const testing::internal::FilePath&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {static testing::internal::FilePath testing::internal::FilePath::ConcatPaths(const testing::internal::FilePath&, const testing::internal::FilePath&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::ConcatPaths(const testing::internal::FilePath&, const testing::internal::FilePath&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::ConcatPaths(const testing::internal::FilePath&, const testing::internal::FilePath&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {static testing::internal::FilePath testing::internal::FilePath::ConcatPaths(const testing::internal::FilePath&, const testing::internal::FilePath&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::ConcatPaths(const testing::internal::FilePath&, const testing::internal::FilePath&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::ConcatPaths(const testing::internal::FilePath&, const testing::internal::FilePath&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::FilePath(const string&)}
C {static testing::internal::FilePath testing::internal::FilePath::ConcatPaths(const testing::internal::FilePath&, const testing::internal::FilePath&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::ConcatPaths(const testing::internal::FilePath&, const testing::internal::FilePath&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, _CharT) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::ConcatPaths(const testing::internal::FilePath&, const testing::internal::FilePath&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const string& testing::internal::FilePath::string() const}
C {static testing::internal::FilePath testing::internal::FilePath::ConcatPaths(const testing::internal::FilePath&, const testing::internal::FilePath&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const string& testing::internal::FilePath::string() const}
C {static testing::internal::FilePath testing::internal::FilePath::ConcatPaths(const testing::internal::FilePath&, const testing::internal::FilePath&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath testing::internal::FilePath::RemoveTrailingPathSeparator() const}
C {static testing::internal::FilePath testing::internal::FilePath::ConcatPaths(const testing::internal::FilePath&, const testing::internal::FilePath&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::FilePath(const testing::internal::FilePath&)}
C {static testing::internal::FilePath testing::internal::FilePath::ConcatPaths(const testing::internal::FilePath&, const testing::internal::FilePath&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::FilePath::IsEmpty() const}
F {bool testing::internal::FilePath::IsEmpty() const} {../third-party/gtest/include/gtest/internal/gtest-filepath.h:111}
C {bool testing::internal::FilePath::IsEmpty() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::basic_string<_CharT, _Traits, _Alloc>::empty() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {const string& testing::internal::FilePath::string() const} {../third-party/gtest/include/gtest/internal/gtest-filepath.h:77}
F {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, _CharT) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:2359}
C {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, _CharT) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, _CharT) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::append(std::basic_string<_CharT, _Traits, _Alloc>::size_type, _CharT) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, _CharT) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
F {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)} {../third-party/gtest/src/gtest-filepath.cc:178}
C {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static testing::internal::FilePath testing::internal::FilePath::ConcatPaths(const testing::internal::FilePath&, const testing::internal::FilePath&)}
C {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::FilePath(const string&)}
C {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const string& testing::internal::FilePath::string() const}
C {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const string& testing::internal::FilePath::string() const}
C {static testing::internal::FilePath testing::internal::FilePath::MakeFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {testing::internal::FilePath testing::internal::FilePath::RemoveFileName() const} {../third-party/gtest/src/gtest-filepath.cc:161}
C {testing::internal::FilePath testing::internal::FilePath::RemoveFileName() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveFileName() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveFileName() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveFileName() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveFileName() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::FilePath(const string&)}
C {testing::internal::FilePath testing::internal::FilePath::RemoveFileName() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveFileName() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveFileName() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveFileName() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveFileName() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, std::basic_string<_CharT, _Traits, _Alloc>::size_type, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveFileName() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::internal::FilePath::c_str() const}
C {testing::internal::FilePath testing::internal::FilePath::RemoveFileName() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::internal::FilePath::c_str() const}
C {testing::internal::FilePath testing::internal::FilePath::RemoveFileName() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveFileName() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveFileName() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::internal::FilePath::FindLastPathSeparator() const}
F {testing::internal::FilePath testing::internal::FilePath::RemoveDirectoryName() const} {../third-party/gtest/src/gtest-filepath.cc:150}
C {testing::internal::FilePath testing::internal::FilePath::RemoveDirectoryName() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveDirectoryName() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveDirectoryName() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveDirectoryName() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveDirectoryName() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::FilePath(const testing::internal::FilePath&)}
C {testing::internal::FilePath testing::internal::FilePath::RemoveDirectoryName() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::FilePath(const string&)}
C {testing::internal::FilePath testing::internal::FilePath::RemoveDirectoryName() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveDirectoryName() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveDirectoryName() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::internal::FilePath::FindLastPathSeparator() const}
F {const char* testing::internal::FilePath::FindLastPathSeparator() const} {../third-party/gtest/src/gtest-filepath.cc:131}
C {const char* testing::internal::FilePath::FindLastPathSeparator() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* strrchr(const char*, int)}
C {const char* testing::internal::FilePath::FindLastPathSeparator() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::internal::FilePath::c_str() const}
F {const char* strrchr(const char*, int)} {/usr/include/string.h:255}
C {const char* strrchr(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {char* __builtin_strrchr(const char*, int)}
F {testing::internal::FilePath testing::internal::FilePath::RemoveExtension(const char*) const} {../third-party/gtest/src/gtest-filepath.cc:119}
C {testing::internal::FilePath testing::internal::FilePath::RemoveExtension(const char*) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveExtension(const char*) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveExtension(const char*) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveExtension(const char*) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveExtension(const char*) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveExtension(const char*) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveExtension(const char*) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::FilePath(const testing::internal::FilePath&)}
C {testing::internal::FilePath testing::internal::FilePath::RemoveExtension(const char*) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveExtension(const char*) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::FilePath(const string&)}
C {testing::internal::FilePath testing::internal::FilePath::RemoveExtension(const char*) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::basic_string<_CharT, _Traits, _Alloc>::substr(std::basic_string<_CharT, _Traits, _Alloc>::size_type, std::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveExtension(const char*) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveExtension(const char*) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveExtension(const char*) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::String::EndsWithCaseInsensitive(const string&, const string&)}
C {testing::internal::FilePath testing::internal::FilePath::RemoveExtension(const char*) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveExtension(const char*) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveExtension(const char*) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveExtension(const char*) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::FilePath testing::internal::FilePath::RemoveExtension(const char*) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
F {static testing::internal::FilePath testing::internal::FilePath::GetCurrentDir()} {../third-party/gtest/src/gtest-filepath.cc:101}
C {static testing::internal::FilePath testing::internal::FilePath::GetCurrentDir()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static testing::internal::FilePath testing::internal::FilePath::GetCurrentDir()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::GetCurrentDir()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static testing::internal::FilePath testing::internal::FilePath::GetCurrentDir()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::GetCurrentDir()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::FilePath(const string&)}
C {static testing::internal::FilePath testing::internal::FilePath::GetCurrentDir()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::FilePath testing::internal::FilePath::GetCurrentDir()} {../third-party/gtest/src/gtest-typed-test.cc:110} {char* getcwd(char*, size_t)}
C {static testing::internal::FilePath testing::internal::FilePath::GetCurrentDir()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
F {testing::internal::InternalRunDeathTestFlag* testing::internal::ParseInternalRunDeathTestFlag()} {../third-party/gtest/src/gtest-death-test.cc:1296}
C {testing::internal::InternalRunDeathTestFlag* testing::internal::ParseInternalRunDeathTestFlag()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]}
C {testing::internal::InternalRunDeathTestFlag* testing::internal::ParseInternalRunDeathTestFlag()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::InternalRunDeathTestFlag* testing::internal::ParseInternalRunDeathTestFlag()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::InternalRunDeathTestFlag* testing::internal::ParseInternalRunDeathTestFlag()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::internal::InternalRunDeathTestFlag* testing::internal::ParseInternalRunDeathTestFlag()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::InternalRunDeathTestFlag* testing::internal::ParseInternalRunDeathTestFlag()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]}
C {testing::internal::InternalRunDeathTestFlag* testing::internal::ParseInternalRunDeathTestFlag()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::InternalRunDeathTestFlag::InternalRunDeathTestFlag(const string&, int, int, int)}
C {testing::internal::InternalRunDeathTestFlag* testing::internal::ParseInternalRunDeathTestFlag()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {testing::internal::InternalRunDeathTestFlag* testing::internal::ParseInternalRunDeathTestFlag()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::reference = std::basic_string<char>&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {testing::internal::InternalRunDeathTestFlag* testing::internal::ParseInternalRunDeathTestFlag()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::InternalRunDeathTestFlag* testing::internal::ParseInternalRunDeathTestFlag()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestAbort(const string&)}
C {testing::internal::InternalRunDeathTestFlag* testing::internal::ParseInternalRunDeathTestFlag()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::InternalRunDeathTestFlag* testing::internal::ParseInternalRunDeathTestFlag()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseNaturalNumber(const string&, Integer*) [with Integer = int, std::string = std::basic_string<char>]}
C {testing::internal::InternalRunDeathTestFlag* testing::internal::ParseInternalRunDeathTestFlag()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::reference = std::basic_string<char>&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {testing::internal::InternalRunDeathTestFlag* testing::internal::ParseInternalRunDeathTestFlag()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseNaturalNumber(const string&, Integer*) [with Integer = int, std::string = std::basic_string<char>]}
C {testing::internal::InternalRunDeathTestFlag* testing::internal::ParseInternalRunDeathTestFlag()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::reference = std::basic_string<char>&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {testing::internal::InternalRunDeathTestFlag* testing::internal::ParseInternalRunDeathTestFlag()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseNaturalNumber(const string&, Integer*) [with Integer = int, std::string = std::basic_string<char>]}
C {testing::internal::InternalRunDeathTestFlag* testing::internal::ParseInternalRunDeathTestFlag()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::reference = std::basic_string<char>&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {testing::internal::InternalRunDeathTestFlag* testing::internal::ParseInternalRunDeathTestFlag()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {testing::internal::InternalRunDeathTestFlag* testing::internal::ParseInternalRunDeathTestFlag()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::internal::InternalRunDeathTestFlag* testing::internal::ParseInternalRunDeathTestFlag()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::InternalRunDeathTestFlag* testing::internal::ParseInternalRunDeathTestFlag()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::SplitString(const string&, char, std::vector<std::basic_string<char> >*)}
C {testing::internal::InternalRunDeathTestFlag* testing::internal::ParseInternalRunDeathTestFlag()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::InternalRunDeathTestFlag* testing::internal::ParseInternalRunDeathTestFlag()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::InternalRunDeathTestFlag* testing::internal::ParseInternalRunDeathTestFlag()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {testing::internal::InternalRunDeathTestFlag* testing::internal::ParseInternalRunDeathTestFlag()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::vector() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]}
C {testing::internal::InternalRunDeathTestFlag* testing::internal::ParseInternalRunDeathTestFlag()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {void testing::internal::SplitString(const string&, char, std::vector<std::basic_string<char> >*)} {../third-party/gtest/src/gtest-death-test.cc:1208}
C {void testing::internal::SplitString(const string&, char, std::vector<std::basic_string<char> >*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]}
C {void testing::internal::SplitString(const string&, char, std::vector<std::basic_string<char> >*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::SplitString(const string&, char, std::vector<std::basic_string<char> >*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::SplitString(const string&, char, std::vector<std::basic_string<char> >*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]}
C {void testing::internal::SplitString(const string&, char, std::vector<std::basic_string<char> >*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::swap(std::vector<_Tp, _Alloc>&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc> = std::vector<std::basic_string<char> >]}
C {void testing::internal::SplitString(const string&, char, std::vector<std::basic_string<char> >*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::AlwaysTrue()}
C {void testing::internal::SplitString(const string&, char, std::vector<std::basic_string<char> >*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::SplitString(const string&, char, std::vector<std::basic_string<char> >*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::value_type = std::basic_string<char>]}
C {void testing::internal::SplitString(const string&, char, std::vector<std::basic_string<char> >*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::basic_string<_CharT, _Traits, _Alloc>::substr(std::basic_string<_CharT, _Traits, _Alloc>::size_type, std::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {void testing::internal::SplitString(const string&, char, std::vector<std::basic_string<char> >*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::SplitString(const string&, char, std::vector<std::basic_string<char> >*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::value_type = std::basic_string<char>]}
C {void testing::internal::SplitString(const string&, char, std::vector<std::basic_string<char> >*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::basic_string<_CharT, _Traits, _Alloc>::substr(std::basic_string<_CharT, _Traits, _Alloc>::size_type, std::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {void testing::internal::SplitString(const string&, char, std::vector<std::basic_string<char> >*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::find(_CharT, std::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {void testing::internal::SplitString(const string&, char, std::vector<std::basic_string<char> >*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::vector() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]}
F {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::value_type = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:826}
C {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::value_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]}
C {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::value_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]}
C {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::value_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = std::basic_string<char>, __gnu_cxx::new_allocator<_Tp>::pointer = std::basic_string<char>*]}
F {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:481}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >]}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:720}
F {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/vector.tcc:300}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_rethrow()}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, typename _Alloc::rebind<_Tp>::other::pointer = std::basic_string<char>*, std::size_t = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = std::basic_string<char>*, _Tp = std::basic_string<char>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<std::basic_string<char> >]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::destroy(__gnu_cxx::new_allocator<_Tp>::pointer) [with _Tp = std::basic_string<char>, __gnu_cxx::new_allocator<_Tp>::pointer = std::basic_string<char>*]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_begin_catch(void*)}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_eh_pointer(int)}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, typename _Alloc::rebind<_Tp>::other::pointer = std::basic_string<char>*, std::size_t = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = std::basic_string<char>*, _Tp = std::basic_string<char>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<std::basic_string<char> >]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::basic_string<char>*, _ForwardIterator = std::basic_string<char>*, _Allocator = std::allocator<std::basic_string<char> >]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<std::basic_string<char> >]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::basic_string<char>*, _ForwardIterator = std::basic_string<char>*, _Allocator = std::allocator<std::basic_string<char> >]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<std::basic_string<char> >]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = std::basic_string<char>, __gnu_cxx::new_allocator<_Tp>::pointer = std::basic_string<char>*]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename _Alloc::rebind<_Tp>::other::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, typename _Alloc::rebind<_Tp>::other::pointer = std::basic_string<char>*, std::size_t = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = std::basic_string<char>&]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = std::basic_string<char>*, _BI2 = std::basic_string<char>*]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = std::basic_string<char>, __gnu_cxx::new_allocator<_Tp>::pointer = std::basic_string<char>*]}
F {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = std::basic_string<char>*, _BI2 = std::basic_string<char>*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:613}
C {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = std::basic_string<char>*, _BI2 = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = std::basic_string<char>*, _BI2 = std::basic_string<char>*]}
C {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = std::basic_string<char>*, _BI2 = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = std::basic_string<char>*, typename std::_Miter_base<_Iterator>::iterator_type = std::basic_string<char>*]}
C {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = std::basic_string<char>*, _BI2 = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = std::basic_string<char>*, typename std::_Miter_base<_Iterator>::iterator_type = std::basic_string<char>*]}
F {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = std::basic_string<char>*, typename std::_Miter_base<_Iterator>::iterator_type = std::basic_string<char>*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:282}
C {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = std::basic_string<char>*, typename std::_Miter_base<_Iterator>::iterator_type = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = std::basic_string<char>*, bool _HasBase = false, std::_Iter_base<_Iterator, _HasBase>::iterator_type = std::basic_string<char>*]}
F {static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = std::basic_string<char>*, bool _HasBase = false, std::_Iter_base<_Iterator, _HasBase>::iterator_type = std::basic_string<char>*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator_base_types.h:213}
F {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = std::basic_string<char>*, _BI2 = std::basic_string<char>*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:586}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = std::basic_string<char>*, _BI2 = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = std::basic_string<char>*, _BI2 = std::basic_string<char>*]}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = std::basic_string<char>*, _BI2 = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = std::basic_string<char>*, typename std::_Niter_base<_Iterator>::iterator_type = std::basic_string<char>*]}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = std::basic_string<char>*, _BI2 = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = std::basic_string<char>*, typename std::_Niter_base<_Iterator>::iterator_type = std::basic_string<char>*]}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = std::basic_string<char>*, _BI2 = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = std::basic_string<char>*, typename std::_Niter_base<_Iterator>::iterator_type = std::basic_string<char>*]}
F {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = std::basic_string<char>*, typename std::_Niter_base<_Iterator>::iterator_type = std::basic_string<char>*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:271}
C {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = std::basic_string<char>*, typename std::_Niter_base<_Iterator>::iterator_type = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = std::basic_string<char>*, bool _HasBase = false, std::_Iter_base<_Iterator, _HasBase>::iterator_type = std::basic_string<char>*]}
F {_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = std::basic_string<char>*, _BI2 = std::basic_string<char>*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:568}
C {_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = std::basic_string<char>*, _BI2 = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _BI2 std::__copy_move_backward<false, false, std::random_access_iterator_tag>::__copy_move_b(_BI1, _BI1, _BI2) [with _BI1 = std::basic_string<char>*, _BI2 = std::basic_string<char>*]}
F {static _BI2 std::__copy_move_backward<false, false, std::random_access_iterator_tag>::__copy_move_b(_BI1, _BI1, _BI2) [with _BI1 = std::basic_string<char>*, _BI2 = std::basic_string<char>*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:527}
C {static _BI2 std::__copy_move_backward<false, false, std::random_access_iterator_tag>::__copy_move_b(_BI1, _BI1, _BI2) [with _BI1 = std::basic_string<char>*, _BI2 = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = std::basic_string<char>&]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:732}
F {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:1239}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::__throw_length_error(const char*)}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:575}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = std::basic_string<char>, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<std::basic_string<char> >]}
F {const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:99}
F {__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = std::basic_string<char>, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:101}
F {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:463}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >]}
F {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:890}
C {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >]}
C {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >]}
F {typename _Alloc::rebind<_Tp>::other::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, typename _Alloc::rebind<_Tp>::other::pointer = std::basic_string<char>*, std::size_t = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:149}
C {typename _Alloc::rebind<_Tp>::other::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, typename _Alloc::rebind<_Tp>::other::pointer = std::basic_string<char>*, std::size_t = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::basic_string<char>, __gnu_cxx::new_allocator<_Tp>::pointer = std::basic_string<char>*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::basic_string<char>, __gnu_cxx::new_allocator<_Tp>::pointer = std::basic_string<char>*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:87}
C {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::basic_string<char>, __gnu_cxx::new_allocator<_Tp>::pointer = std::basic_string<char>*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::basic_string<char>, __gnu_cxx::new_allocator<_Tp>::pointer = std::basic_string<char>*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::__throw_bad_alloc()}
C {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::basic_string<char>, __gnu_cxx::new_allocator<_Tp>::pointer = std::basic_string<char>*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = std::basic_string<char>, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:784}
F {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::basic_string<char>*, _ForwardIterator = std::basic_string<char>*, _Allocator = std::allocator<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:264}
C {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = std::basic_string<char>*, _ForwardIterator = std::basic_string<char>*, _Allocator = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = std::basic_string<char>*, _ForwardIterator = std::basic_string<char>*, _Tp = std::basic_string<char>]}
F {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = std::basic_string<char>*, _ForwardIterator = std::basic_string<char>*, _Tp = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:257}
C {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = std::basic_string<char>*, _ForwardIterator = std::basic_string<char>*, _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::basic_string<char>*, _ForwardIterator = std::basic_string<char>*]}
F {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::basic_string<char>*, _ForwardIterator = std::basic_string<char>*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:109}
C {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::basic_string<char>*, _ForwardIterator = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::basic_string<char>*, _ForwardIterator = std::basic_string<char>*, bool _TrivialValueTypes = false]}
F {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::basic_string<char>*, _ForwardIterator = std::basic_string<char>*, bool _TrivialValueTypes = false]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:70}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::basic_string<char>*, _ForwardIterator = std::basic_string<char>*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_rethrow()}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::basic_string<char>*, _ForwardIterator = std::basic_string<char>*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::basic_string<char>*]}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::basic_string<char>*, _ForwardIterator = std::basic_string<char>*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_begin_catch(void*)}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::basic_string<char>*, _ForwardIterator = std::basic_string<char>*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_eh_pointer(int)}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::basic_string<char>*, _ForwardIterator = std::basic_string<char>*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::basic_string<char>*, _ForwardIterator = std::basic_string<char>*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Construct(_T1*, const _T2&) [with _T1 = std::basic_string<char>, _T2 = std::basic_string<char>]}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::basic_string<char>*, _ForwardIterator = std::basic_string<char>*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_Tp* std::__addressof(_Tp&) [with _Tp = std::basic_string<char>]}
F {void std::_Construct(_T1*, const _T2&) [with _T1 = std::basic_string<char>, _T2 = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:80}
C {void std::_Construct(_T1*, const _T2&) [with _T1 = std::basic_string<char>, _T2 = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*, void*)}
C {void std::_Construct(_T1*, const _T2&) [with _T1 = std::basic_string<char>, _T2 = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {void std::_Construct(_T1*, const _T2&) [with _T1 = std::basic_string<char>, _T2 = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t, void*)}
F {void std::vector<_Tp, _Alloc>::swap(std::vector<_Tp, _Alloc>&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc> = std::vector<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:1019}
C {void std::vector<_Tp, _Alloc>::swap(std::vector<_Tp, _Alloc>&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc> = std::vector<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void std::__alloc_swap<_Alloc, <anonymous> >::_S_do_it(_Alloc&, _Alloc&) [with _Alloc = std::allocator<std::basic_string<char> >, bool <anonymous> = true]}
C {void std::vector<_Tp, _Alloc>::swap(std::vector<_Tp, _Alloc>&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc> = std::vector<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<std::basic_string<char> >]}
C {void std::vector<_Tp, _Alloc>::swap(std::vector<_Tp, _Alloc>&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc> = std::vector<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<std::basic_string<char> >]}
C {void std::vector<_Tp, _Alloc>::swap(std::vector<_Tp, _Alloc>&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc> = std::vector<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::swap(_Tp&, _Tp&) [with _Tp = std::basic_string<char>*]}
C {void std::vector<_Tp, _Alloc>::swap(std::vector<_Tp, _Alloc>&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc> = std::vector<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::swap(_Tp&, _Tp&) [with _Tp = std::basic_string<char>*]}
C {void std::vector<_Tp, _Alloc>::swap(std::vector<_Tp, _Alloc>&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc> = std::vector<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::swap(_Tp&, _Tp&) [with _Tp = std::basic_string<char>*]}
F {void std::swap(_Tp&, _Tp&) [with _Tp = std::basic_string<char>*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/move.h:122}
F {static void std::__alloc_swap<_Alloc, <anonymous> >::_S_do_it(_Alloc&, _Alloc&) [with _Alloc = std::allocator<std::basic_string<char> >, bool <anonymous> = true]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:153}
F {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:570}
F {bool testing::internal::ParseNaturalNumber(const string&, Integer*) [with Integer = int, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-internal-inl.h:1002}
C {bool testing::internal::ParseNaturalNumber(const string&, Integer*) [with Integer = int, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {bool testing::internal::ParseNaturalNumber(const string&, Integer*) [with Integer = int, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {bool testing::internal::ParseNaturalNumber(const string&, Integer*) [with Integer = int, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {bool testing::internal::ParseNaturalNumber(const string&, Integer*) [with Integer = int, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {bool testing::internal::ParseNaturalNumber(const string&, Integer*) [with Integer = int, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {bool testing::internal::ParseNaturalNumber(const string&, Integer*) [with Integer = int, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsTrue(bool)}
C {bool testing::internal::ParseNaturalNumber(const string&, Integer*) [with Integer = int, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {int* __errno_location()}
C {bool testing::internal::ParseNaturalNumber(const string&, Integer*) [with Integer = int, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {long long unsigned int strtoull(const char*, char**, int)}
C {bool testing::internal::ParseNaturalNumber(const string&, Integer*) [with Integer = int, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {bool testing::internal::ParseNaturalNumber(const string&, Integer*) [with Integer = int, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {int* __errno_location()}
C {bool testing::internal::ParseNaturalNumber(const string&, Integer*) [with Integer = int, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsDigit(char)}
C {bool testing::internal::ParseNaturalNumber(const string&, Integer*) [with Integer = int, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::const_reference std::basic_string<_CharT, _Traits, _Alloc>::operator[](std::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::const_reference = const char&, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {bool testing::internal::ParseNaturalNumber(const string&, Integer*) [with Integer = int, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::basic_string<_CharT, _Traits, _Alloc>::empty() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {std::basic_string<_CharT, _Traits, _Alloc>::const_reference std::basic_string<_CharT, _Traits, _Alloc>::operator[](std::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::const_reference = const char&, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:818}
C {std::basic_string<_CharT, _Traits, _Alloc>::const_reference std::basic_string<_CharT, _Traits, _Alloc>::operator[](std::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::const_reference = const char&, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_CharT* std::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {bool testing::internal::IsDigit(char)} {../third-party/gtest/include/gtest/internal/gtest-port.h:1665}
F {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::reference = std::basic_string<char>&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:695}
F {testing::internal::InternalRunDeathTestFlag::InternalRunDeathTestFlag(const string&, int, int, int)} {../third-party/gtest/include/gtest/internal/gtest-death-test-internal.h:236}
C {testing::internal::InternalRunDeathTestFlag::InternalRunDeathTestFlag(const string&, int, int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
F {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-death-test.cc:1153}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::DeathTest::set_last_death_test_message(const string&)}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::NoExecDeathTest::NoExecDeathTest(const char*, const testing::internal::RE*)}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ExecDeathTest::ExecDeathTest(const char*, const testing::internal::RE*, const char*, int)}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::InternalRunDeathTestFlag::index() const}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::InternalRunDeathTestFlag::line() const}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const string& testing::internal::InternalRunDeathTestFlag::file() const}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::DeathTest::set_last_death_test_message(const string&)}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::InternalRunDeathTestFlag::index() const}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::InternalRunDeathTestFlag::index() const}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::TestInfo::increment_death_test_count()}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestInfo* testing::internal::UnitTestImpl::current_test_info()}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::internal::InternalRunDeathTestFlag* testing::internal::UnitTestImpl::internal_run_death_test_flag() const}
C {virtual bool testing::internal::DefaultDeathTestFactory::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UnitTestImpl* testing::internal::GetUnitTestImpl()}
F {const testing::internal::InternalRunDeathTestFlag* testing::internal::UnitTestImpl::internal_run_death_test_flag() const} {../third-party/gtest/src/gtest-internal-inl.h:766}
C {const testing::internal::InternalRunDeathTestFlag* testing::internal::UnitTestImpl::internal_run_death_test_flag() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {T* testing::internal::scoped_ptr<T>::get() const [with T = testing::internal::InternalRunDeathTestFlag]}
F {T* testing::internal::scoped_ptr<T>::get() const [with T = testing::internal::InternalRunDeathTestFlag]} {../third-party/gtest/include/gtest/internal/gtest-port.h:899}
F {testing::TestInfo* testing::internal::UnitTestImpl::current_test_info()} {../third-party/gtest/src/gtest-internal-inl.h:743}
F {int testing::TestInfo::increment_death_test_count()} {../third-party/gtest/include/gtest/gtest.h:707}
C {int testing::TestInfo::increment_death_test_count()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::TestResult::increment_death_test_count()}
F {int testing::TestResult::increment_death_test_count()} {../third-party/gtest/include/gtest/gtest.h:585}
F {const string& testing::internal::InternalRunDeathTestFlag::file() const} {../third-party/gtest/include/gtest/internal/gtest-death-test-internal.h:248}
F {int testing::internal::InternalRunDeathTestFlag::line() const} {../third-party/gtest/include/gtest/internal/gtest-death-test-internal.h:249}
F {int testing::internal::InternalRunDeathTestFlag::index() const} {../third-party/gtest/include/gtest/internal/gtest-death-test-internal.h:250}
F {testing::internal::ExecDeathTest::ExecDeathTest(const char*, const testing::internal::RE*, const char*, int)} {../third-party/gtest/src/gtest-death-test.cc:870}
C {testing::internal::ExecDeathTest::ExecDeathTest(const char*, const testing::internal::RE*, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ForkingDeathTest::ForkingDeathTest(const char*, const testing::internal::RE*)}
F {testing::internal::NoExecDeathTest::NoExecDeathTest(const char*, const testing::internal::RE*)} {../third-party/gtest/src/gtest-death-test.cc:815}
C {testing::internal::NoExecDeathTest::NoExecDeathTest(const char*, const testing::internal::RE*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ForkingDeathTest::ForkingDeathTest(const char*, const testing::internal::RE*)}
F {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-death-test.cc:1100}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::Arguments::~Arguments()}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::Arguments::~Arguments()}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestImpl::set_spawned(bool)}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestImpl::set_read_fd(int)}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ForkingDeathTest::set_child_pid(pid_t)}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::AlwaysFalse()}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestAbort(const string&)}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int* __errno_location()}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int close(int)}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {char* const* testing::internal::Arguments::Argv()}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::FlushInfoLog()}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::CaptureStderr()}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::DeathTest::set_last_death_test_message(const string&)}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::Arguments::AddArgument(const char*)}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::Arguments::AddArgument(const char*)}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::Arguments::AddArguments(const std::vector<T>&) [with Str = std::basic_string<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::vector<std::basic_string<char> > testing::internal::ExecDeathTest::GetArgvsForDeathTestChildProcess()}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::Arguments::Arguments()}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestInfo::test_case_name() const}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestInfo::name() const}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::AlwaysFalse()}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestAbort(const string&)}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsTrue(bool)}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fcntl(int, int, ...)}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::AlwaysFalse()}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestAbort(const string&)}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsTrue(bool)}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int pipe(int*)}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestImpl::set_write_fd(int)}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::InternalRunDeathTestFlag::write_fd() const}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::TestResult::death_test_count() const}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::TestResult* testing::TestInfo::result() const}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::TestInfo* testing::internal::UnitTestImpl::current_test_info() const}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::internal::InternalRunDeathTestFlag* testing::internal::UnitTestImpl::internal_run_death_test_flag() const}
C {virtual testing::internal::DeathTest::TestRole testing::internal::ExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UnitTestImpl* testing::internal::GetUnitTestImpl()}
F {const testing::TestInfo* testing::internal::UnitTestImpl::current_test_info() const} {../third-party/gtest/src/gtest-internal-inl.h:744}
F {const testing::TestResult* testing::TestInfo::result() const} {../third-party/gtest/include/gtest/gtest.h:676}
F {int testing::TestResult::death_test_count() const} {../third-party/gtest/include/gtest/gtest.h:582}
F {int testing::internal::InternalRunDeathTestFlag::write_fd() const} {../third-party/gtest/include/gtest/internal/gtest-death-test-internal.h:251}
F {void testing::internal::DeathTestImpl::set_write_fd(int)} {../third-party/gtest/src/gtest-death-test.cc:390}
F {const char* testing::TestInfo::name() const} {../third-party/gtest/include/gtest/gtest.h:631}
C {const char* testing::TestInfo::name() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {const char* testing::TestInfo::test_case_name() const} {../third-party/gtest/include/gtest/gtest.h:628}
C {const char* testing::TestInfo::test_case_name() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {testing::internal::Arguments::Arguments()} {../third-party/gtest/src/gtest-death-test.cc:889}
C {testing::internal::Arguments::Arguments()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = char*, _Alloc = std::allocator<char*>]}
C {testing::internal::Arguments::Arguments()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::value_type = char*]}
C {testing::internal::Arguments::Arguments()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::vector() [with _Tp = char*, _Alloc = std::allocator<char*>]}
F {std::vector<_Tp, _Alloc>::vector() [with _Tp = char*, _Alloc = std::allocator<char*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:217}
C {std::vector<_Tp, _Alloc>::vector() [with _Tp = char*, _Alloc = std::allocator<char*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = char*, _Alloc = std::allocator<char*>]}
F {std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = char*, _Alloc = std::allocator<char*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:106}
C {std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = char*, _Alloc = std::allocator<char*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = char*, _Alloc = std::allocator<char*>]}
F {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = char*, _Alloc = std::allocator<char*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:82}
C {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = char*, _Alloc = std::allocator<char*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char*]}
F {std::allocator<_Alloc>::allocator() [with _Tp = char*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:107}
C {std::allocator<_Alloc>::allocator() [with _Tp = char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = char*]}
F {__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = char*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:69}
F {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::value_type = char*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:826}
C {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::value_type = char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]}
C {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::value_type = char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]}
C {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::value_type = char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = char*, __gnu_cxx::new_allocator<_Tp>::pointer = char**]}
F {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = char*, __gnu_cxx::new_allocator<_Tp>::pointer = char**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:107}
C {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = char*, __gnu_cxx::new_allocator<_Tp>::pointer = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t, void*)}
F {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:481}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = char**, _Container = std::vector<char*>]}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = char**, _Container = std::vector<char*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:720}
F {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/vector.tcc:300}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_rethrow()}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = char*, _Alloc = std::allocator<char*>, typename _Alloc::rebind<_Tp>::other::pointer = char**, std::size_t = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = char**, _Tp = char*]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = char*, _Alloc = std::allocator<char*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<char*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::destroy(__gnu_cxx::new_allocator<_Tp>::pointer) [with _Tp = char*, __gnu_cxx::new_allocator<_Tp>::pointer = char**]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_begin_catch(void*)}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_eh_pointer(int)}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = char*, _Alloc = std::allocator<char*>, typename _Alloc::rebind<_Tp>::other::pointer = char**, std::size_t = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = char**, _Tp = char*]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = char*, _Alloc = std::allocator<char*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<char*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = char**, _ForwardIterator = char**, _Allocator = std::allocator<char*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = char**, _Container = std::vector<char*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = char*, _Alloc = std::allocator<char*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<char*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = char**, _ForwardIterator = char**, _Allocator = std::allocator<char*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = char**, _Container = std::vector<char*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = char*, _Alloc = std::allocator<char*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<char*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = char*, __gnu_cxx::new_allocator<_Tp>::pointer = char**]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename _Alloc::rebind<_Tp>::other::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = char*, _Alloc = std::allocator<char*>, typename _Alloc::rebind<_Tp>::other::pointer = char**, std::size_t = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char**, _Container = std::vector<char*>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = char**, _Container = std::vector<char*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = char*&]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = char**, _BI2 = char**]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = char**, _Container = std::vector<char*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = char*, __gnu_cxx::new_allocator<_Tp>::pointer = char**]}
F {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = char**, _BI2 = char**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:613}
C {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = char**, _BI2 = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = char**, _BI2 = char**]}
C {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = char**, _BI2 = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = char**, typename std::_Miter_base<_Iterator>::iterator_type = char**]}
C {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = char**, _BI2 = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = char**, typename std::_Miter_base<_Iterator>::iterator_type = char**]}
F {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = char**, typename std::_Miter_base<_Iterator>::iterator_type = char**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:282}
C {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = char**, typename std::_Miter_base<_Iterator>::iterator_type = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = char**, bool _HasBase = false, std::_Iter_base<_Iterator, _HasBase>::iterator_type = char**]}
F {static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = char**, bool _HasBase = false, std::_Iter_base<_Iterator, _HasBase>::iterator_type = char**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator_base_types.h:213}
F {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = char**, _BI2 = char**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:586}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = char**, _BI2 = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = char**, _BI2 = char**]}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = char**, _BI2 = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = char**, typename std::_Niter_base<_Iterator>::iterator_type = char**]}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = char**, _BI2 = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = char**, typename std::_Niter_base<_Iterator>::iterator_type = char**]}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = char**, _BI2 = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = char**, typename std::_Niter_base<_Iterator>::iterator_type = char**]}
F {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = char**, typename std::_Niter_base<_Iterator>::iterator_type = char**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:271}
C {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = char**, typename std::_Niter_base<_Iterator>::iterator_type = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = char**, bool _HasBase = false, std::_Iter_base<_Iterator, _HasBase>::iterator_type = char**]}
F {_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = char**, _BI2 = char**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:568}
C {_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = char**, _BI2 = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _Tp* std::__copy_move_backward<_IsMove, true, std::random_access_iterator_tag>::__copy_move_b(const _Tp*, const _Tp*, _Tp*) [with _Tp = char*, bool _IsMove = false]}
F {static _Tp* std::__copy_move_backward<_IsMove, true, std::random_access_iterator_tag>::__copy_move_b(const _Tp*, const _Tp*, _Tp*) [with _Tp = char*, bool _IsMove = false]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:557}
C {static _Tp* std::__copy_move_backward<_IsMove, true, std::random_access_iterator_tag>::__copy_move_b(const _Tp*, const _Tp*, _Tp*) [with _Tp = char*, bool _IsMove = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_memmove(void*, const void*, long unsigned int)}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = char**, _Container = std::vector<char*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = char*&]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:732}
F {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:1239}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::__throw_length_error(const char*)}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:570}
F {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:575}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = char*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = char*, _Alloc = std::allocator<char*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<char*>]}
F {const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = char*, _Alloc = std::allocator<char*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<char*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:99}
F {__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = char*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:101}
F {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:463}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = char**, _Container = std::vector<char*>]}
F {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char**, _Container = std::vector<char*>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:890}
C {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char**, _Container = std::vector<char*>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = char**, _Container = std::vector<char*>]}
C {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char**, _Container = std::vector<char*>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = char**, _Container = std::vector<char*>]}
F {typename _Alloc::rebind<_Tp>::other::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = char*, _Alloc = std::allocator<char*>, typename _Alloc::rebind<_Tp>::other::pointer = char**, std::size_t = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:149}
C {typename _Alloc::rebind<_Tp>::other::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = char*, _Alloc = std::allocator<char*>, typename _Alloc::rebind<_Tp>::other::pointer = char**, std::size_t = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = char*, __gnu_cxx::new_allocator<_Tp>::pointer = char**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = char*, __gnu_cxx::new_allocator<_Tp>::pointer = char**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:87}
C {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = char*, __gnu_cxx::new_allocator<_Tp>::pointer = char**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = char*, __gnu_cxx::new_allocator<_Tp>::pointer = char**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::__throw_bad_alloc()}
C {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = char*, __gnu_cxx::new_allocator<_Tp>::pointer = char**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = char*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = char**, _Container = std::vector<char*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:784}
F {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = char**, _ForwardIterator = char**, _Allocator = std::allocator<char*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:264}
C {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = char**, _ForwardIterator = char**, _Allocator = std::allocator<char*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = char**, _ForwardIterator = char**, _Tp = char*]}
F {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = char**, _ForwardIterator = char**, _Tp = char*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:257}
C {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = char**, _ForwardIterator = char**, _Tp = char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = char**, _ForwardIterator = char**]}
F {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = char**, _ForwardIterator = char**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:109}
C {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = char**, _ForwardIterator = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _ForwardIterator std::__uninitialized_copy<true>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = char**, _ForwardIterator = char**]}
F {static _ForwardIterator std::__uninitialized_copy<true>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = char**, _ForwardIterator = char**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:93}
C {static _ForwardIterator std::__uninitialized_copy<true>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = char**, _ForwardIterator = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_OI std::copy(_II, _II, _OI) [with _II = char**, _OI = char**]}
F {_OI std::copy(_II, _II, _OI) [with _II = char**, _OI = char**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:444}
C {_OI std::copy(_II, _II, _OI) [with _II = char**, _OI = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = char**, _OI = char**]}
C {_OI std::copy(_II, _II, _OI) [with _II = char**, _OI = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = char**, typename std::_Miter_base<_Iterator>::iterator_type = char**]}
C {_OI std::copy(_II, _II, _OI) [with _II = char**, _OI = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = char**, typename std::_Miter_base<_Iterator>::iterator_type = char**]}
F {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = char**, _OI = char**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:418}
C {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = char**, _OI = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false, _II = char**, _OI = char**]}
C {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = char**, _OI = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = char**, typename std::_Niter_base<_Iterator>::iterator_type = char**]}
C {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = char**, _OI = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = char**, typename std::_Niter_base<_Iterator>::iterator_type = char**]}
C {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = char**, _OI = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = char**, typename std::_Niter_base<_Iterator>::iterator_type = char**]}
F {_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false, _II = char**, _OI = char**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:373}
C {_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false, _II = char**, _OI = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = char*, bool _IsMove = false]}
F {static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = char*, bool _IsMove = false]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:362}
C {static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = char*, bool _IsMove = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_memmove(void*, const void*, long unsigned int)}
F {void __gnu_cxx::new_allocator<_Tp>::destroy(__gnu_cxx::new_allocator<_Tp>::pointer) [with _Tp = char*, __gnu_cxx::new_allocator<_Tp>::pointer = char**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:118}
F {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = char*, _Alloc = std::allocator<char*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<char*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:95}
F {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = char**, _Tp = char*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:150}
C {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = char**, _Tp = char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = char**]}
F {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = char**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:123}
C {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = char**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void std::_Destroy_aux<true>::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = char**]}
F {static void std::_Destroy_aux<true>::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = char**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:113}
F {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = char*, _Alloc = std::allocator<char*>, typename _Alloc::rebind<_Tp>::other::pointer = char**, std::size_t = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:153}
C {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = char*, _Alloc = std::allocator<char*>, typename _Alloc::rebind<_Tp>::other::pointer = char**, std::size_t = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = char*, __gnu_cxx::new_allocator<_Tp>::pointer = char**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = char*, __gnu_cxx::new_allocator<_Tp>::pointer = char**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:97}
C {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = char*, __gnu_cxx::new_allocator<_Tp>::pointer = char**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
F {std::vector<_Tp, _Alloc>::~vector() [with _Tp = char*, _Alloc = std::allocator<char*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:349}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = char*, _Alloc = std::allocator<char*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = char*, _Alloc = std::allocator<char*>]}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = char*, _Alloc = std::allocator<char*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = char*, _Alloc = std::allocator<char*>]}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = char*, _Alloc = std::allocator<char*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = char**, _Tp = char*]}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = char*, _Alloc = std::allocator<char*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = char*, _Alloc = std::allocator<char*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<char*>]}
F {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = char*, _Alloc = std::allocator<char*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:141}
C {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = char*, _Alloc = std::allocator<char*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<char*, std::allocator<char*> >::_Vector_impl::~_Vector_impl()}
C {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = char*, _Alloc = std::allocator<char*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<char*, std::allocator<char*> >::_Vector_impl::~_Vector_impl()}
C {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = char*, _Alloc = std::allocator<char*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = char*, _Alloc = std::allocator<char*>, typename _Alloc::rebind<_Tp>::other::pointer = char**, std::size_t = long unsigned int]}
F {std::_Vector_base<char*, std::allocator<char*> >::_Vector_impl::~_Vector_impl()} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:75}
C {std::_Vector_base<char*, std::allocator<char*> >::_Vector_impl::~_Vector_impl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char*]}
F {std::allocator<_Alloc>::~allocator() [with _Tp = char*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:115}
C {std::allocator<_Alloc>::~allocator() [with _Tp = char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = char*]}
F {__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = char*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:76}
F {static std::vector<std::basic_string<char> > testing::internal::ExecDeathTest::GetArgvsForDeathTestChildProcess()} {../third-party/gtest/src/gtest-death-test.cc:876}
C {static std::vector<std::basic_string<char> > testing::internal::ExecDeathTest::GetArgvsForDeathTestChildProcess()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc> = std::vector<std::basic_string<char> >]}
C {static std::vector<std::basic_string<char> > testing::internal::ExecDeathTest::GetArgvsForDeathTestChildProcess()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const std::vector<std::basic_string<char> >& testing::internal::GetInjectableArgvs()}
F {std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc> = std::vector<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:278}
C {std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc> = std::vector<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]}
C {std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc> = std::vector<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _ForwardIterator = std::basic_string<char>*, _Tp = std::basic_string<char>]}
C {std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc> = std::vector<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = const std::basic_string<char>*]}
C {std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc> = std::vector<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = const std::basic_string<char>*]}
C {std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc> = std::vector<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<std::basic_string<char> >]}
C {std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc> = std::vector<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::size_t = long unsigned int, std::_Vector_base<_Tp, _Alloc>::allocator_type = std::allocator<std::basic_string<char> >]}
C {std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc> = std::vector<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc> = std::vector<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<std::basic_string<char> >]}
F {std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::size_t = long unsigned int, std::_Vector_base<_Tp, _Alloc>::allocator_type = std::allocator<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:120}
C {std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::size_t = long unsigned int, std::_Vector_base<_Tp, _Alloc>::allocator_type = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<std::basic_string<char>, std::allocator<std::basic_string<char> > >::_Vector_impl::~_Vector_impl()}
C {std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::size_t = long unsigned int, std::_Vector_base<_Tp, _Alloc>::allocator_type = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename _Alloc::rebind<_Tp>::other::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, typename _Alloc::rebind<_Tp>::other::pointer = std::basic_string<char>*, std::size_t = long unsigned int]}
C {std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::size_t = long unsigned int, std::_Vector_base<_Tp, _Alloc>::allocator_type = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl(const _Tp_alloc_type&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<std::basic_string<char> >]}
F {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl(const _Tp_alloc_type&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:86}
C {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl(const _Tp_alloc_type&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator(const std::allocator<_Alloc>&) [with _Tp = std::basic_string<char>, std::allocator<_Alloc> = std::allocator<std::basic_string<char> >]}
F {std::allocator<_Alloc>::allocator(const std::allocator<_Alloc>&) [with _Tp = std::basic_string<char>, std::allocator<_Alloc> = std::allocator<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:109}
C {std::allocator<_Alloc>::allocator(const std::allocator<_Alloc>&) [with _Tp = std::basic_string<char>, std::allocator<_Alloc> = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = std::basic_string<char>, __gnu_cxx::new_allocator<_Tp> = __gnu_cxx::new_allocator<std::basic_string<char> >]}
F {__gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = std::basic_string<char>, __gnu_cxx::new_allocator<_Tp> = __gnu_cxx::new_allocator<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:71}
F {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = const std::basic_string<char>*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:490}
C {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = const std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >]}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:720}
F {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = const std::basic_string<char>*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:472}
C {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = const std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >]}
F {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _ForwardIterator = std::basic_string<char>*, _Tp = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:257}
C {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _ForwardIterator = std::basic_string<char>*, _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _ForwardIterator = std::basic_string<char>*]}
F {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _ForwardIterator = std::basic_string<char>*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:109}
C {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _ForwardIterator = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _ForwardIterator = std::basic_string<char>*, bool _TrivialValueTypes = false]}
F {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _ForwardIterator = std::basic_string<char>*, bool _TrivialValueTypes = false]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:70}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _ForwardIterator = std::basic_string<char>*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_rethrow()}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _ForwardIterator = std::basic_string<char>*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::basic_string<char>*]}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _ForwardIterator = std::basic_string<char>*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_begin_catch(void*)}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _ForwardIterator = std::basic_string<char>*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_eh_pointer(int)}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _ForwardIterator = std::basic_string<char>*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _ForwardIterator = std::basic_string<char>*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >]}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _ForwardIterator = std::basic_string<char>*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >]}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _ForwardIterator = std::basic_string<char>*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Construct(_T1*, const _T2&) [with _T1 = std::basic_string<char>, _T2 = std::basic_string<char>]}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _ForwardIterator = std::basic_string<char>*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_Tp* std::__addressof(_Tp&) [with _Tp = std::basic_string<char>]}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _ForwardIterator = std::basic_string<char>*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = const std::basic_string<char>&]}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = const std::basic_string<char>&]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:732}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:740}
F {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:817}
C {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >]}
C {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >]}
F {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:784}
F {void testing::internal::Arguments::AddArguments(const std::vector<T>&) [with Str = std::basic_string<char>]} {../third-party/gtest/src/gtest-death-test.cc:904}
C {void testing::internal::Arguments::AddArguments(const std::vector<T>&) [with Str = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >]}
C {void testing::internal::Arguments::AddArguments(const std::vector<T>&) [with Str = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = const std::basic_string<char>*]}
C {void testing::internal::Arguments::AddArguments(const std::vector<T>&) [with Str = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >]}
C {void testing::internal::Arguments::AddArguments(const std::vector<T>&) [with Str = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**, std::vector<_Tp, _Alloc>::value_type = char*]}
C {void testing::internal::Arguments::AddArguments(const std::vector<T>&) [with Str = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator-(const difference_type&) const [with _Iterator = char**, _Container = std::vector<char*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]}
C {void testing::internal::Arguments::AddArguments(const std::vector<T>&) [with Str = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]}
C {void testing::internal::Arguments::AddArguments(const std::vector<T>&) [with Str = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {char* testing::internal::posix::StrDup(const char*)}
C {void testing::internal::Arguments::AddArguments(const std::vector<T>&) [with Str = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::Arguments::AddArguments(const std::vector<T>&) [with Str = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::pointer __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator->() const [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >, __gnu_cxx::__normal_iterator<_Iterator, _Container>::pointer = const std::basic_string<char>*]}
C {void testing::internal::Arguments::AddArguments(const std::vector<T>&) [with Str = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = const std::basic_string<char>*]}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::pointer __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator->() const [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >, __gnu_cxx::__normal_iterator<_Iterator, _Container>::pointer = const std::basic_string<char>*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:736}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator-(const difference_type&) const [with _Iterator = char**, _Container = std::vector<char*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:780}
C {__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator-(const difference_type&) const [with _Iterator = char**, _Container = std::vector<char*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = char**, _Container = std::vector<char*>]}
F {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**, std::vector<_Tp, _Alloc>::value_type = char*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/vector.tcc:108}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**, std::vector<_Tp, _Alloc>::value_type = char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = char**, _Container = std::vector<char*>]}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**, std::vector<_Tp, _Alloc>::value_type = char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**, std::vector<_Tp, _Alloc>::value_type = char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = char*, __gnu_cxx::new_allocator<_Tp>::pointer = char**]}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**, std::vector<_Tp, _Alloc>::value_type = char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char**, _Container = std::vector<char*>]}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**, std::vector<_Tp, _Alloc>::value_type = char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**, std::vector<_Tp, _Alloc>::value_type = char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char**, _Container = std::vector<char*>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**, std::vector<_Tp, _Alloc>::value_type = char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]}
F {bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char**, _Container = std::vector<char*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:805}
C {bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char**, _Container = std::vector<char*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = char**, _Container = std::vector<char*>]}
C {bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char**, _Container = std::vector<char*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = char**, _Container = std::vector<char*>]}
F {void testing::internal::Arguments::AddArgument(const char*)} {../third-party/gtest/src/gtest-death-test.cc:899}
C {void testing::internal::Arguments::AddArgument(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**, std::vector<_Tp, _Alloc>::value_type = char*]}
C {void testing::internal::Arguments::AddArgument(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator-(const difference_type&) const [with _Iterator = char**, _Container = std::vector<char*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]}
C {void testing::internal::Arguments::AddArgument(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]}
C {void testing::internal::Arguments::AddArgument(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {char* testing::internal::posix::StrDup(const char*)}
F {void testing::internal::FlushInfoLog()} {../third-party/gtest/include/gtest/internal/gtest-port.h:1044}
C {void testing::internal::FlushInfoLog()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fflush(FILE*)}
F {char* const* testing::internal::Arguments::Argv()} {../third-party/gtest/src/gtest-death-test.cc:911}
C {char* const* testing::internal::Arguments::Argv()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::reference = char*&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::reference = char*&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:695}
F {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-death-test.cc:1002}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_guard_abort(long long int*)}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::AlwaysFalse()}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestAbort(const string&)}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsTrue(bool)}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::AlwaysFalse()}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestAbort(const string&)}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int* __errno_location()}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int sigaction(int, const sigaction*, sigaction*)}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void _exit(int)}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::ExecDeathTestChildMain(void*)}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {__pid_t fork()}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::AlwaysFalse()}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestAbort(const string&)}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsTrue(bool)}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int munmap(void*, size_t)}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int clone(int (*)(void*), void*, int, void*, ...)}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::AlwaysFalse()}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestAbort(const string&)}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsTrue(bool)}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::AlwaysFalse()}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestAbort(const string&)}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsTrue(bool)}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* mmap(void*, size_t, int, int, int, __off_t)}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int getpagesize()}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_guard_release(long long int*)}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::StackGrowsDown()}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __cxa_guard_acquire(long long int*)}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::AlwaysFalse()}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestAbort(const string&)}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int* __errno_location()}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int sigaction(int, const sigaction*, sigaction*)}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int sigemptyset(sigset_t*)}
C {pid_t testing::internal::ExecDeathTestSpawnChild(char* const*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* memset(void*, int, size_t)}
F {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-death-test.cc:944}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestAbort(const string&)}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::GetLastErrnoDescription()}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int execve(const char*, char* const*, char* const*)}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {char** testing::internal::GetEnviron()}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestAbort(const string&)}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::GetLastErrnoDescription()}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int chdir(const char*)}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::UnitTest::original_working_dir() const}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static testing::UnitTest* testing::UnitTest::GetInstance()}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::AlwaysFalse()}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestAbort(const string&)}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int* __errno_location()}
C {int testing::internal::ExecDeathTestChildMain(void*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int close(int)}
F {char** testing::internal::GetEnviron()} {../third-party/gtest/src/gtest-death-test.cc:937}
F {void testing::internal::ForkingDeathTest::set_child_pid(pid_t)} {../third-party/gtest/src/gtest-death-test.cc:784}
F {void testing::internal::DeathTestImpl::set_read_fd(int)} {../third-party/gtest/src/gtest-death-test.cc:388}
F {void testing::internal::DeathTestImpl::set_spawned(bool)} {../third-party/gtest/src/gtest-death-test.cc:382}
F {testing::internal::Arguments::~Arguments()} {../third-party/gtest/src/gtest-death-test.cc:893}
C {testing::internal::Arguments::~Arguments()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = char*, _Alloc = std::allocator<char*>]}
C {testing::internal::Arguments::~Arguments()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = char*, _Alloc = std::allocator<char*>]}
C {testing::internal::Arguments::~Arguments()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char**, _Container = std::vector<char*>]}
C {testing::internal::Arguments::~Arguments()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]}
C {testing::internal::Arguments::~Arguments()} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = char**, _Container = std::vector<char*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >]}
C {testing::internal::Arguments::~Arguments()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void free(void*)}
C {testing::internal::Arguments::~Arguments()} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = char**, _Container = std::vector<char*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = char*&]}
C {testing::internal::Arguments::~Arguments()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = char*, _Alloc = std::allocator<char*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = char**]}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = char**, _Container = std::vector<char*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<char**, std::vector<char*> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:740}
F {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char**, _Container = std::vector<char*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:817}
C {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char**, _Container = std::vector<char*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = char**, _Container = std::vector<char*>]}
C {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = char**, _Container = std::vector<char*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = char**, _Container = std::vector<char*>]}
F {bool testing::internal::StackGrowsDown()} {../third-party/gtest/src/gtest-death-test.cc:988}
C {bool testing::internal::StackGrowsDown()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::StackLowerThanAddress(const void*, bool*)}
F {void testing::internal::StackLowerThanAddress(const void*, bool*)} {../third-party/gtest/src/gtest-death-test.cc:983}
F {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-death-test.cc:822}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestImpl::set_spawned(bool)}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestImpl::set_read_fd(int)}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::AlwaysFalse()}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestAbort(const string&)}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int* __errno_location()}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int close(int)}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::TestEventListeners::SuppressEventForwarding()}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestEventListeners* testing::internal::UnitTestImpl::listeners()}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UnitTestImpl* testing::internal::GetUnitTestImpl()}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::LogToStderr()}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestImpl::set_write_fd(int)}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::AlwaysFalse()}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestAbort(const string&)}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int* __errno_location()}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int close(int)}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ForkingDeathTest::set_child_pid(pid_t)}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::AlwaysFalse()}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestAbort(const string&)}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsTrue(bool)}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {__pid_t fork()}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::FlushInfoLog()}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::CaptureStderr()}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::DeathTest::set_last_death_test_message(const string&)}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::AlwaysFalse()}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestAbort(const string&)}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsTrue(bool)}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int pipe(int*)}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::DeathTestThreadWarning(size_t)}
C {virtual testing::internal::DeathTest::TestRole testing::internal::NoExecDeathTest::AssumeRole()} {../third-party/gtest/src/gtest-typed-test.cc:110} {size_t testing::internal::GetThreadCount()}
F {std::string testing::internal::DeathTestThreadWarning(size_t)} {../third-party/gtest/src/gtest-death-test.cc:217}
C {std::string testing::internal::DeathTestThreadWarning(size_t)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {std::string testing::internal::DeathTestThreadWarning(size_t)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {std::string testing::internal::DeathTestThreadWarning(size_t)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::Message::GetString() const}
C {std::string testing::internal::DeathTestThreadWarning(size_t)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [10], testing::Message = testing::Message]}
C {std::string testing::internal::DeathTestThreadWarning(size_t)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = long unsigned int, testing::Message = testing::Message]}
C {std::string testing::internal::DeathTestThreadWarning(size_t)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [10], testing::Message = testing::Message]}
C {std::string testing::internal::DeathTestThreadWarning(size_t)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [39], testing::Message = testing::Message]}
C {std::string testing::internal::DeathTestThreadWarning(size_t)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [2], testing::Message = testing::Message]}
C {std::string testing::internal::DeathTestThreadWarning(size_t)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [12], testing::Message = testing::Message]}
C {std::string testing::internal::DeathTestThreadWarning(size_t)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [40], testing::Message = testing::Message]}
C {std::string testing::internal::DeathTestThreadWarning(size_t)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [53], testing::Message = testing::Message]}
C {std::string testing::internal::DeathTestThreadWarning(size_t)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [53], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [53], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [53], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [40], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [40], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [40], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [2], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [2], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [2], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [39], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [39], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [39], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::Message& testing::Message::operator<<(const T&) [with T = long unsigned int, testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = long unsigned int, testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long unsigned int) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = long unsigned int, testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {void testing::internal::LogToStderr()} {../third-party/gtest/include/gtest/internal/gtest-port.h:1043}
F {testing::TestEventListeners* testing::internal::UnitTestImpl::listeners()} {../third-party/gtest/src/gtest-internal-inl.h:599}
F {virtual testing::internal::ForkingDeathTest::~ForkingDeathTest()} {../third-party/gtest/src/gtest-death-test.cc:776}
C {virtual testing::internal::ForkingDeathTest::~ForkingDeathTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual testing::internal::ForkingDeathTest::~ForkingDeathTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ForkingDeathTest::~ForkingDeathTest()}
F {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-death-test.cc:799}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestImpl::set_status(int)}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::AlwaysFalse()}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestAbort(const string&)}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int* __errno_location()}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {__pid_t waitpid(__pid_t, int*, int)}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()}
C {virtual int testing::internal::ForkingDeathTest::Wait()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::DeathTestImpl::spawned() const}
F {bool testing::internal::DeathTestImpl::spawned() const} {../third-party/gtest/src/gtest-death-test.cc:381}
F {void testing::internal::DeathTestImpl::set_status(int)} {../third-party/gtest/src/gtest-death-test.cc:384}
F {testing::internal::ForkingDeathTest::ForkingDeathTest(const char*, const testing::internal::RE*)} {../third-party/gtest/src/gtest-death-test.cc:792}
C {testing::internal::ForkingDeathTest::ForkingDeathTest(const char*, const testing::internal::RE*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::DeathTestImpl::DeathTestImpl(const char*, const testing::internal::RE*)}
F {testing::internal::DeathTestImpl::DeathTestImpl(const char*, const testing::internal::RE*)} {../third-party/gtest/src/gtest-death-test.cc:364}
C {testing::internal::DeathTestImpl::DeathTestImpl(const char*, const testing::internal::RE*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::DeathTest::DeathTest()}
F {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-death-test.cc:530}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::DeathTest::set_last_death_test_message(const string&)}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::Message::GetString() const}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = std::basic_string<char>, testing::Message = testing::Message]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [13], testing::Message = testing::Message]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [2], testing::Message = testing::Message]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = std::basic_string<char>, testing::Message = testing::Message]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [13], testing::Message = testing::Message]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [51], testing::Message = testing::Message]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::ExitSummary(int)}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::DeathTestImpl::status() const}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatDeathTestOutput(const string&)}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = std::basic_string<char>, testing::Message = testing::Message]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [13], testing::Message = testing::Message]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [2], testing::Message = testing::Message]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [13], testing::Message = testing::Message]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [47], testing::Message = testing::Message]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::internal::RE::pattern() const}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::internal::RE* testing::internal::DeathTestImpl::regex() const}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatDeathTestOutput(const string&)}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::RE::PartialMatch(const char*, const testing::internal::RE&)}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::internal::RE* testing::internal::DeathTestImpl::regex() const}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = std::basic_string<char>, testing::Message = testing::Message]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [13], testing::Message = testing::Message]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [47], testing::Message = testing::Message]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatDeathTestOutput(const string&)}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = std::basic_string<char>, testing::Message = testing::Message]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [13], testing::Message = testing::Message]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [33], testing::Message = testing::Message]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatDeathTestOutput(const string&)}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = std::basic_string<char>, testing::Message = testing::Message]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [13], testing::Message = testing::Message]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [28], testing::Message = testing::Message]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatDeathTestOutput(const string&)}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::DeathTestOutcome testing::internal::DeathTestImpl::outcome() const}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [2], testing::Message = testing::Message]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [13], testing::Message = testing::Message]}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::internal::DeathTestImpl::statement() const}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::GetCapturedStderr()}
C {virtual bool testing::internal::DeathTestImpl::Passed(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::DeathTestImpl::spawned() const}
F {const char* testing::internal::DeathTestImpl::statement() const} {../third-party/gtest/src/gtest-death-test.cc:379}
F {testing::internal::DeathTestOutcome testing::internal::DeathTestImpl::outcome() const} {../third-party/gtest/src/gtest-death-test.cc:385}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [33], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [33], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [33], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {const testing::internal::RE* testing::internal::DeathTestImpl::regex() const} {../third-party/gtest/src/gtest-death-test.cc:380}
F {const char* testing::internal::RE::pattern() const} {../third-party/gtest/include/gtest/internal/gtest-port.h:945}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [47], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [47], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [47], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {std::string testing::internal::FormatDeathTestOutput(const string&)} {../third-party/gtest/src/gtest-death-test.cc:493}
C {std::string testing::internal::FormatDeathTestOutput(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatDeathTestOutput(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatDeathTestOutput(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatDeathTestOutput(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatDeathTestOutput(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator+=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {std::string testing::internal::FormatDeathTestOutput(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::basic_string<_CharT, _Traits, _Alloc>::substr(std::basic_string<_CharT, _Traits, _Alloc>::size_type, std::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {std::string testing::internal::FormatDeathTestOutput(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatDeathTestOutput(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator+=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {std::string testing::internal::FormatDeathTestOutput(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::basic_string<_CharT, _Traits, _Alloc>::substr(std::basic_string<_CharT, _Traits, _Alloc>::size_type, std::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {std::string testing::internal::FormatDeathTestOutput(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator+=(const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {std::string testing::internal::FormatDeathTestOutput(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::find(_CharT, std::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {std::string testing::internal::FormatDeathTestOutput(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator+=(const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:933}
C {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator+=(const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::append(const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
F {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator+=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:924}
C {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator+=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::append(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
F {int testing::internal::DeathTestImpl::status() const} {../third-party/gtest/src/gtest-death-test.cc:383}
F {std::string testing::internal::ExitSummary(int)} {../third-party/gtest/src/gtest-death-test.cc:182}
C {std::string testing::internal::ExitSummary(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {std::string testing::internal::ExitSummary(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {std::string testing::internal::ExitSummary(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::Message::GetString() const}
C {std::string testing::internal::ExitSummary(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [15], testing::Message = testing::Message]}
C {std::string testing::internal::ExitSummary(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = int, testing::Message = testing::Message]}
C {std::string testing::internal::ExitSummary(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [22], testing::Message = testing::Message]}
C {std::string testing::internal::ExitSummary(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = int, testing::Message = testing::Message]}
C {std::string testing::internal::ExitSummary(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [25], testing::Message = testing::Message]}
C {std::string testing::internal::ExitSummary(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [51], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [51], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [51], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-death-test.cc:470}
C {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void _exit(int)}
C {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::AlwaysFalse()}
C {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestAbort(const string&)}
C {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int* __errno_location()}
C {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::posix::Write(int, const void*, unsigned int)}
C {virtual void testing::internal::DeathTestImpl::Abort(testing::internal::DeathTest::AbortReason)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::DeathTestImpl::write_fd() const}
F {int testing::internal::DeathTestImpl::write_fd() const} {../third-party/gtest/src/gtest-death-test.cc:389}
F {int testing::internal::posix::Write(int, const void*, unsigned int)} {../third-party/gtest/include/gtest/internal/gtest-port.h:1786}
C {int testing::internal::posix::Write(int, const void*, unsigned int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {ssize_t write(int, const void*, size_t)}
F {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-death-test.cc:425}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestImpl::set_read_fd(int)}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::AlwaysFalse()}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestAbort(const string&)}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int* __errno_location()}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::posix::Close(int)}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::DeathTestImpl::read_fd() const}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::GetLastErrnoDescription()}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(unsigned int) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::FailFromInternalError(int)}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::DeathTestImpl::read_fd() const}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestImpl::set_outcome(testing::internal::DeathTestOutcome)}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestImpl::set_outcome(testing::internal::DeathTestOutcome)}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestImpl::set_outcome(testing::internal::DeathTestOutcome)}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestImpl::set_outcome(testing::internal::DeathTestOutcome)}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int* __errno_location()}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::posix::Read(int, void*, unsigned int)}
C {void testing::internal::DeathTestImpl::ReadAndInterpretStatusByte()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::DeathTestImpl::read_fd() const}
F {int testing::internal::posix::Read(int, void*, unsigned int)} {../third-party/gtest/include/gtest/internal/gtest-port.h:1783}
C {int testing::internal::posix::Read(int, void*, unsigned int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {ssize_t read(int, void*, size_t)}
F {void testing::internal::DeathTestImpl::set_outcome(testing::internal::DeathTestOutcome)} {../third-party/gtest/src/gtest-death-test.cc:386}
F {void testing::internal::FailFromInternalError(int)} {../third-party/gtest/src/gtest-death-test.cc:312}
C {void testing::internal::FailFromInternalError(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {void testing::internal::FailFromInternalError(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::FailFromInternalError(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {void testing::internal::FailFromInternalError(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::FailFromInternalError(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {void testing::internal::FailFromInternalError(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {void testing::internal::FailFromInternalError(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::FailFromInternalError(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {void testing::internal::FailFromInternalError(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::FailFromInternalError(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char, _Traits = std::char_traits<char>]}
C {void testing::internal::FailFromInternalError(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::FailFromInternalError(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::FailFromInternalError(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::FailFromInternalError(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {void testing::internal::FailFromInternalError(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {void testing::internal::FailFromInternalError(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::GetLastErrnoDescription()}
C {void testing::internal::FailFromInternalError(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int* __errno_location()}
C {void testing::internal::FailFromInternalError(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::FailFromInternalError(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {void testing::internal::FailFromInternalError(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::FailFromInternalError(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {void testing::internal::FailFromInternalError(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {void testing::internal::FailFromInternalError(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::Message::GetString() const}
C {void testing::internal::FailFromInternalError(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int* __errno_location()}
C {void testing::internal::FailFromInternalError(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::posix::Read(int, void*, unsigned int)}
C {void testing::internal::FailFromInternalError(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [256], testing::Message = testing::Message]}
C {void testing::internal::FailFromInternalError(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [256], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [256], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [256], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(unsigned int) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ostream:193}
C {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(unsigned int) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::_M_insert(_ValueT) [with _ValueT = long unsigned int, _CharT = char, _Traits = std::char_traits<char>]}
F {int testing::internal::DeathTestImpl::read_fd() const} {../third-party/gtest/src/gtest-death-test.cc:387}
F {int testing::internal::posix::Close(int)} {../third-party/gtest/include/gtest/internal/gtest-port.h:1789}
C {int testing::internal::posix::Close(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int close(int)}
F {virtual testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-death-test.cc:374}
C {virtual testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual testing::internal::DeathTestImpl::~DeathTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::DeathTestImpl::~DeathTestImpl()}
F {static void testing::internal::DeathTest::set_last_death_test_message(const string&)} {../third-party/gtest/src/gtest-death-test.cc:355}
C {static void testing::internal::DeathTest::set_last_death_test_message(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
F {static const char* testing::internal::DeathTest::LastMessage()} {../third-party/gtest/src/gtest-death-test.cc:351}
C {static const char* testing::internal::DeathTest::LastMessage()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {static bool testing::internal::DeathTest::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-death-test.cc:345}
C {static bool testing::internal::DeathTest::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::DeathTestFactory* testing::internal::UnitTestImpl::death_test_factory()}
C {static bool testing::internal::DeathTest::Create(const char*, const testing::internal::RE*, const char*, int, testing::internal::DeathTest**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UnitTestImpl* testing::internal::GetUnitTestImpl()}
F {testing::internal::DeathTestFactory* testing::internal::UnitTestImpl::death_test_factory()} {../third-party/gtest/src/gtest-internal-inl.h:771}
C {testing::internal::DeathTestFactory* testing::internal::UnitTestImpl::death_test_factory()} {../third-party/gtest/src/gtest-typed-test.cc:110} {T* testing::internal::scoped_ptr<T>::get() const [with T = testing::internal::DeathTestFactory]}
F {T* testing::internal::scoped_ptr<T>::get() const [with T = testing::internal::DeathTestFactory]} {../third-party/gtest/include/gtest/internal/gtest-port.h:899}
F {testing::internal::DeathTest::DeathTest()} {../third-party/gtest/src/gtest-death-test.cc:335}
C {testing::internal::DeathTest::DeathTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::internal::DeathTest::DeathTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::DeathTest::DeathTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::internal::DeathTest::DeathTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::DeathTest::DeathTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeathTestAbort(const string&)}
C {testing::internal::DeathTest::DeathTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::DeathTest::DeathTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {testing::internal::DeathTest::DeathTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestInfo* testing::internal::UnitTestImpl::current_test_info()}
C {testing::internal::DeathTest::DeathTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UnitTestImpl* testing::internal::GetUnitTestImpl()}
F {std::string testing::internal::GetLastErrnoDescription()} {../third-party/gtest/src/gtest-death-test.cc:304}
C {std::string testing::internal::GetLastErrnoDescription()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {std::string testing::internal::GetLastErrnoDescription()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {std::string testing::internal::GetLastErrnoDescription()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::GetLastErrnoDescription()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::internal::posix::StrError(int)}
C {std::string testing::internal::GetLastErrnoDescription()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int* __errno_location()}
C {std::string testing::internal::GetLastErrnoDescription()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int* __errno_location()}
C {std::string testing::internal::GetLastErrnoDescription()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
F {const char* testing::internal::posix::StrError(int)} {../third-party/gtest/include/gtest/internal/gtest-port.h:1790}
C {const char* testing::internal::posix::StrError(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {char* strerror(int)}
F {void testing::internal::DeathTestAbort(const string&)} {../third-party/gtest/src/gtest-death-test.cc:251}
C {void testing::internal::DeathTestAbort(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::posix::Abort()}
C {void testing::internal::DeathTestAbort(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fflush(FILE*)}
C {void testing::internal::DeathTestAbort(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __builtin_fputs(const char*, FILE*)}
C {void testing::internal::DeathTestAbort(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::DeathTestAbort(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void _exit(int)}
C {void testing::internal::DeathTestAbort(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fflush(FILE*)}
C {void testing::internal::DeathTestAbort(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __builtin_fputs(const char*, FILE*)}
C {void testing::internal::DeathTestAbort(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::DeathTestAbort(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fputc(int, FILE*)}
C {void testing::internal::DeathTestAbort(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {FILE* testing::internal::posix::FDOpen(int, const char*)}
C {void testing::internal::DeathTestAbort(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::InternalRunDeathTestFlag::write_fd() const}
C {void testing::internal::DeathTestAbort(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::internal::InternalRunDeathTestFlag* testing::internal::UnitTestImpl::internal_run_death_test_flag() const}
C {void testing::internal::DeathTestAbort(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UnitTestImpl* testing::internal::GetUnitTestImpl()}
F {FILE* testing::internal::posix::FDOpen(int, const char*)} {../third-party/gtest/include/gtest/internal/gtest-port.h:1779}
C {FILE* testing::internal::posix::FDOpen(int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {FILE* fdopen(int, const char*)}
F {bool testing::internal::ExitedUnsuccessfully(int)} {../third-party/gtest/src/gtest-death-test.cc:208}
C {bool testing::internal::ExitedUnsuccessfully(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::ExitedWithCode::operator()(int) const}
C {bool testing::internal::ExitedUnsuccessfully(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::ExitedWithCode::ExitedWithCode(int)}
F {bool testing::KilledBySignal::operator()(int) const} {../third-party/gtest/src/gtest-death-test.cc:171}
F {testing::KilledBySignal::KilledBySignal(int)} {../third-party/gtest/src/gtest-death-test.cc:167}
F {bool testing::ExitedWithCode::operator()(int) const} {../third-party/gtest/src/gtest-death-test.cc:153}
F {testing::ExitedWithCode::ExitedWithCode(int)} {../third-party/gtest/src/gtest-death-test.cc:149}
F {bool testing::internal::InDeathTestChild()} {../third-party/gtest/src/gtest-death-test.cc:130}
C {bool testing::internal::InDeathTestChild()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::basic_string<_CharT, _Traits, _Alloc>::empty() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {bool testing::internal::InDeathTestChild()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {void testing::InitGoogleTest(int*, wchar_t**)} {../third-party/gtest/src/gtest.cc:5011}
C {void testing::InitGoogleTest(int*, wchar_t**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::InitGoogleTestImpl(int*, CharType**) [with CharType = wchar_t]}
F {void testing::internal::InitGoogleTestImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest.cc:4971}
C {void testing::internal::InitGoogleTestImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::InitGoogleTestImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::InitGoogleTestImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::UnitTestImpl::PostFlagParsingInit()}
C {void testing::internal::InitGoogleTestImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UnitTestImpl* testing::internal::GetUnitTestImpl()}
C {void testing::internal::InitGoogleTestImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ParseGoogleTestFlagsOnly(int*, wchar_t**)}
C {void testing::internal::InitGoogleTestImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::InitGoogleTestImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::value_type = std::basic_string<char>]}
C {void testing::internal::InitGoogleTestImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = wchar_t*, std::string = std::basic_string<char>]}
C {void testing::internal::InitGoogleTestImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::clear() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]}
C {void testing::internal::InitGoogleTestImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::InitGoogleTestImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {void testing::internal::InitGoogleTestImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = wchar_t*, std::string = std::basic_string<char>]}
F {void std::vector<_Tp, _Alloc>::clear() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:1039}
C {void std::vector<_Tp, _Alloc>::clear() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::_M_erase_at_end(std::vector<_Tp, _Alloc>::pointer) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::pointer = std::basic_string<char>*]}
F {void std::vector<_Tp, _Alloc>::_M_erase_at_end(std::vector<_Tp, _Alloc>::pointer) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::pointer = std::basic_string<char>*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:1253}
C {void std::vector<_Tp, _Alloc>::_M_erase_at_end(std::vector<_Tp, _Alloc>::pointer) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = std::basic_string<char>*, _Tp = std::basic_string<char>]}
C {void std::vector<_Tp, _Alloc>::_M_erase_at_end(std::vector<_Tp, _Alloc>::pointer) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::pointer = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<std::basic_string<char> >]}
F {std::string testing::internal::StreamableToString(const T&) [with T = wchar_t*, std::string = std::basic_string<char>]} {../third-party/gtest/include/gtest/gtest-message.h:243}
C {std::string testing::internal::StreamableToString(const T&) [with T = wchar_t*, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {std::string testing::internal::StreamableToString(const T&) [with T = wchar_t*, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {std::string testing::internal::StreamableToString(const T&) [with T = wchar_t*, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::Message::GetString() const}
C {std::string testing::internal::StreamableToString(const T&) [with T = wchar_t*, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(wchar_t*)}
C {std::string testing::internal::StreamableToString(const T&) [with T = wchar_t*, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {void testing::InitGoogleTest(int*, char**)} {../third-party/gtest/src/gtest.cc:5005}
C {void testing::InitGoogleTest(int*, char**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::InitGoogleTestImpl(int*, CharType**) [with CharType = char]}
F {void testing::internal::InitGoogleTestImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest.cc:4971}
C {void testing::internal::InitGoogleTestImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::InitGoogleTestImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::InitGoogleTestImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::UnitTestImpl::PostFlagParsingInit()}
C {void testing::internal::InitGoogleTestImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UnitTestImpl* testing::internal::GetUnitTestImpl()}
C {void testing::internal::InitGoogleTestImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ParseGoogleTestFlagsOnly(int*, char**)}
C {void testing::internal::InitGoogleTestImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::InitGoogleTestImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::value_type = std::basic_string<char>]}
C {void testing::internal::InitGoogleTestImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = char*, std::string = std::basic_string<char>]}
C {void testing::internal::InitGoogleTestImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::clear() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]}
C {void testing::internal::InitGoogleTestImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::InitGoogleTestImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {void testing::internal::InitGoogleTestImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = char*, std::string = std::basic_string<char>]}
F {std::string testing::internal::StreamableToString(const T&) [with T = char*, std::string = std::basic_string<char>]} {../third-party/gtest/include/gtest/gtest-message.h:243}
C {std::string testing::internal::StreamableToString(const T&) [with T = char*, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {std::string testing::internal::StreamableToString(const T&) [with T = char*, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {std::string testing::internal::StreamableToString(const T&) [with T = char*, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::Message::GetString() const}
C {std::string testing::internal::StreamableToString(const T&) [with T = char*, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(T* const&) [with T = char, testing::Message = testing::Message]}
C {std::string testing::internal::StreamableToString(const T&) [with T = char*, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {testing::Message& testing::Message::operator<<(T* const&) [with T = char, testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:149}
C {testing::Message& testing::Message::operator<<(T* const&) [with T = char, testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(T* const&) [with T = char, testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
C {testing::Message& testing::Message::operator<<(T* const&) [with T = char, testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(T* const&) [with T = char, testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {void testing::internal::ParseGoogleTestFlagsOnly(int*, wchar_t**)} {../third-party/gtest/src/gtest.cc:4962}
C {void testing::internal::ParseGoogleTestFlagsOnly(int*, wchar_t**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = wchar_t]}
F {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest.cc:4889}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::PrintColorEncoded(const char*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::HasGoogleTestFlagPrefix(const char*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseBoolFlag(const char*, const char*, bool*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseStringFlag(const char*, const char*, std::string*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseInt32Flag(const char*, const char*, testing::internal::Int32*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseBoolFlag(const char*, const char*, bool*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseInt32Flag(const char*, const char*, testing::internal::Int32*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseInt32Flag(const char*, const char*, testing::internal::Int32*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseBoolFlag(const char*, const char*, bool*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseStringFlag(const char*, const char*, std::string*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseBoolFlag(const char*, const char*, bool*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseStringFlag(const char*, const char*, std::string*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseStringFlag(const char*, const char*, std::string*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseBoolFlag(const char*, const char*, bool*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseStringFlag(const char*, const char*, std::string*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseStringFlag(const char*, const char*, std::string*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseBoolFlag(const char*, const char*, bool*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseBoolFlag(const char*, const char*, bool*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseBoolFlag(const char*, const char*, bool*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = wchar_t*, std::string = std::basic_string<char>]}
F {bool testing::internal::HasGoogleTestFlagPrefix(const char*)} {../third-party/gtest/src/gtest.cc:4767}
C {bool testing::internal::HasGoogleTestFlagPrefix(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::SkipPrefix(const char*, const char**)}
C {bool testing::internal::HasGoogleTestFlagPrefix(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::SkipPrefix(const char*, const char**)}
C {bool testing::internal::HasGoogleTestFlagPrefix(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::SkipPrefix(const char*, const char**)}
C {bool testing::internal::HasGoogleTestFlagPrefix(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::SkipPrefix(const char*, const char**)}
C {bool testing::internal::HasGoogleTestFlagPrefix(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::SkipPrefix(const char*, const char**)}
C {bool testing::internal::HasGoogleTestFlagPrefix(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::SkipPrefix(const char*, const char**)}
F {void testing::internal::PrintColorEncoded(const char*)} {../third-party/gtest/src/gtest.cc:4787}
C {void testing::internal::PrintColorEncoded(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {void testing::internal::PrintColorEncoded(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::PrintColorEncoded(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)}
C {void testing::internal::PrintColorEncoded(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {void testing::internal::PrintColorEncoded(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::PrintColorEncoded(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)}
C {void testing::internal::PrintColorEncoded(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::PrintColorEncoded(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(_InputIterator, _InputIterator, const _Alloc&) [with _InputIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::PrintColorEncoded(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {void testing::internal::PrintColorEncoded(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)}
C {void testing::internal::PrintColorEncoded(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* strchr(const char*, int)}
F {void testing::internal::ParseGoogleTestFlagsOnly(int*, char**)} {../third-party/gtest/src/gtest.cc:4959}
C {void testing::internal::ParseGoogleTestFlagsOnly(int*, char**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = char]}
F {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest.cc:4889}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::PrintColorEncoded(const char*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::HasGoogleTestFlagPrefix(const char*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseBoolFlag(const char*, const char*, bool*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseStringFlag(const char*, const char*, std::string*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseInt32Flag(const char*, const char*, testing::internal::Int32*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseBoolFlag(const char*, const char*, bool*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseInt32Flag(const char*, const char*, testing::internal::Int32*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseInt32Flag(const char*, const char*, testing::internal::Int32*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseBoolFlag(const char*, const char*, bool*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseStringFlag(const char*, const char*, std::string*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseBoolFlag(const char*, const char*, bool*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseStringFlag(const char*, const char*, std::string*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseStringFlag(const char*, const char*, std::string*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseBoolFlag(const char*, const char*, bool*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseStringFlag(const char*, const char*, std::string*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseStringFlag(const char*, const char*, std::string*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseBoolFlag(const char*, const char*, bool*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseBoolFlag(const char*, const char*, bool*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseBoolFlag(const char*, const char*, bool*)}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::ParseGoogleTestFlagsOnlyImpl(int*, CharType**) [with CharType = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = char*, std::string = std::basic_string<char>]}
F {bool testing::internal::ParseStringFlag(const char*, const char*, std::string*)} {../third-party/gtest/src/gtest.cc:4749}
C {bool testing::internal::ParseStringFlag(const char*, const char*, std::string*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {bool testing::internal::ParseStringFlag(const char*, const char*, std::string*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::internal::ParseFlagValue(const char*, const char*, bool)}
F {bool testing::internal::ParseInt32Flag(const char*, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest.cc:4732}
C {bool testing::internal::ParseInt32Flag(const char*, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {bool testing::internal::ParseInt32Flag(const char*, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {bool testing::internal::ParseInt32Flag(const char*, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)}
C {bool testing::internal::ParseInt32Flag(const char*, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]}
C {bool testing::internal::ParseInt32Flag(const char*, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [21], testing::Message = testing::Message]}
C {bool testing::internal::ParseInt32Flag(const char*, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
C {bool testing::internal::ParseInt32Flag(const char*, const char*, testing::internal::Int32*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::internal::ParseFlagValue(const char*, const char*, bool)}
F {bool testing::internal::ParseBoolFlag(const char*, const char*, bool*)} {../third-party/gtest/src/gtest.cc:4715}
C {bool testing::internal::ParseBoolFlag(const char*, const char*, bool*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::internal::ParseFlagValue(const char*, const char*, bool)}
F {const char* testing::internal::ParseFlagValue(const char*, const char*, bool)} {../third-party/gtest/src/gtest.cc:4677}
C {const char* testing::internal::ParseFlagValue(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::internal::ParseFlagValue(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {const char* testing::internal::ParseFlagValue(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::internal::ParseFlagValue(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::internal::ParseFlagValue(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::internal::ParseFlagValue(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::internal::ParseFlagValue(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::internal::ParseFlagValue(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int strncmp(const char*, const char*, size_t)}
C {const char* testing::internal::ParseFlagValue(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::internal::ParseFlagValue(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {const char* testing::internal::ParseFlagValue(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {const char* testing::internal::ParseFlagValue(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::internal::ParseFlagValue(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::internal::ParseFlagValue(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::internal::ParseFlagValue(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::internal::ParseFlagValue(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::internal::ParseFlagValue(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
F {bool testing::internal::SkipPrefix(const char*, const char**)} {../third-party/gtest/src/gtest.cc:4663}
C {bool testing::internal::SkipPrefix(const char*, const char**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int strncmp(const char*, const char*, size_t)}
C {bool testing::internal::SkipPrefix(const char*, const char**)} {../third-party/gtest/src/gtest-typed-test.cc:110} {size_t strlen(const char*)}
F {bool testing::internal::AlwaysTrue()} {../third-party/gtest/src/gtest.cc:4650}
C {bool testing::internal::AlwaysTrue()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_throw(void*, void*, void (*)(void*))}
C {bool testing::internal::AlwaysTrue()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_allocate_exception(long unsigned int)}
C {bool testing::internal::AlwaysTrue()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsTrue(bool)}
F {bool testing::internal::IsTrue(bool)} {../third-party/gtest/src/gtest.cc:4648}
F {std::string testing::internal::GetCurrentOsStackTraceExceptTop(testing::UnitTest*, int)} {../third-party/gtest/src/gtest.cc:4635}
C {std::string testing::internal::GetCurrentOsStackTraceExceptTop(testing::UnitTest*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::UnitTestImpl::CurrentOsStackTraceExceptTop(int)}
C {std::string testing::internal::GetCurrentOsStackTraceExceptTop(testing::UnitTest*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UnitTestImpl* testing::internal::GetUnitTestImpl()}
F {void testing::internal::UnitTestImpl::UnshuffleTests()} {../third-party/gtest/src/gtest.cc:4616}
C {void testing::internal::UnitTestImpl::UnshuffleTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {void testing::internal::UnitTestImpl::UnshuffleTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::reference = int&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {void testing::internal::UnitTestImpl::UnshuffleTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::TestCase::UnshuffleTests()}
C {void testing::internal::UnitTestImpl::UnshuffleTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::reference = testing::TestCase*&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::reference = testing::TestCase*&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:695}
F {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::reference = int&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:695}
F {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:570}
F {void testing::internal::UnitTestImpl::ShuffleTests()} {../third-party/gtest/src/gtest.cc:4601}
C {void testing::internal::UnitTestImpl::ShuffleTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {void testing::internal::UnitTestImpl::ShuffleTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::TestCase::ShuffleTests(testing::internal::Random*)}
C {void testing::internal::UnitTestImpl::ShuffleTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::reference = testing::TestCase*&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {void testing::internal::UnitTestImpl::ShuffleTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::Random* testing::internal::UnitTestImpl::random()}
C {void testing::internal::UnitTestImpl::ShuffleTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ShuffleRange(testing::internal::Random*, int, int, std::vector<T>*) [with E = int]}
C {void testing::internal::UnitTestImpl::ShuffleTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::Random* testing::internal::UnitTestImpl::random()}
C {void testing::internal::UnitTestImpl::ShuffleTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {void testing::internal::UnitTestImpl::ShuffleTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ShuffleRange(testing::internal::Random*, int, int, std::vector<T>*) [with E = int]}
C {void testing::internal::UnitTestImpl::ShuffleTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::Random* testing::internal::UnitTestImpl::random()}
F {void testing::internal::ShuffleRange(testing::internal::Random*, int, int, std::vector<T>*) [with E = int]} {../third-party/gtest/src/gtest-internal-inl.h:311}
C {void testing::internal::ShuffleRange(testing::internal::Random*, int, int, std::vector<T>*) [with E = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {void testing::internal::ShuffleRange(testing::internal::Random*, int, int, std::vector<T>*) [with E = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {void testing::internal::ShuffleRange(testing::internal::Random*, int, int, std::vector<T>*) [with E = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::swap(_Tp&, _Tp&) [with _Tp = int]}
C {void testing::internal::ShuffleRange(testing::internal::Random*, int, int, std::vector<T>*) [with E = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::reference = int&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {void testing::internal::ShuffleRange(testing::internal::Random*, int, int, std::vector<T>*) [with E = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::reference = int&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {void testing::internal::ShuffleRange(testing::internal::Random*, int, int, std::vector<T>*) [with E = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UInt32 testing::internal::Random::Generate(testing::internal::UInt32)}
C {void testing::internal::ShuffleRange(testing::internal::Random*, int, int, std::vector<T>*) [with E = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {void testing::internal::ShuffleRange(testing::internal::Random*, int, int, std::vector<T>*) [with E = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::ShuffleRange(testing::internal::Random*, int, int, std::vector<T>*) [with E = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char, _Traits = std::char_traits<char>]}
C {void testing::internal::ShuffleRange(testing::internal::Random*, int, int, std::vector<T>*) [with E = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::ShuffleRange(testing::internal::Random*, int, int, std::vector<T>*) [with E = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char, _Traits = std::char_traits<char>]}
C {void testing::internal::ShuffleRange(testing::internal::Random*, int, int, std::vector<T>*) [with E = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::ShuffleRange(testing::internal::Random*, int, int, std::vector<T>*) [with E = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char, _Traits = std::char_traits<char>]}
C {void testing::internal::ShuffleRange(testing::internal::Random*, int, int, std::vector<T>*) [with E = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::ShuffleRange(testing::internal::Random*, int, int, std::vector<T>*) [with E = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::ShuffleRange(testing::internal::Random*, int, int, std::vector<T>*) [with E = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {void testing::internal::ShuffleRange(testing::internal::Random*, int, int, std::vector<T>*) [with E = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {void testing::internal::ShuffleRange(testing::internal::Random*, int, int, std::vector<T>*) [with E = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsTrue(bool)}
C {void testing::internal::ShuffleRange(testing::internal::Random*, int, int, std::vector<T>*) [with E = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {void testing::internal::ShuffleRange(testing::internal::Random*, int, int, std::vector<T>*) [with E = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::ShuffleRange(testing::internal::Random*, int, int, std::vector<T>*) [with E = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char, _Traits = std::char_traits<char>]}
C {void testing::internal::ShuffleRange(testing::internal::Random*, int, int, std::vector<T>*) [with E = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::ShuffleRange(testing::internal::Random*, int, int, std::vector<T>*) [with E = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char, _Traits = std::char_traits<char>]}
C {void testing::internal::ShuffleRange(testing::internal::Random*, int, int, std::vector<T>*) [with E = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::ShuffleRange(testing::internal::Random*, int, int, std::vector<T>*) [with E = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::ShuffleRange(testing::internal::Random*, int, int, std::vector<T>*) [with E = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {void testing::internal::ShuffleRange(testing::internal::Random*, int, int, std::vector<T>*) [with E = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {void testing::internal::ShuffleRange(testing::internal::Random*, int, int, std::vector<T>*) [with E = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsTrue(bool)}
C {void testing::internal::ShuffleRange(testing::internal::Random*, int, int, std::vector<T>*) [with E = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:570}
F {void std::swap(_Tp&, _Tp&) [with _Tp = int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/move.h:122}
F {testing::internal::Random* testing::internal::UnitTestImpl::random()} {../third-party/gtest/src/gtest-internal-inl.h:801}
F {testing::TestResult* testing::internal::UnitTestImpl::current_test_result()} {../third-party/gtest/src/gtest.cc:4594}
F {testing::internal::OsStackTraceGetterInterface* testing::internal::UnitTestImpl::os_stack_trace_getter()} {../third-party/gtest/src/gtest.cc:4584}
C {testing::internal::OsStackTraceGetterInterface* testing::internal::UnitTestImpl::os_stack_trace_getter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::OsStackTraceGetterInterface* testing::internal::UnitTestImpl::os_stack_trace_getter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::OsStackTraceGetter::OsStackTraceGetter()}
C {testing::internal::OsStackTraceGetterInterface* testing::internal::UnitTestImpl::os_stack_trace_getter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
F {testing::internal::OsStackTraceGetter::OsStackTraceGetter()} {../third-party/gtest/src/gtest-internal-inl.h:442}
C {testing::internal::OsStackTraceGetter::OsStackTraceGetter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::OsStackTraceGetterInterface::~OsStackTraceGetterInterface()}
C {testing::internal::OsStackTraceGetter::OsStackTraceGetter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::Mutex::Mutex()}
C {testing::internal::OsStackTraceGetter::OsStackTraceGetter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::OsStackTraceGetterInterface::OsStackTraceGetterInterface()}
F {testing::internal::OsStackTraceGetterInterface::OsStackTraceGetterInterface()} {../third-party/gtest/src/gtest-internal-inl.h:419}
F {testing::internal::Mutex::Mutex()} {../third-party/gtest/include/gtest/internal/gtest-port.h:1396}
C {testing::internal::Mutex::Mutex()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {testing::internal::Mutex::Mutex()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {testing::internal::Mutex::Mutex()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char, _Traits = std::char_traits<char>]}
C {testing::internal::Mutex::Mutex()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::Mutex::Mutex()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::Mutex::Mutex()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {testing::internal::Mutex::Mutex()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {testing::internal::Mutex::Mutex()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int pthread_mutex_init(pthread_mutex_t*, const pthread_mutexattr_t*)}
C {testing::internal::Mutex::Mutex()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::MutexBase::MutexBase()}
F {testing::internal::MutexBase::MutexBase()} {../third-party/gtest/include/gtest/internal/gtest-port.h:1336}
F {void testing::internal::UnitTestImpl::set_os_stack_trace_getter(testing::internal::OsStackTraceGetterInterface*)} {../third-party/gtest/src/gtest.cc:4573}
F {void testing::internal::UnitTestImpl::ListTestsMatchingFilter()} {../third-party/gtest/src/gtest.cc:4531}
C {void testing::internal::UnitTestImpl::ListTestsMatchingFilter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fflush(FILE*)}
C {void testing::internal::UnitTestImpl::ListTestsMatchingFilter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {void testing::internal::UnitTestImpl::ListTestsMatchingFilter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {void testing::internal::UnitTestImpl::ListTestsMatchingFilter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const std::vector<testing::TestInfo*>& testing::TestCase::test_info_list() const}
C {void testing::internal::UnitTestImpl::ListTestsMatchingFilter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __builtin_putchar(int)}
C {void testing::internal::UnitTestImpl::ListTestsMatchingFilter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::PrintOnOneLine(const char*, int)}
C {void testing::internal::UnitTestImpl::ListTestsMatchingFilter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestInfo::value_param() const}
C {void testing::internal::UnitTestImpl::ListTestsMatchingFilter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int printf(const char*, ...)}
C {void testing::internal::UnitTestImpl::ListTestsMatchingFilter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestInfo::value_param() const}
C {void testing::internal::UnitTestImpl::ListTestsMatchingFilter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int printf(const char*, ...)}
C {void testing::internal::UnitTestImpl::ListTestsMatchingFilter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestInfo::name() const}
C {void testing::internal::UnitTestImpl::ListTestsMatchingFilter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __builtin_putchar(int)}
C {void testing::internal::UnitTestImpl::ListTestsMatchingFilter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::PrintOnOneLine(const char*, int)}
C {void testing::internal::UnitTestImpl::ListTestsMatchingFilter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestCase::type_param() const}
C {void testing::internal::UnitTestImpl::ListTestsMatchingFilter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int printf(const char*, ...)}
C {void testing::internal::UnitTestImpl::ListTestsMatchingFilter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestCase::type_param() const}
C {void testing::internal::UnitTestImpl::ListTestsMatchingFilter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int printf(const char*, ...)}
C {void testing::internal::UnitTestImpl::ListTestsMatchingFilter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestCase::name() const}
C {void testing::internal::UnitTestImpl::ListTestsMatchingFilter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::const_reference = testing::TestInfo* const&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {void testing::internal::UnitTestImpl::ListTestsMatchingFilter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const std::vector<testing::TestInfo*>& testing::TestCase::test_info_list() const}
C {void testing::internal::UnitTestImpl::ListTestsMatchingFilter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::reference = testing::TestCase*&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::const_reference = testing::TestInfo* const&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:710}
F {const char* testing::TestCase::name() const} {../third-party/gtest/include/gtest/gtest.h:768}
C {const char* testing::TestCase::name() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {const char* testing::TestCase::type_param() const} {../third-party/gtest/include/gtest/gtest.h:772}
C {const char* testing::TestCase::type_param() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::TestCase::type_param() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {T* testing::internal::scoped_ptr<T>::operator->() const [with T = const std::basic_string<char>]}
C {const char* testing::TestCase::type_param() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {T* testing::internal::scoped_ptr<T>::get() const [with T = const std::basic_string<char>]}
F {T* testing::internal::scoped_ptr<T>::get() const [with T = const std::basic_string<char>]} {../third-party/gtest/include/gtest/internal/gtest-port.h:899}
F {T* testing::internal::scoped_ptr<T>::operator->() const [with T = const std::basic_string<char>]} {../third-party/gtest/include/gtest/internal/gtest-port.h:898}
F {const char* testing::TestInfo::value_param() const} {../third-party/gtest/include/gtest/gtest.h:643}
C {const char* testing::TestInfo::value_param() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::TestInfo::value_param() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {T* testing::internal::scoped_ptr<T>::operator->() const [with T = const std::basic_string<char>]}
C {const char* testing::TestInfo::value_param() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {T* testing::internal::scoped_ptr<T>::get() const [with T = const std::basic_string<char>]}
F {void testing::internal::PrintOnOneLine(const char*, int)} {../third-party/gtest/src/gtest.cc:4512}
C {void testing::internal::PrintOnOneLine(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __builtin_putchar(int)}
C {void testing::internal::PrintOnOneLine(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int printf(const char*, ...)}
C {void testing::internal::PrintOnOneLine(const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int printf(const char*, ...)}
F {const std::vector<testing::TestInfo*>& testing::TestCase::test_info_list() const} {../third-party/gtest/include/gtest/gtest.h:827}
F {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:570}
F {int testing::internal::UnitTestImpl::FilterTests(testing::internal::UnitTestImpl::ReactionToSharding)} {../third-party/gtest/src/gtest.cc:4455}
C {int testing::internal::UnitTestImpl::FilterTests(testing::internal::UnitTestImpl::ReactionToSharding)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::UnitTestImpl::FilterTests(testing::internal::UnitTestImpl::ReactionToSharding)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::UnitTestImpl::FilterTests(testing::internal::UnitTestImpl::ReactionToSharding)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {int testing::internal::UnitTestImpl::FilterTests(testing::internal::UnitTestImpl::ReactionToSharding)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {int testing::internal::UnitTestImpl::FilterTests(testing::internal::UnitTestImpl::ReactionToSharding)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {int testing::internal::UnitTestImpl::FilterTests(testing::internal::UnitTestImpl::ReactionToSharding)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::UnitTestImpl::FilterTests(testing::internal::UnitTestImpl::ReactionToSharding)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {int testing::internal::UnitTestImpl::FilterTests(testing::internal::UnitTestImpl::ReactionToSharding)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<testing::TestInfo*>& testing::TestCase::test_info_list()}
C {int testing::internal::UnitTestImpl::FilterTests(testing::internal::UnitTestImpl::ReactionToSharding)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::UnitTestImpl::FilterTests(testing::internal::UnitTestImpl::ReactionToSharding)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::TestCase::set_should_run(bool)}
C {int testing::internal::UnitTestImpl::FilterTests(testing::internal::UnitTestImpl::ReactionToSharding)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::TestCase::should_run() const}
C {int testing::internal::UnitTestImpl::FilterTests(testing::internal::UnitTestImpl::ReactionToSharding)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ShouldRunTestOnShard(int, int, int)}
C {int testing::internal::UnitTestImpl::FilterTests(testing::internal::UnitTestImpl::ReactionToSharding)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)}
C {int testing::internal::UnitTestImpl::FilterTests(testing::internal::UnitTestImpl::ReactionToSharding)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::UnitTestOptions::MatchesFilter(const string&, const char*)}
C {int testing::internal::UnitTestImpl::FilterTests(testing::internal::UnitTestImpl::ReactionToSharding)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::UnitTestOptions::MatchesFilter(const string&, const char*)}
C {int testing::internal::UnitTestImpl::FilterTests(testing::internal::UnitTestImpl::ReactionToSharding)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {int testing::internal::UnitTestImpl::FilterTests(testing::internal::UnitTestImpl::ReactionToSharding)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::UnitTestImpl::FilterTests(testing::internal::UnitTestImpl::ReactionToSharding)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestInfo::name() const}
C {int testing::internal::UnitTestImpl::FilterTests(testing::internal::UnitTestImpl::ReactionToSharding)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {int testing::internal::UnitTestImpl::FilterTests(testing::internal::UnitTestImpl::ReactionToSharding)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::reference = testing::TestInfo*&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {int testing::internal::UnitTestImpl::FilterTests(testing::internal::UnitTestImpl::ReactionToSharding)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<testing::TestInfo*>& testing::TestCase::test_info_list()}
C {int testing::internal::UnitTestImpl::FilterTests(testing::internal::UnitTestImpl::ReactionToSharding)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::TestCase::set_should_run(bool)}
C {int testing::internal::UnitTestImpl::FilterTests(testing::internal::UnitTestImpl::ReactionToSharding)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {int testing::internal::UnitTestImpl::FilterTests(testing::internal::UnitTestImpl::ReactionToSharding)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {int testing::internal::UnitTestImpl::FilterTests(testing::internal::UnitTestImpl::ReactionToSharding)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestCase::name() const}
C {int testing::internal::UnitTestImpl::FilterTests(testing::internal::UnitTestImpl::ReactionToSharding)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {int testing::internal::UnitTestImpl::FilterTests(testing::internal::UnitTestImpl::ReactionToSharding)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::reference = testing::TestCase*&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {int testing::internal::UnitTestImpl::FilterTests(testing::internal::UnitTestImpl::ReactionToSharding)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::Int32 testing::internal::Int32FromEnvOrDie(const char*, testing::internal::Int32)}
C {int testing::internal::UnitTestImpl::FilterTests(testing::internal::UnitTestImpl::ReactionToSharding)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::Int32 testing::internal::Int32FromEnvOrDie(const char*, testing::internal::Int32)}
F {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::reference = testing::TestInfo*&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:695}
F {bool testing::TestCase::should_run() const} {../third-party/gtest/include/gtest/gtest.h:779}
F {void testing::TestCase::set_should_run(bool)} {../third-party/gtest/include/gtest/gtest.h:836}
F {std::vector<testing::TestInfo*>& testing::TestCase::test_info_list()} {../third-party/gtest/include/gtest/gtest.h:824}
F {bool testing::internal::ShouldRunTestOnShard(int, int, int)} {../third-party/gtest/src/gtest.cc:4444}
F {testing::internal::Int32 testing::internal::Int32FromEnvOrDie(const char*, testing::internal::Int32)} {../third-party/gtest/src/gtest.cc:4426}
C {testing::internal::Int32 testing::internal::Int32FromEnvOrDie(const char*, testing::internal::Int32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::internal::Int32 testing::internal::Int32FromEnvOrDie(const char*, testing::internal::Int32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void exit(int)}
C {testing::internal::Int32 testing::internal::Int32FromEnvOrDie(const char*, testing::internal::Int32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::internal::Int32 testing::internal::Int32FromEnvOrDie(const char*, testing::internal::Int32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ParseInt32(const testing::Message&, const char*, testing::internal::Int32*)}
C {testing::internal::Int32 testing::internal::Int32FromEnvOrDie(const char*, testing::internal::Int32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]}
C {testing::internal::Int32 testing::internal::Int32FromEnvOrDie(const char*, testing::internal::Int32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [35], testing::Message = testing::Message]}
C {testing::internal::Int32 testing::internal::Int32FromEnvOrDie(const char*, testing::internal::Int32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
C {testing::internal::Int32 testing::internal::Int32FromEnvOrDie(const char*, testing::internal::Int32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::internal::posix::GetEnv(const char*)}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [35], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [35], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [35], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest.cc:4381}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void exit(int)}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fflush(FILE*)}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::Message::GetString() const}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message(const testing::Message&)}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [3], testing::Message = testing::Message]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = int, testing::Message = testing::Message]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [2], testing::Message = testing::Message]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [19], testing::Message = testing::Message]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [3], testing::Message = testing::Message]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = int, testing::Message = testing::Message]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [2], testing::Message = testing::Message]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [18], testing::Message = testing::Message]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [16], testing::Message = testing::Message]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [19], testing::Message = testing::Message]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [4], testing::Message = testing::Message]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [18], testing::Message = testing::Message]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [48], testing::Message = testing::Message]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void exit(int)}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fflush(FILE*)}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::Message::GetString() const}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message(const testing::Message&)}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [9], testing::Message = testing::Message]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [18], testing::Message = testing::Message]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [17], testing::Message = testing::Message]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = int, testing::Message = testing::Message]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [4], testing::Message = testing::Message]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [19], testing::Message = testing::Message]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [41], testing::Message = testing::Message]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void exit(int)}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fflush(FILE*)}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::Message::GetString() const}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message(const testing::Message&)}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [9], testing::Message = testing::Message]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [19], testing::Message = testing::Message]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [17], testing::Message = testing::Message]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = int, testing::Message = testing::Message]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [4], testing::Message = testing::Message]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [18], testing::Message = testing::Message]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [41], testing::Message = testing::Message]}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::Int32 testing::internal::Int32FromEnvOrDie(const char*, testing::internal::Int32)}
C {bool testing::internal::ShouldShard(const char*, const char*, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::Int32 testing::internal::Int32FromEnvOrDie(const char*, testing::internal::Int32)}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [41], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [41], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [41], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [17], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [17], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [17], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [9], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [9], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [9], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [48], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [48], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [48], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [16], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [16], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [16], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [18], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [18], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [18], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [19], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [19], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [19], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::Message::Message(const testing::Message&)} {../third-party/gtest/include/gtest/gtest-message.h:96}
C {testing::Message::Message(const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = std::basic_stringstream<char>]}
C {testing::Message::Message(const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::Message::Message(const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::Message::Message(const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::Message::Message(const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::Message::Message(const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
C {testing::Message::Message(const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::Message::GetString() const}
C {testing::Message::Message(const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::scoped_ptr(T*) [with T = std::basic_stringstream<char>]}
C {testing::Message::Message(const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::basic_stringstream(std::ios_base::openmode) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::ios_base::openmode = std::_Ios_Openmode]}
C {testing::Message::Message(const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {testing::Message::Message(const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Ios_Openmode std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)}
F {std::_Ios_Openmode std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/ios_base.h:121}
F {std::basic_stringstream<_CharT, _Traits, _Alloc>::basic_stringstream(std::ios_base::openmode) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::ios_base::openmode = std::_Ios_Openmode]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/sstream:517}
C {std::basic_stringstream<_CharT, _Traits, _Alloc>::basic_stringstream(std::ios_base::openmode) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::ios_base::openmode = std::_Ios_Openmode]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ios<_CharT, _Traits>::~basic_ios() [with _CharT = char, _Traits = std::char_traits<char>]}
C {std::basic_stringstream<_CharT, _Traits, _Alloc>::basic_stringstream(std::ios_base::openmode) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::ios_base::openmode = std::_Ios_Openmode]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_iostream<_CharT, _Traits>::~basic_iostream() [with _CharT = char, _Traits = std::char_traits<char>]}
C {std::basic_stringstream<_CharT, _Traits, _Alloc>::basic_stringstream(std::ios_base::openmode) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::ios_base::openmode = std::_Ios_Openmode]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringbuf<char>::~basic_stringbuf()}
C {std::basic_stringstream<_CharT, _Traits, _Alloc>::basic_stringstream(std::ios_base::openmode) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::ios_base::openmode = std::_Ios_Openmode]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::basic_ios<_CharT, _Traits>::init(std::basic_streambuf<_CharT, _Traits>*) [with _CharT = char, _Traits = std::char_traits<char>]}
C {std::basic_stringstream<_CharT, _Traits, _Alloc>::basic_stringstream(std::ios_base::openmode) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::ios_base::openmode = std::_Ios_Openmode]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringbuf<_CharT, _Traits, _Alloc>::basic_stringbuf(std::ios_base::openmode) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::ios_base::openmode = std::_Ios_Openmode]}
C {std::basic_stringstream<_CharT, _Traits, _Alloc>::basic_stringstream(std::ios_base::openmode) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::ios_base::openmode = std::_Ios_Openmode]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_iostream<_CharT, _Traits>::basic_iostream() [with _CharT = char, _Traits = std::char_traits<char>]}
C {std::basic_stringstream<_CharT, _Traits, _Alloc>::basic_stringstream(std::ios_base::openmode) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::ios_base::openmode = std::_Ios_Openmode]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ios<_CharT, _Traits>::basic_ios() [with _CharT = char, _Traits = std::char_traits<char>]}
F {std::basic_ios<_CharT, _Traits>::basic_ios() [with _CharT = char, _Traits = std::char_traits<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_ios.h:452}
C {std::basic_ios<_CharT, _Traits>::basic_ios() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ios_base::ios_base()}
F {std::basic_iostream<_CharT, _Traits>::basic_iostream() [with _CharT = char, _Traits = std::char_traits<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/istream:809}
C {std::basic_iostream<_CharT, _Traits>::basic_iostream() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_istream<_CharT, _Traits>::~basic_istream() [with _CharT = char, _Traits = std::char_traits<char>]}
C {std::basic_iostream<_CharT, _Traits>::basic_iostream() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>::basic_ostream() [with _CharT = char, _Traits = std::char_traits<char>]}
C {std::basic_iostream<_CharT, _Traits>::basic_iostream() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_istream<_CharT, _Traits>::basic_istream() [with _CharT = char, _Traits = std::char_traits<char>]}
F {std::basic_istream<_CharT, _Traits>::basic_istream() [with _CharT = char, _Traits = std::char_traits<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/istream:587}
C {std::basic_istream<_CharT, _Traits>::basic_istream() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::basic_ios<_CharT, _Traits>::init(std::basic_streambuf<_CharT, _Traits>*) [with _CharT = char, _Traits = std::char_traits<char>]}
F {std::basic_ostream<_CharT, _Traits>::basic_ostream() [with _CharT = char, _Traits = std::char_traits<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ostream:363}
C {std::basic_ostream<_CharT, _Traits>::basic_ostream() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::basic_ios<_CharT, _Traits>::init(std::basic_streambuf<_CharT, _Traits>*) [with _CharT = char, _Traits = std::char_traits<char>]}
F {std::basic_stringbuf<_CharT, _Traits, _Alloc>::basic_stringbuf(std::ios_base::openmode) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::ios_base::openmode = std::_Ios_Openmode]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/sstream:94}
C {std::basic_stringbuf<_CharT, _Traits, _Alloc>::basic_stringbuf(std::ios_base::openmode) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::ios_base::openmode = std::_Ios_Openmode]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_streambuf<_CharT, _Traits>::~basic_streambuf() [with _CharT = char, _Traits = std::char_traits<char>]}
C {std::basic_stringbuf<_CharT, _Traits, _Alloc>::basic_stringbuf(std::ios_base::openmode) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::ios_base::openmode = std::_Ios_Openmode]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::basic_stringbuf<_CharT, _Traits, _Alloc>::basic_stringbuf(std::ios_base::openmode) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::ios_base::openmode = std::_Ios_Openmode]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_streambuf<_CharT, _Traits>::basic_streambuf() [with _CharT = char, _Traits = std::char_traits<char>]}
F {std::basic_streambuf<_CharT, _Traits>::basic_streambuf() [with _CharT = char, _Traits = std::char_traits<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/streambuf:443}
C {std::basic_streambuf<_CharT, _Traits>::basic_streambuf() [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::locale::locale()}
F {testing::internal::scoped_ptr<T>::scoped_ptr(T*) [with T = std::basic_stringstream<char>]} {../third-party/gtest/include/gtest/internal/gtest-port.h:894}
F {void testing::internal::WriteToShardStatusFileIfNeeded()} {../third-party/gtest/src/gtest.cc:4359}
C {void testing::internal::WriteToShardStatusFileIfNeeded()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fclose(FILE*)}
C {void testing::internal::WriteToShardStatusFileIfNeeded()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void exit(int)}
C {void testing::internal::WriteToShardStatusFileIfNeeded()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fflush(FILE*)}
C {void testing::internal::WriteToShardStatusFileIfNeeded()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)}
C {void testing::internal::WriteToShardStatusFileIfNeeded()} {../third-party/gtest/src/gtest-typed-test.cc:110} {FILE* testing::internal::posix::FOpen(const char*, const char*)}
C {void testing::internal::WriteToShardStatusFileIfNeeded()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::internal::posix::GetEnv(const char*)}
F {bool testing::internal::UnitTestImpl::RunAllTests()} {../third-party/gtest/src/gtest.cc:4222}
C {bool testing::internal::UnitTestImpl::RunAllTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::GetNextRandomSeed(int)}
C {bool testing::internal::UnitTestImpl::RunAllTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::UnitTestImpl::UnshuffleTests()}
C {bool testing::internal::UnitTestImpl::RunAllTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::UnitTestImpl::Passed() const}
C {bool testing::internal::UnitTestImpl::RunAllTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TimeInMillis testing::internal::GetTimeInMillis()}
C {bool testing::internal::UnitTestImpl::RunAllTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {_Funct std::for_each(_IIter, _IIter, _Funct) [with _IIter = std::reverse_iterator<__gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> > >, _Funct = void (*)(testing::Environment*)]}
C {bool testing::internal::UnitTestImpl::RunAllTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::reverse_iterator std::vector<_Tp, _Alloc>::rbegin() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::reverse_iterator = std::reverse_iterator<__gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]}
C {bool testing::internal::UnitTestImpl::RunAllTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::reverse_iterator std::vector<_Tp, _Alloc>::rend() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::reverse_iterator = std::reverse_iterator<__gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]}
C {bool testing::internal::UnitTestImpl::RunAllTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::UnitTestImpl::total_test_case_count() const}
C {bool testing::internal::UnitTestImpl::RunAllTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::TestCase::Run()}
C {bool testing::internal::UnitTestImpl::RunAllTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestCase* testing::internal::UnitTestImpl::GetMutableTestCase(int)}
C {bool testing::internal::UnitTestImpl::RunAllTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::Test::HasFatalFailure()}
C {bool testing::internal::UnitTestImpl::RunAllTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ForEach(const Container&, Functor) [with Container = std::vector<testing::Environment*>, Functor = void (*)(testing::Environment*)]}
C {bool testing::internal::UnitTestImpl::RunAllTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::UnitTestImpl::ShuffleTests()}
C {bool testing::internal::UnitTestImpl::RunAllTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::Random::Reseed(testing::internal::UInt32)}
C {bool testing::internal::UnitTestImpl::RunAllTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::Random* testing::internal::UnitTestImpl::random()}
C {bool testing::internal::UnitTestImpl::RunAllTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TimeInMillis testing::internal::GetTimeInMillis()}
C {bool testing::internal::UnitTestImpl::RunAllTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::UnitTestImpl::ClearNonAdHocTestResult()}
C {bool testing::internal::UnitTestImpl::RunAllTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TimeInMillis testing::internal::GetTimeInMillis()}
C {bool testing::internal::UnitTestImpl::RunAllTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestEventListener* testing::TestEventListeners::repeater()}
C {bool testing::internal::UnitTestImpl::RunAllTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestEventListeners* testing::internal::UnitTestImpl::listeners()}
C {bool testing::internal::UnitTestImpl::RunAllTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::GetRandomSeedFromFlag(testing::internal::Int32)}
C {bool testing::internal::UnitTestImpl::RunAllTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::UnitTestImpl::ListTestsMatchingFilter()}
C {bool testing::internal::UnitTestImpl::RunAllTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::UnitTestImpl::FilterTests(testing::internal::UnitTestImpl::ReactionToSharding)}
C {bool testing::internal::UnitTestImpl::RunAllTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ShouldShard(const char*, const char*, bool)}
C {bool testing::internal::UnitTestImpl::RunAllTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {T* testing::internal::scoped_ptr<T>::get() const [with T = testing::internal::InternalRunDeathTestFlag]}
C {bool testing::internal::UnitTestImpl::RunAllTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::WriteToShardStatusFileIfNeeded()}
C {bool testing::internal::UnitTestImpl::RunAllTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::UnitTestImpl::PostFlagParsingInit()}
C {bool testing::internal::UnitTestImpl::RunAllTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __builtin_puts(const char*)}
C {bool testing::internal::UnitTestImpl::RunAllTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::GTestIsInitialized()}
F {bool testing::internal::GTestIsInitialized()} {../third-party/gtest/src/gtest.cc:316}
F {int testing::internal::GetRandomSeedFromFlag(testing::internal::Int32)} {../third-party/gtest/src/gtest-internal-inl.h:135}
C {int testing::internal::GetRandomSeedFromFlag(testing::internal::Int32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TimeInMillis testing::internal::GetTimeInMillis()}
F {void testing::internal::UnitTestImpl::ClearNonAdHocTestResult()} {../third-party/gtest/src/gtest-internal-inl.h:711}
C {void testing::internal::UnitTestImpl::ClearNonAdHocTestResult()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ForEach(const Container&, Functor) [with Container = std::vector<testing::TestCase*>, Functor = void (*)(testing::TestCase*)]}
F {void testing::internal::ForEach(const Container&, Functor) [with Container = std::vector<testing::TestCase*>, Functor = void (*)(testing::TestCase*)]} {../third-party/gtest/src/gtest-internal-inl.h:295}
C {void testing::internal::ForEach(const Container&, Functor) [with Container = std::vector<testing::TestCase*>, Functor = void (*)(testing::TestCase*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_Funct std::for_each(_IIter, _IIter, _Funct) [with _IIter = __gnu_cxx::__normal_iterator<testing::TestCase* const*, std::vector<testing::TestCase*> >, _Funct = void (*)(testing::TestCase*)]}
C {void testing::internal::ForEach(const Container&, Functor) [with Container = std::vector<testing::TestCase*>, Functor = void (*)(testing::TestCase*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<testing::TestCase* const*, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = testing::TestCase* const*]}
C {void testing::internal::ForEach(const Container&, Functor) [with Container = std::vector<testing::TestCase*>, Functor = void (*)(testing::TestCase*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<testing::TestCase* const*, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = testing::TestCase* const*]}
F {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<testing::TestCase* const*, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = testing::TestCase* const*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:490}
C {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<testing::TestCase* const*, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = testing::TestCase* const*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::TestCase* const*, _Container = std::vector<testing::TestCase*>]}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::TestCase* const*, _Container = std::vector<testing::TestCase*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:720}
F {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<testing::TestCase* const*, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = testing::TestCase* const*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:472}
C {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<testing::TestCase* const*, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = testing::TestCase* const*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::TestCase* const*, _Container = std::vector<testing::TestCase*>]}
F {_Funct std::for_each(_IIter, _IIter, _Funct) [with _IIter = __gnu_cxx::__normal_iterator<testing::TestCase* const*, std::vector<testing::TestCase*> >, _Funct = void (*)(testing::TestCase*)]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algo.h:4373}
C {_Funct std::for_each(_IIter, _IIter, _Funct) [with _IIter = __gnu_cxx::__normal_iterator<testing::TestCase* const*, std::vector<testing::TestCase*> >, _Funct = void (*)(testing::TestCase*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestCase* const*, _Container = std::vector<testing::TestCase*>]}
C {_Funct std::for_each(_IIter, _IIter, _Funct) [with _IIter = __gnu_cxx::__normal_iterator<testing::TestCase* const*, std::vector<testing::TestCase*> >, _Funct = void (*)(testing::TestCase*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = testing::TestCase* const*, _Container = std::vector<testing::TestCase*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::TestCase* const*, std::vector<testing::TestCase*> >]}
C {_Funct std::for_each(_IIter, _IIter, _Funct) [with _IIter = __gnu_cxx::__normal_iterator<testing::TestCase* const*, std::vector<testing::TestCase*> >, _Funct = void (*)(testing::TestCase*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::TestCase* const*, _Container = std::vector<testing::TestCase*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::TestCase* const&]}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::TestCase* const*, _Container = std::vector<testing::TestCase*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::TestCase* const&]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:732}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = testing::TestCase* const*, _Container = std::vector<testing::TestCase*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::TestCase* const*, std::vector<testing::TestCase*> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:740}
F {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestCase* const*, _Container = std::vector<testing::TestCase*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:817}
C {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestCase* const*, _Container = std::vector<testing::TestCase*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestCase* const*, _Container = std::vector<testing::TestCase*>]}
C {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestCase* const*, _Container = std::vector<testing::TestCase*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestCase* const*, _Container = std::vector<testing::TestCase*>]}
F {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestCase* const*, _Container = std::vector<testing::TestCase*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:784}
F {static void testing::TestCase::ClearTestCaseResult(testing::TestCase*)} {../third-party/gtest/include/gtest/gtest.h:846}
C {static void testing::TestCase::ClearTestCaseResult(testing::TestCase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::TestCase::ClearResult()}
F {void testing::internal::Random::Reseed(testing::internal::UInt32)} {../third-party/gtest/include/gtest/internal/gtest-internal.h:682}
F {void testing::internal::ForEach(const Container&, Functor) [with Container = std::vector<testing::Environment*>, Functor = void (*)(testing::Environment*)]} {../third-party/gtest/src/gtest-internal-inl.h:295}
C {void testing::internal::ForEach(const Container&, Functor) [with Container = std::vector<testing::Environment*>, Functor = void (*)(testing::Environment*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_Funct std::for_each(_IIter, _IIter, _Funct) [with _IIter = __gnu_cxx::__normal_iterator<testing::Environment* const*, std::vector<testing::Environment*> >, _Funct = void (*)(testing::Environment*)]}
C {void testing::internal::ForEach(const Container&, Functor) [with Container = std::vector<testing::Environment*>, Functor = void (*)(testing::Environment*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<testing::Environment* const*, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = testing::Environment* const*]}
C {void testing::internal::ForEach(const Container&, Functor) [with Container = std::vector<testing::Environment*>, Functor = void (*)(testing::Environment*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<testing::Environment* const*, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = testing::Environment* const*]}
F {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<testing::Environment* const*, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = testing::Environment* const*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:490}
C {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<testing::Environment* const*, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = testing::Environment* const*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::Environment* const*, _Container = std::vector<testing::Environment*>]}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::Environment* const*, _Container = std::vector<testing::Environment*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:720}
F {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<testing::Environment* const*, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = testing::Environment* const*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:472}
C {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<testing::Environment* const*, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = testing::Environment* const*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::Environment* const*, _Container = std::vector<testing::Environment*>]}
F {_Funct std::for_each(_IIter, _IIter, _Funct) [with _IIter = __gnu_cxx::__normal_iterator<testing::Environment* const*, std::vector<testing::Environment*> >, _Funct = void (*)(testing::Environment*)]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algo.h:4373}
C {_Funct std::for_each(_IIter, _IIter, _Funct) [with _IIter = __gnu_cxx::__normal_iterator<testing::Environment* const*, std::vector<testing::Environment*> >, _Funct = void (*)(testing::Environment*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::Environment* const*, _Container = std::vector<testing::Environment*>]}
C {_Funct std::for_each(_IIter, _IIter, _Funct) [with _IIter = __gnu_cxx::__normal_iterator<testing::Environment* const*, std::vector<testing::Environment*> >, _Funct = void (*)(testing::Environment*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = testing::Environment* const*, _Container = std::vector<testing::Environment*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::Environment* const*, std::vector<testing::Environment*> >]}
C {_Funct std::for_each(_IIter, _IIter, _Funct) [with _IIter = __gnu_cxx::__normal_iterator<testing::Environment* const*, std::vector<testing::Environment*> >, _Funct = void (*)(testing::Environment*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::Environment* const*, _Container = std::vector<testing::Environment*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::Environment* const&]}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::Environment* const*, _Container = std::vector<testing::Environment*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::Environment* const&]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:732}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = testing::Environment* const*, _Container = std::vector<testing::Environment*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::Environment* const*, std::vector<testing::Environment*> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:740}
F {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::Environment* const*, _Container = std::vector<testing::Environment*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:817}
C {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::Environment* const*, _Container = std::vector<testing::Environment*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::Environment* const*, _Container = std::vector<testing::Environment*>]}
C {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::Environment* const*, _Container = std::vector<testing::Environment*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::Environment* const*, _Container = std::vector<testing::Environment*>]}
F {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::Environment* const*, _Container = std::vector<testing::Environment*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:784}
F {testing::TestCase* testing::internal::UnitTestImpl::GetMutableTestCase(int)} {../third-party/gtest/src/gtest-internal-inl.h:593}
C {testing::TestCase* testing::internal::UnitTestImpl::GetMutableTestCase(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::reference = testing::TestCase*&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {testing::TestCase* testing::internal::UnitTestImpl::GetMutableTestCase(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {E testing::internal::GetElementOr(const std::vector<T>&, int, E) [with E = int]}
F {E testing::internal::GetElementOr(const std::vector<T>&, int, E) [with E = int]} {../third-party/gtest/src/gtest-internal-inl.h:302}
C {E testing::internal::GetElementOr(const std::vector<T>&, int, E) [with E = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) const [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::const_reference = const int&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {E testing::internal::GetElementOr(const std::vector<T>&, int, E) [with E = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) const [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::const_reference = const int&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:710}
F {std::vector<_Tp, _Alloc>::reverse_iterator std::vector<_Tp, _Alloc>::rend() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::reverse_iterator = std::reverse_iterator<__gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:517}
C {std::vector<_Tp, _Alloc>::reverse_iterator std::vector<_Tp, _Alloc>::rend() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::reverse_iterator = std::reverse_iterator<__gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::reverse_iterator<_Iterator>::reverse_iterator(std::reverse_iterator<_Iterator>::iterator_type) [with _Iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, std::reverse_iterator<_Iterator>::iterator_type = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >]}
C {std::vector<_Tp, _Alloc>::reverse_iterator std::vector<_Tp, _Alloc>::rend() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::reverse_iterator = std::reverse_iterator<__gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]}
F {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:463}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::Environment**, _Container = std::vector<testing::Environment*>]}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::Environment**, _Container = std::vector<testing::Environment*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:720}
F {std::reverse_iterator<_Iterator>::reverse_iterator(std::reverse_iterator<_Iterator>::iterator_type) [with _Iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, std::reverse_iterator<_Iterator>::iterator_type = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:127}
C {std::reverse_iterator<_Iterator>::reverse_iterator(std::reverse_iterator<_Iterator>::iterator_type) [with _Iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, std::reverse_iterator<_Iterator>::iterator_type = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::iterator<std::random_access_iterator_tag, testing::Environment*, long int, testing::Environment**, testing::Environment*&>::iterator()}
F {std::iterator<std::random_access_iterator_tag, testing::Environment*, long int, testing::Environment**, testing::Environment*&>::iterator()} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator_base_types.h:119}
F {std::vector<_Tp, _Alloc>::reverse_iterator std::vector<_Tp, _Alloc>::rbegin() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::reverse_iterator = std::reverse_iterator<__gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:499}
C {std::vector<_Tp, _Alloc>::reverse_iterator std::vector<_Tp, _Alloc>::rbegin() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::reverse_iterator = std::reverse_iterator<__gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::reverse_iterator<_Iterator>::reverse_iterator(std::reverse_iterator<_Iterator>::iterator_type) [with _Iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, std::reverse_iterator<_Iterator>::iterator_type = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >]}
C {std::vector<_Tp, _Alloc>::reverse_iterator std::vector<_Tp, _Alloc>::rbegin() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::reverse_iterator = std::reverse_iterator<__gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]}
F {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:481}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::Environment**, _Container = std::vector<testing::Environment*>]}
F {_Funct std::for_each(_IIter, _IIter, _Funct) [with _IIter = std::reverse_iterator<__gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> > >, _Funct = void (*)(testing::Environment*)]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algo.h:4373}
C {_Funct std::for_each(_IIter, _IIter, _Funct) [with _IIter = std::reverse_iterator<__gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> > >, _Funct = void (*)(testing::Environment*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::operator!=(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&) [with _Iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >]}
C {_Funct std::for_each(_IIter, _IIter, _Funct) [with _IIter = std::reverse_iterator<__gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> > >, _Funct = void (*)(testing::Environment*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::reverse_iterator<_Iterator>& std::reverse_iterator<_Iterator>::operator++() [with _Iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, std::reverse_iterator<_Iterator> = std::reverse_iterator<__gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> > >]}
C {_Funct std::for_each(_IIter, _IIter, _Funct) [with _IIter = std::reverse_iterator<__gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> > >, _Funct = void (*)(testing::Environment*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::reverse_iterator<_Iterator>::reference std::reverse_iterator<_Iterator>::operator*() const [with _Iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, std::reverse_iterator<_Iterator>::reference = testing::Environment*&]}
F {std::reverse_iterator<_Iterator>::reference std::reverse_iterator<_Iterator>::operator*() const [with _Iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, std::reverse_iterator<_Iterator>::reference = testing::Environment*&]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:156}
C {std::reverse_iterator<_Iterator>::reference std::reverse_iterator<_Iterator>::operator*() const [with _Iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, std::reverse_iterator<_Iterator>::reference = testing::Environment*&]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::Environment**, _Container = std::vector<testing::Environment*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::Environment*&]}
C {std::reverse_iterator<_Iterator>::reference std::reverse_iterator<_Iterator>::operator*() const [with _Iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, std::reverse_iterator<_Iterator>::reference = testing::Environment*&]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator--() [with _Iterator = testing::Environment**, _Container = std::vector<testing::Environment*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >]}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator--() [with _Iterator = testing::Environment**, _Container = std::vector<testing::Environment*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:752}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::Environment**, _Container = std::vector<testing::Environment*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::Environment*&]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:732}
F {std::reverse_iterator<_Iterator>& std::reverse_iterator<_Iterator>::operator++() [with _Iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, std::reverse_iterator<_Iterator> = std::reverse_iterator<__gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> > >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:177}
C {std::reverse_iterator<_Iterator>& std::reverse_iterator<_Iterator>::operator++() [with _Iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, std::reverse_iterator<_Iterator> = std::reverse_iterator<__gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> > >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator--() [with _Iterator = testing::Environment**, _Container = std::vector<testing::Environment*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >]}
F {bool std::operator!=(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&) [with _Iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:297}
C {bool std::operator!=(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&) [with _Iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&) [with _Iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >]}
F {bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&) [with _Iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:285}
C {bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&) [with _Iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::Environment**, _Container = std::vector<testing::Environment*>]}
C {bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&) [with _Iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::reverse_iterator<_Iterator>::iterator_type std::reverse_iterator<_Iterator>::base() const [with _Iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, std::reverse_iterator<_Iterator>::iterator_type = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >]}
C {bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&) [with _Iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::reverse_iterator<_Iterator>::iterator_type std::reverse_iterator<_Iterator>::base() const [with _Iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, std::reverse_iterator<_Iterator>::iterator_type = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >]}
F {std::reverse_iterator<_Iterator>::iterator_type std::reverse_iterator<_Iterator>::base() const [with _Iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, std::reverse_iterator<_Iterator>::iterator_type = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:147}
F {bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::Environment**, _Container = std::vector<testing::Environment*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:805}
C {bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::Environment**, _Container = std::vector<testing::Environment*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::Environment**, _Container = std::vector<testing::Environment*>]}
C {bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::Environment**, _Container = std::vector<testing::Environment*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::Environment**, _Container = std::vector<testing::Environment*>]}
F {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::Environment**, _Container = std::vector<testing::Environment*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:784}
F {bool testing::internal::UnitTestImpl::Passed() const} {../third-party/gtest/src/gtest-internal-inl.h:576}
C {bool testing::internal::UnitTestImpl::Passed() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::UnitTestImpl::Failed() const}
F {bool testing::internal::UnitTestImpl::Failed() const} {../third-party/gtest/src/gtest-internal-inl.h:580}
C {bool testing::internal::UnitTestImpl::Failed() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::TestResult::Failed() const}
C {bool testing::internal::UnitTestImpl::Failed() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::TestResult* testing::internal::UnitTestImpl::ad_hoc_test_result() const}
C {bool testing::internal::UnitTestImpl::Failed() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::UnitTestImpl::failed_test_case_count() const}
F {const testing::TestResult* testing::internal::UnitTestImpl::ad_hoc_test_result() const} {../third-party/gtest/src/gtest-internal-inl.h:606}
F {int testing::internal::GetNextRandomSeed(int)} {../third-party/gtest/src/gtest-internal-inl.h:151}
C {int testing::internal::GetNextRandomSeed(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {int testing::internal::GetNextRandomSeed(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {int testing::internal::GetNextRandomSeed(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {int testing::internal::GetNextRandomSeed(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char, _Traits = std::char_traits<char>]}
C {int testing::internal::GetNextRandomSeed(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {int testing::internal::GetNextRandomSeed(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char, _Traits = std::char_traits<char>]}
C {int testing::internal::GetNextRandomSeed(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {int testing::internal::GetNextRandomSeed(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {int testing::internal::GetNextRandomSeed(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {int testing::internal::GetNextRandomSeed(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {int testing::internal::GetNextRandomSeed(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsTrue(bool)}
F {void testing::internal::TearDownEnvironment(testing::Environment*)} {../third-party/gtest/src/gtest.cc:4211}
F {void testing::internal::SetUpEnvironment(testing::Environment*)} {../third-party/gtest/src/gtest.cc:4210}
F {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest.cc:4173}
C {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TestCaseNameIs::~TestCaseNameIs()}
C {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::value_type = int]}
C {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::value_type = testing::TestCase*]}
C {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**, std::vector<_Tp, _Alloc>::value_type = testing::TestCase*]}
C {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator+(const difference_type&) const [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]}
C {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]}
C {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::UnitTestOptions::MatchesFilter(const string&, const char*)}
C {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestCase::TestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)}
C {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::TestCase* const*, _Container = std::vector<testing::TestCase*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::TestCase* const&]}
C {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&) [with _IteratorL = testing::TestCase* const*, _IteratorR = testing::TestCase**, _Container = std::vector<testing::TestCase*>]}
C {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]}
C {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TestCaseNameIs::~TestCaseNameIs()}
C {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const __gnu_cxx::__normal_iterator<_Iter, typename __gnu_cxx::__enable_if<std::__are_same<_Iter, typename _Container::pointer>::__value, _Container>::__type>&) [with _Iter = testing::TestCase**, _Iterator = testing::TestCase* const*, _Container = std::vector<testing::TestCase*>, typename __gnu_cxx::__enable_if<std::__are_same<_Iter, typename _Container::pointer>::__value, _Container>::__type = std::vector<testing::TestCase*>]}
C {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, _Predicate = testing::internal::TestCaseNameIs]}
C {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]}
C {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]}
C {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TestCaseNameIs::TestCaseNameIs(const string&)}
C {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
F {testing::internal::TestCaseNameIs::TestCaseNameIs(const string&)} {../third-party/gtest/src/gtest.cc:4149}
C {testing::internal::TestCaseNameIs::TestCaseNameIs(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
F {_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, _Predicate = testing::internal::TestCaseNameIs]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algo.h:4418}
C {_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, _Predicate = testing::internal::TestCaseNameIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TestCaseNameIs::~TestCaseNameIs()}
C {_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, _Predicate = testing::internal::TestCaseNameIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TestCaseNameIs::~TestCaseNameIs()}
C {_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, _Predicate = testing::internal::TestCaseNameIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, _Predicate = testing::internal::TestCaseNameIs]}
C {_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, _Predicate = testing::internal::TestCaseNameIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TestCaseNameIs::TestCaseNameIs(const testing::internal::TestCaseNameIs&)}
C {_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, _Predicate = testing::internal::TestCaseNameIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::iterator_traits<_Iterator>::iterator_category std::__iterator_category(const _Iter&) [with _Iter = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::iterator_traits<_Iterator>::iterator_category = std::random_access_iterator_tag]}
F {typename std::iterator_traits<_Iterator>::iterator_category std::__iterator_category(const _Iter&) [with _Iter = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::iterator_traits<_Iterator>::iterator_category = std::random_access_iterator_tag]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator_base_types.h:202}
F {testing::internal::TestCaseNameIs::TestCaseNameIs(const testing::internal::TestCaseNameIs&)} {../third-party/gtest/src/gtest.cc:4146}
C {testing::internal::TestCaseNameIs::TestCaseNameIs(const testing::internal::TestCaseNameIs&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
F {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, _Predicate = testing::internal::TestCaseNameIs]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algo.h:202}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, _Predicate = testing::internal::TestCaseNameIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >]}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, _Predicate = testing::internal::TestCaseNameIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::TestCaseNameIs::operator()(const testing::TestCase*) const}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, _Predicate = testing::internal::TestCaseNameIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::TestCase*&]}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, _Predicate = testing::internal::TestCaseNameIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >]}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, _Predicate = testing::internal::TestCaseNameIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::TestCaseNameIs::operator()(const testing::TestCase*) const}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, _Predicate = testing::internal::TestCaseNameIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::TestCase*&]}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, _Predicate = testing::internal::TestCaseNameIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >]}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, _Predicate = testing::internal::TestCaseNameIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::TestCaseNameIs::operator()(const testing::TestCase*) const}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, _Predicate = testing::internal::TestCaseNameIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::TestCase*&]}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, _Predicate = testing::internal::TestCaseNameIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, _Predicate = testing::internal::TestCaseNameIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >]}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, _Predicate = testing::internal::TestCaseNameIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::TestCaseNameIs::operator()(const testing::TestCase*) const}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, _Predicate = testing::internal::TestCaseNameIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::TestCase*&]}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, _Predicate = testing::internal::TestCaseNameIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >]}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, _Predicate = testing::internal::TestCaseNameIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::TestCaseNameIs::operator()(const testing::TestCase*) const}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, _Predicate = testing::internal::TestCaseNameIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::TestCase*&]}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, _Predicate = testing::internal::TestCaseNameIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >]}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, _Predicate = testing::internal::TestCaseNameIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::TestCaseNameIs::operator()(const testing::TestCase*) const}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, _Predicate = testing::internal::TestCaseNameIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::TestCase*&]}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, _Predicate = testing::internal::TestCaseNameIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >]}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, _Predicate = testing::internal::TestCaseNameIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::TestCaseNameIs::operator()(const testing::TestCase*) const}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, _Predicate = testing::internal::TestCaseNameIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::TestCase*&]}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, _Predicate = testing::internal::TestCaseNameIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]}
F {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:890}
C {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>]}
C {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>]}
F {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:784}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::TestCase*&]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:732}
F {bool testing::internal::TestCaseNameIs::operator()(const testing::TestCase*) const} {../third-party/gtest/src/gtest.cc:4153}
C {bool testing::internal::TestCaseNameIs::operator()(const testing::TestCase*) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int strcmp(const char*, const char*)}
C {bool testing::internal::TestCaseNameIs::operator()(const testing::TestCase*) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestCase::name() const}
C {bool testing::internal::TestCaseNameIs::operator()(const testing::TestCase*) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:740}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const __gnu_cxx::__normal_iterator<_Iter, typename __gnu_cxx::__enable_if<std::__are_same<_Iter, typename _Container::pointer>::__value, _Container>::__type>&) [with _Iter = testing::TestCase**, _Iterator = testing::TestCase* const*, _Container = std::vector<testing::TestCase*>, typename __gnu_cxx::__enable_if<std::__are_same<_Iter, typename _Container::pointer>::__value, _Container>::__type = std::vector<testing::TestCase*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:724}
C {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const __gnu_cxx::__normal_iterator<_Iter, typename __gnu_cxx::__enable_if<std::__are_same<_Iter, typename _Container::pointer>::__value, _Container>::__type>&) [with _Iter = testing::TestCase**, _Iterator = testing::TestCase* const*, _Container = std::vector<testing::TestCase*>, typename __gnu_cxx::__enable_if<std::__are_same<_Iter, typename _Container::pointer>::__value, _Container>::__type = std::vector<testing::TestCase*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>]}
F {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:481}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>]}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:720}
F {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&) [with _IteratorL = testing::TestCase* const*, _IteratorR = testing::TestCase**, _Container = std::vector<testing::TestCase*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:811}
C {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&) [with _IteratorL = testing::TestCase* const*, _IteratorR = testing::TestCase**, _Container = std::vector<testing::TestCase*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>]}
C {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&) [with _IteratorL = testing::TestCase* const*, _IteratorR = testing::TestCase**, _Container = std::vector<testing::TestCase*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestCase* const*, _Container = std::vector<testing::TestCase*>]}
F {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:463}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>]}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator+(const difference_type&) const [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:772}
C {__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator+(const difference_type&) const [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>]}
F {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**, std::vector<_Tp, _Alloc>::value_type = testing::TestCase*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/vector.tcc:108}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**, std::vector<_Tp, _Alloc>::value_type = testing::TestCase*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>]}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**, std::vector<_Tp, _Alloc>::value_type = testing::TestCase*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**, std::vector<_Tp, _Alloc>::value_type = testing::TestCase*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::TestCase*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestCase**]}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**, std::vector<_Tp, _Alloc>::value_type = testing::TestCase*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>]}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**, std::vector<_Tp, _Alloc>::value_type = testing::TestCase*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**, std::vector<_Tp, _Alloc>::value_type = testing::TestCase*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**, std::vector<_Tp, _Alloc>::value_type = testing::TestCase*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]}
F {bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:805}
C {bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>]}
C {bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>]}
F {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::TestCase*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestCase**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:107}
C {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::TestCase*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t, void*)}
F {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/vector.tcc:300}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_rethrow()}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestCase**, std::size_t = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::TestCase**, _Tp = testing::TestCase*]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestCase*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::destroy(__gnu_cxx::new_allocator<_Tp>::pointer) [with _Tp = testing::TestCase*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestCase**]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_begin_catch(void*)}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_eh_pointer(int)}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestCase**, std::size_t = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::TestCase**, _Tp = testing::TestCase*]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestCase*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = testing::TestCase**, _ForwardIterator = testing::TestCase**, _Allocator = std::allocator<testing::TestCase*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestCase*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = testing::TestCase**, _ForwardIterator = testing::TestCase**, _Allocator = std::allocator<testing::TestCase*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestCase*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::TestCase*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestCase**]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename _Alloc::rebind<_Tp>::other::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestCase**, std::size_t = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::TestCase*&]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::TestCase**, _BI2 = testing::TestCase**]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestCase**, _Container = std::vector<testing::TestCase*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::TestCase*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestCase**]}
F {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::TestCase**, _BI2 = testing::TestCase**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:613}
C {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::TestCase**, _BI2 = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestCase**, _BI2 = testing::TestCase**]}
C {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::TestCase**, _BI2 = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::TestCase**, typename std::_Miter_base<_Iterator>::iterator_type = testing::TestCase**]}
C {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::TestCase**, _BI2 = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::TestCase**, typename std::_Miter_base<_Iterator>::iterator_type = testing::TestCase**]}
F {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::TestCase**, typename std::_Miter_base<_Iterator>::iterator_type = testing::TestCase**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:282}
C {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::TestCase**, typename std::_Miter_base<_Iterator>::iterator_type = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = testing::TestCase**, bool _HasBase = false, std::_Iter_base<_Iterator, _HasBase>::iterator_type = testing::TestCase**]}
F {static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = testing::TestCase**, bool _HasBase = false, std::_Iter_base<_Iterator, _HasBase>::iterator_type = testing::TestCase**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator_base_types.h:213}
F {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestCase**, _BI2 = testing::TestCase**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:586}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestCase**, _BI2 = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestCase**, _BI2 = testing::TestCase**]}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestCase**, _BI2 = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestCase**, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestCase**]}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestCase**, _BI2 = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestCase**, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestCase**]}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestCase**, _BI2 = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestCase**, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestCase**]}
F {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestCase**, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestCase**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:271}
C {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestCase**, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = testing::TestCase**, bool _HasBase = false, std::_Iter_base<_Iterator, _HasBase>::iterator_type = testing::TestCase**]}
F {_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestCase**, _BI2 = testing::TestCase**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:568}
C {_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestCase**, _BI2 = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _Tp* std::__copy_move_backward<_IsMove, true, std::random_access_iterator_tag>::__copy_move_b(const _Tp*, const _Tp*, _Tp*) [with _Tp = testing::TestCase*, bool _IsMove = false]}
F {static _Tp* std::__copy_move_backward<_IsMove, true, std::random_access_iterator_tag>::__copy_move_b(const _Tp*, const _Tp*, _Tp*) [with _Tp = testing::TestCase*, bool _IsMove = false]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:557}
C {static _Tp* std::__copy_move_backward<_IsMove, true, std::random_access_iterator_tag>::__copy_move_b(const _Tp*, const _Tp*, _Tp*) [with _Tp = testing::TestCase*, bool _IsMove = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_memmove(void*, const void*, long unsigned int)}
F {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:1239}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::__throw_length_error(const char*)}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:575}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = testing::TestCase*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestCase*>]}
F {const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestCase*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:99}
F {__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = testing::TestCase*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:101}
F {typename _Alloc::rebind<_Tp>::other::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestCase**, std::size_t = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:149}
C {typename _Alloc::rebind<_Tp>::other::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestCase**, std::size_t = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::TestCase*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestCase**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::TestCase*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestCase**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:87}
C {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::TestCase*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestCase**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::TestCase*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestCase**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::__throw_bad_alloc()}
C {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::TestCase*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestCase**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = testing::TestCase*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = testing::TestCase**, _ForwardIterator = testing::TestCase**, _Allocator = std::allocator<testing::TestCase*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:264}
C {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = testing::TestCase**, _ForwardIterator = testing::TestCase**, _Allocator = std::allocator<testing::TestCase*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = testing::TestCase**, _ForwardIterator = testing::TestCase**, _Tp = testing::TestCase*]}
F {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = testing::TestCase**, _ForwardIterator = testing::TestCase**, _Tp = testing::TestCase*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:257}
C {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = testing::TestCase**, _ForwardIterator = testing::TestCase**, _Tp = testing::TestCase*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestCase**, _ForwardIterator = testing::TestCase**]}
F {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestCase**, _ForwardIterator = testing::TestCase**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:109}
C {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestCase**, _ForwardIterator = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _ForwardIterator std::__uninitialized_copy<true>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestCase**, _ForwardIterator = testing::TestCase**]}
F {static _ForwardIterator std::__uninitialized_copy<true>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestCase**, _ForwardIterator = testing::TestCase**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:93}
C {static _ForwardIterator std::__uninitialized_copy<true>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestCase**, _ForwardIterator = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_OI std::copy(_II, _II, _OI) [with _II = testing::TestCase**, _OI = testing::TestCase**]}
F {_OI std::copy(_II, _II, _OI) [with _II = testing::TestCase**, _OI = testing::TestCase**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:444}
C {_OI std::copy(_II, _II, _OI) [with _II = testing::TestCase**, _OI = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = testing::TestCase**, _OI = testing::TestCase**]}
C {_OI std::copy(_II, _II, _OI) [with _II = testing::TestCase**, _OI = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::TestCase**, typename std::_Miter_base<_Iterator>::iterator_type = testing::TestCase**]}
C {_OI std::copy(_II, _II, _OI) [with _II = testing::TestCase**, _OI = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::TestCase**, typename std::_Miter_base<_Iterator>::iterator_type = testing::TestCase**]}
F {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = testing::TestCase**, _OI = testing::TestCase**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:418}
C {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = testing::TestCase**, _OI = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false, _II = testing::TestCase**, _OI = testing::TestCase**]}
C {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = testing::TestCase**, _OI = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestCase**, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestCase**]}
C {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = testing::TestCase**, _OI = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestCase**, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestCase**]}
C {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = testing::TestCase**, _OI = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestCase**, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestCase**]}
F {_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false, _II = testing::TestCase**, _OI = testing::TestCase**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:373}
C {_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false, _II = testing::TestCase**, _OI = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = testing::TestCase*, bool _IsMove = false]}
F {static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = testing::TestCase*, bool _IsMove = false]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:362}
C {static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = testing::TestCase*, bool _IsMove = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_memmove(void*, const void*, long unsigned int)}
F {void __gnu_cxx::new_allocator<_Tp>::destroy(__gnu_cxx::new_allocator<_Tp>::pointer) [with _Tp = testing::TestCase*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestCase**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:118}
F {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestCase*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:95}
F {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::TestCase**, _Tp = testing::TestCase*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:150}
C {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::TestCase**, _Tp = testing::TestCase*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::TestCase**]}
F {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::TestCase**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:123}
C {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::TestCase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void std::_Destroy_aux<true>::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::TestCase**]}
F {static void std::_Destroy_aux<true>::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::TestCase**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:113}
F {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestCase**, std::size_t = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:153}
C {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestCase**, std::size_t = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = testing::TestCase*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestCase**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = testing::TestCase*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestCase**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:97}
C {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = testing::TestCase*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestCase**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
F {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::value_type = testing::TestCase*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:826}
C {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::value_type = testing::TestCase*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]}
C {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::value_type = testing::TestCase*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestCase**, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestCase**]}
C {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::value_type = testing::TestCase*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::TestCase*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestCase**]}
F {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::value_type = int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:826}
C {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::value_type = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]}
C {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::value_type = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]}
C {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::value_type = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = int, __gnu_cxx::new_allocator<_Tp>::pointer = int*]}
F {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = int, __gnu_cxx::new_allocator<_Tp>::pointer = int*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:107}
C {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = int, __gnu_cxx::new_allocator<_Tp>::pointer = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t, void*)}
F {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:481}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = int*, _Container = std::vector<int>]}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = int*, _Container = std::vector<int>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:720}
F {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/vector.tcc:300}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_rethrow()}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = int, _Alloc = std::allocator<int>, typename _Alloc::rebind<_Tp>::other::pointer = int*, std::size_t = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = int*, _Tp = int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = int, _Alloc = std::allocator<int>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<int>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::destroy(__gnu_cxx::new_allocator<_Tp>::pointer) [with _Tp = int, __gnu_cxx::new_allocator<_Tp>::pointer = int*]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_begin_catch(void*)}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_eh_pointer(int)}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = int, _Alloc = std::allocator<int>, typename _Alloc::rebind<_Tp>::other::pointer = int*, std::size_t = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = int*, _Tp = int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = int, _Alloc = std::allocator<int>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<int>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = int*, _ForwardIterator = int*, _Allocator = std::allocator<int>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = int*, _Container = std::vector<int>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = int, _Alloc = std::allocator<int>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<int>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = int*, _ForwardIterator = int*, _Allocator = std::allocator<int>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = int*, _Container = std::vector<int>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = int, _Alloc = std::allocator<int>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<int>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = int, __gnu_cxx::new_allocator<_Tp>::pointer = int*]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename _Alloc::rebind<_Tp>::other::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = int, _Alloc = std::allocator<int>, typename _Alloc::rebind<_Tp>::other::pointer = int*, std::size_t = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = int*, _Container = std::vector<int>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = int*, _Container = std::vector<int>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = int&]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = int*, _BI2 = int*]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = int*, _Container = std::vector<int>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = int, __gnu_cxx::new_allocator<_Tp>::pointer = int*]}
F {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = int*, _BI2 = int*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:613}
C {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = int*, _BI2 = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = int*, _BI2 = int*]}
C {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = int*, _BI2 = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = int*, typename std::_Miter_base<_Iterator>::iterator_type = int*]}
C {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = int*, _BI2 = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = int*, typename std::_Miter_base<_Iterator>::iterator_type = int*]}
F {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = int*, typename std::_Miter_base<_Iterator>::iterator_type = int*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:282}
C {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = int*, typename std::_Miter_base<_Iterator>::iterator_type = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = int*, bool _HasBase = false, std::_Iter_base<_Iterator, _HasBase>::iterator_type = int*]}
F {static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = int*, bool _HasBase = false, std::_Iter_base<_Iterator, _HasBase>::iterator_type = int*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator_base_types.h:213}
F {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = int*, _BI2 = int*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:586}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = int*, _BI2 = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = int*, _BI2 = int*]}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = int*, _BI2 = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = int*, typename std::_Niter_base<_Iterator>::iterator_type = int*]}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = int*, _BI2 = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = int*, typename std::_Niter_base<_Iterator>::iterator_type = int*]}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = int*, _BI2 = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = int*, typename std::_Niter_base<_Iterator>::iterator_type = int*]}
F {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = int*, typename std::_Niter_base<_Iterator>::iterator_type = int*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:271}
C {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = int*, typename std::_Niter_base<_Iterator>::iterator_type = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = int*, bool _HasBase = false, std::_Iter_base<_Iterator, _HasBase>::iterator_type = int*]}
F {_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = int*, _BI2 = int*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:568}
C {_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = int*, _BI2 = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _Tp* std::__copy_move_backward<_IsMove, true, std::random_access_iterator_tag>::__copy_move_b(const _Tp*, const _Tp*, _Tp*) [with _Tp = int, bool _IsMove = false]}
F {static _Tp* std::__copy_move_backward<_IsMove, true, std::random_access_iterator_tag>::__copy_move_b(const _Tp*, const _Tp*, _Tp*) [with _Tp = int, bool _IsMove = false]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:557}
C {static _Tp* std::__copy_move_backward<_IsMove, true, std::random_access_iterator_tag>::__copy_move_b(const _Tp*, const _Tp*, _Tp*) [with _Tp = int, bool _IsMove = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_memmove(void*, const void*, long unsigned int)}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = int*, _Container = std::vector<int>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = int&]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:732}
F {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:1239}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::__throw_length_error(const char*)}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:575}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = int, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = int, _Alloc = std::allocator<int>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<int>]}
F {const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = int, _Alloc = std::allocator<int>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<int>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:99}
F {__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = int, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:101}
F {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:463}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = int*, _Container = std::vector<int>]}
F {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = int*, _Container = std::vector<int>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:890}
C {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = int*, _Container = std::vector<int>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = int*, _Container = std::vector<int>]}
C {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = int*, _Container = std::vector<int>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = int*, _Container = std::vector<int>]}
F {typename _Alloc::rebind<_Tp>::other::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = int, _Alloc = std::allocator<int>, typename _Alloc::rebind<_Tp>::other::pointer = int*, std::size_t = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:149}
C {typename _Alloc::rebind<_Tp>::other::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = int, _Alloc = std::allocator<int>, typename _Alloc::rebind<_Tp>::other::pointer = int*, std::size_t = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = int, __gnu_cxx::new_allocator<_Tp>::pointer = int*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = int, __gnu_cxx::new_allocator<_Tp>::pointer = int*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:87}
C {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = int, __gnu_cxx::new_allocator<_Tp>::pointer = int*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = int, __gnu_cxx::new_allocator<_Tp>::pointer = int*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::__throw_bad_alloc()}
C {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = int, __gnu_cxx::new_allocator<_Tp>::pointer = int*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = int, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = int*, _Container = std::vector<int>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:784}
F {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = int*, _ForwardIterator = int*, _Allocator = std::allocator<int>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:264}
C {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = int*, _ForwardIterator = int*, _Allocator = std::allocator<int>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = int*, _ForwardIterator = int*, _Tp = int]}
F {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = int*, _ForwardIterator = int*, _Tp = int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:257}
C {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = int*, _ForwardIterator = int*, _Tp = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = int*, _ForwardIterator = int*]}
F {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = int*, _ForwardIterator = int*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:109}
C {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = int*, _ForwardIterator = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _ForwardIterator std::__uninitialized_copy<true>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = int*, _ForwardIterator = int*]}
F {static _ForwardIterator std::__uninitialized_copy<true>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = int*, _ForwardIterator = int*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:93}
C {static _ForwardIterator std::__uninitialized_copy<true>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = int*, _ForwardIterator = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_OI std::copy(_II, _II, _OI) [with _II = int*, _OI = int*]}
F {_OI std::copy(_II, _II, _OI) [with _II = int*, _OI = int*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:444}
C {_OI std::copy(_II, _II, _OI) [with _II = int*, _OI = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = int*, _OI = int*]}
C {_OI std::copy(_II, _II, _OI) [with _II = int*, _OI = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = int*, typename std::_Miter_base<_Iterator>::iterator_type = int*]}
C {_OI std::copy(_II, _II, _OI) [with _II = int*, _OI = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = int*, typename std::_Miter_base<_Iterator>::iterator_type = int*]}
F {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = int*, _OI = int*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:418}
C {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = int*, _OI = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false, _II = int*, _OI = int*]}
C {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = int*, _OI = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = int*, typename std::_Niter_base<_Iterator>::iterator_type = int*]}
C {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = int*, _OI = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = int*, typename std::_Niter_base<_Iterator>::iterator_type = int*]}
C {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = int*, _OI = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = int*, typename std::_Niter_base<_Iterator>::iterator_type = int*]}
F {_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false, _II = int*, _OI = int*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:373}
C {_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false, _II = int*, _OI = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = int, bool _IsMove = false]}
F {static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = int, bool _IsMove = false]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:362}
C {static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = int, bool _IsMove = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_memmove(void*, const void*, long unsigned int)}
F {void __gnu_cxx::new_allocator<_Tp>::destroy(__gnu_cxx::new_allocator<_Tp>::pointer) [with _Tp = int, __gnu_cxx::new_allocator<_Tp>::pointer = int*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:118}
F {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = int, _Alloc = std::allocator<int>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<int>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:95}
F {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = int*, _Tp = int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:150}
C {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = int*, _Tp = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = int*]}
F {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = int*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:123}
C {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = int*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void std::_Destroy_aux<true>::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = int*]}
F {static void std::_Destroy_aux<true>::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = int*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:113}
F {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = int, _Alloc = std::allocator<int>, typename _Alloc::rebind<_Tp>::other::pointer = int*, std::size_t = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:153}
C {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = int, _Alloc = std::allocator<int>, typename _Alloc::rebind<_Tp>::other::pointer = int*, std::size_t = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = int, __gnu_cxx::new_allocator<_Tp>::pointer = int*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = int, __gnu_cxx::new_allocator<_Tp>::pointer = int*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:97}
C {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = int, __gnu_cxx::new_allocator<_Tp>::pointer = int*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
F {testing::internal::TestCaseNameIs::~TestCaseNameIs()} {../third-party/gtest/src/gtest.cc:4146}
C {testing::internal::TestCaseNameIs::~TestCaseNameIs()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {void testing::internal::UnitTestImpl::PostFlagParsingInit()} {../third-party/gtest/src/gtest.cc:4112}
C {void testing::internal::UnitTestImpl::PostFlagParsingInit()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::UnitTestImpl::ConfigureStreamingOutput()}
C {void testing::internal::UnitTestImpl::PostFlagParsingInit()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::UnitTestImpl::ConfigureXmlOutput()}
C {void testing::internal::UnitTestImpl::PostFlagParsingInit()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::UnitTestImpl::RegisterParameterizedTests()}
C {void testing::internal::UnitTestImpl::PostFlagParsingInit()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::UnitTestImpl::SuppressTestEventsIfInSubprocess()}
C {void testing::internal::UnitTestImpl::PostFlagParsingInit()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::UnitTestImpl::InitDeathTestSubprocessControlInfo()}
F {void testing::internal::UnitTestImpl::InitDeathTestSubprocessControlInfo()} {../third-party/gtest/src/gtest-internal-inl.h:759}
C {void testing::internal::UnitTestImpl::InitDeathTestSubprocessControlInfo()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::scoped_ptr<T>::reset(T*) [with T = testing::internal::InternalRunDeathTestFlag]}
C {void testing::internal::UnitTestImpl::InitDeathTestSubprocessControlInfo()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::InternalRunDeathTestFlag* testing::internal::ParseInternalRunDeathTestFlag()}
F {void testing::internal::scoped_ptr<T>::reset(T*) [with T = testing::internal::InternalRunDeathTestFlag]} {../third-party/gtest/include/gtest/internal/gtest-port.h:907}
C {void testing::internal::scoped_ptr<T>::reset(T*) [with T = testing::internal::InternalRunDeathTestFlag]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {void testing::internal::scoped_ptr<T>::reset(T*) [with T = testing::internal::InternalRunDeathTestFlag]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::InternalRunDeathTestFlag::~InternalRunDeathTestFlag()}
C {void testing::internal::scoped_ptr<T>::reset(T*) [with T = testing::internal::InternalRunDeathTestFlag]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsTrue(bool)}
F {testing::internal::InternalRunDeathTestFlag::~InternalRunDeathTestFlag()} {../third-party/gtest/include/gtest/internal/gtest-death-test-internal.h:243}
C {testing::internal::InternalRunDeathTestFlag::~InternalRunDeathTestFlag()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::InternalRunDeathTestFlag::~InternalRunDeathTestFlag()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::InternalRunDeathTestFlag::~InternalRunDeathTestFlag()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::posix::Close(int)}
F {void testing::internal::UnitTestImpl::ConfigureStreamingOutput()} {../third-party/gtest/src/gtest.cc:4091}
C {void testing::internal::UnitTestImpl::ConfigureStreamingOutput()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::UnitTestImpl::ConfigureStreamingOutput()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::UnitTestImpl::ConfigureStreamingOutput()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {void testing::internal::UnitTestImpl::ConfigureStreamingOutput()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fflush(FILE*)}
C {void testing::internal::UnitTestImpl::ConfigureStreamingOutput()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int printf(const char*, ...)}
C {void testing::internal::UnitTestImpl::ConfigureStreamingOutput()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::UnitTestImpl::ConfigureStreamingOutput()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::UnitTestImpl::ConfigureStreamingOutput()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::UnitTestImpl::ConfigureStreamingOutput()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::TestEventListeners::Append(testing::TestEventListener*)}
C {void testing::internal::UnitTestImpl::ConfigureStreamingOutput()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestEventListeners* testing::internal::UnitTestImpl::listeners()}
C {void testing::internal::UnitTestImpl::ConfigureStreamingOutput()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::StreamingListener::StreamingListener(const string&, const string&)}
C {void testing::internal::UnitTestImpl::ConfigureStreamingOutput()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {void testing::internal::UnitTestImpl::ConfigureStreamingOutput()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::basic_string<_CharT, _Traits, _Alloc>::substr(std::basic_string<_CharT, _Traits, _Alloc>::size_type, std::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {void testing::internal::UnitTestImpl::ConfigureStreamingOutput()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::basic_string<_CharT, _Traits, _Alloc>::substr(std::basic_string<_CharT, _Traits, _Alloc>::size_type, std::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {void testing::internal::UnitTestImpl::ConfigureStreamingOutput()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::find(_CharT, std::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {void testing::internal::UnitTestImpl::ConfigureStreamingOutput()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::basic_string<_CharT, _Traits, _Alloc>::empty() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {testing::internal::StreamingListener::StreamingListener(const string&, const string&)} {../third-party/gtest/src/gtest-internal-inl.h:1138}
C {testing::internal::StreamingListener::StreamingListener(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::EmptyTestEventListener::~EmptyTestEventListener()}
C {testing::internal::StreamingListener::StreamingListener(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = testing::internal::StreamingListener::AbstractSocketWriter]}
C {testing::internal::StreamingListener::StreamingListener(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::StreamingListener::StreamingListener(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::StreamingListener::Start()}
C {testing::internal::StreamingListener::StreamingListener(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::scoped_ptr(T*) [with T = testing::internal::StreamingListener::AbstractSocketWriter]}
C {testing::internal::StreamingListener::StreamingListener(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::StreamingListener::SocketWriter::SocketWriter(const string&, const string&)}
C {testing::internal::StreamingListener::StreamingListener(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {testing::internal::StreamingListener::StreamingListener(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::EmptyTestEventListener::EmptyTestEventListener()}
F {testing::EmptyTestEventListener::EmptyTestEventListener()} {../third-party/gtest/include/gtest/gtest.h:1012}
C {testing::EmptyTestEventListener::EmptyTestEventListener()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestEventListener::TestEventListener()}
F {testing::TestEventListener::TestEventListener()} {../third-party/gtest/include/gtest/gtest.h:959}
F {testing::internal::StreamingListener::SocketWriter::SocketWriter(const string&, const string&)} {../third-party/gtest/src/gtest-internal-inl.h:1092}
C {testing::internal::StreamingListener::SocketWriter::SocketWriter(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::StreamingListener::AbstractSocketWriter::~AbstractSocketWriter()}
C {testing::internal::StreamingListener::SocketWriter::SocketWriter(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::StreamingListener::SocketWriter::SocketWriter(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::StreamingListener::SocketWriter::SocketWriter(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::StreamingListener::SocketWriter::MakeConnection()}
C {testing::internal::StreamingListener::SocketWriter::SocketWriter(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {testing::internal::StreamingListener::SocketWriter::SocketWriter(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {testing::internal::StreamingListener::SocketWriter::SocketWriter(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::StreamingListener::AbstractSocketWriter::AbstractSocketWriter()}
F {testing::internal::StreamingListener::SocketWriter::~SocketWriter()} {../third-party/gtest/src/gtest-internal-inl.h:1097}
C {testing::internal::StreamingListener::SocketWriter::~SocketWriter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::StreamingListener::AbstractSocketWriter::~AbstractSocketWriter()}
C {testing::internal::StreamingListener::SocketWriter::~SocketWriter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::StreamingListener::SocketWriter::~SocketWriter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::StreamingListener::SocketWriter::~SocketWriter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::StreamingListener::SocketWriter::~SocketWriter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::StreamingListener::AbstractSocketWriter::~AbstractSocketWriter()}
C {testing::internal::StreamingListener::SocketWriter::~SocketWriter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::StreamingListener::SocketWriter::~SocketWriter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::StreamingListener::SocketWriter::~SocketWriter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {virtual void testing::internal::StreamingListener::SocketWriter::CloseConnection()}
F {testing::internal::StreamingListener::AbstractSocketWriter::AbstractSocketWriter()} {../third-party/gtest/src/gtest-internal-inl.h:1073}
F {testing::internal::StreamingListener::AbstractSocketWriter::~AbstractSocketWriter()} {../third-party/gtest/src/gtest-internal-inl.h:1075}
C {testing::internal::StreamingListener::AbstractSocketWriter::~AbstractSocketWriter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
F {testing::internal::scoped_ptr<T>::scoped_ptr(T*) [with T = testing::internal::StreamingListener::AbstractSocketWriter]} {../third-party/gtest/include/gtest/internal/gtest-port.h:894}
F {void testing::internal::StreamingListener::Start()} {../third-party/gtest/src/gtest-internal-inl.h:1204}
C {void testing::internal::StreamingListener::Start()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {void testing::internal::StreamingListener::Start()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::StreamingListener::Start()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {void testing::internal::StreamingListener::Start()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::StreamingListener::Start()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::StreamingListener::SendLn(const string&)}
C {void testing::internal::StreamingListener::Start()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::StreamingListener::Start()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
F {void testing::internal::StreamingListener::SendLn(const string&)} {../third-party/gtest/src/gtest-internal-inl.h:1200}
C {void testing::internal::StreamingListener::SendLn(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::StreamingListener::AbstractSocketWriter::SendLn(const string&)}
C {void testing::internal::StreamingListener::SendLn(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {T* testing::internal::scoped_ptr<T>::operator->() const [with T = testing::internal::StreamingListener::AbstractSocketWriter]}
F {T* testing::internal::scoped_ptr<T>::operator->() const [with T = testing::internal::StreamingListener::AbstractSocketWriter]} {../third-party/gtest/include/gtest/internal/gtest-port.h:898}
F {void testing::internal::StreamingListener::AbstractSocketWriter::SendLn(const string&)} {../third-party/gtest/src/gtest-internal-inl.h:1084}
C {void testing::internal::StreamingListener::AbstractSocketWriter::SendLn(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::StreamingListener::AbstractSocketWriter::SendLn(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::StreamingListener::AbstractSocketWriter::SendLn(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {void testing::internal::UnitTestImpl::ConfigureXmlOutput()} {../third-party/gtest/src/gtest.cc:4076}
C {void testing::internal::UnitTestImpl::ConfigureXmlOutput()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::UnitTestImpl::ConfigureXmlOutput()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::UnitTestImpl::ConfigureXmlOutput()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {void testing::internal::UnitTestImpl::ConfigureXmlOutput()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::UnitTestImpl::ConfigureXmlOutput()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fflush(FILE*)}
C {void testing::internal::UnitTestImpl::ConfigureXmlOutput()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int printf(const char*, ...)}
C {void testing::internal::UnitTestImpl::ConfigureXmlOutput()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::UnitTestImpl::ConfigureXmlOutput()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::operator!=(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::UnitTestImpl::ConfigureXmlOutput()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::UnitTestImpl::ConfigureXmlOutput()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::TestEventListeners::SetDefaultXmlGenerator(testing::TestEventListener*)}
C {void testing::internal::UnitTestImpl::ConfigureXmlOutput()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestEventListeners* testing::internal::UnitTestImpl::listeners()}
C {void testing::internal::UnitTestImpl::ConfigureXmlOutput()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::XmlUnitTestResultPrinter::XmlUnitTestResultPrinter(const char*)}
C {void testing::internal::UnitTestImpl::ConfigureXmlOutput()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {void testing::internal::UnitTestImpl::ConfigureXmlOutput()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::UnitTestImpl::ConfigureXmlOutput()} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()}
C {void testing::internal::UnitTestImpl::ConfigureXmlOutput()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::UnitTestImpl::ConfigureXmlOutput()} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::string testing::internal::UnitTestOptions::GetOutputFormat()}
F {void testing::internal::UnitTestImpl::SuppressTestEventsIfInSubprocess()} {../third-party/gtest/src/gtest.cc:4068}
C {void testing::internal::UnitTestImpl::SuppressTestEventsIfInSubprocess()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::TestEventListeners::SuppressEventForwarding()}
C {void testing::internal::UnitTestImpl::SuppressTestEventsIfInSubprocess()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestEventListeners* testing::internal::UnitTestImpl::listeners()}
C {void testing::internal::UnitTestImpl::SuppressTestEventsIfInSubprocess()} {../third-party/gtest/src/gtest-typed-test.cc:110} {T* testing::internal::scoped_ptr<T>::get() const [with T = testing::internal::InternalRunDeathTestFlag]}
F {void testing::internal::UnitTestImpl::RecordProperty(const testing::TestProperty&)} {../third-party/gtest/src/gtest.cc:4048}
C {void testing::internal::UnitTestImpl::RecordProperty(const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::UnitTestImpl::RecordProperty(const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::UnitTestImpl::RecordProperty(const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::TestResult::RecordProperty(const string&, const testing::TestProperty&)}
C {void testing::internal::UnitTestImpl::RecordProperty(const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {void testing::internal::UnitTestImpl::RecordProperty(const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {void testing::internal::UnitTestImpl::RecordProperty(const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {void testing::internal::UnitTestImpl::RecordProperty(const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {virtual testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest.cc:4033}
C {virtual testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UnitTestImpl::~UnitTestImpl()}
F {testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest.cc:4033}
C {testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::DefaultGlobalTestPartResultReporter::~DefaultGlobalTestPartResultReporter()}
C {testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::DefaultPerThreadTestPartResultReporter::~DefaultPerThreadTestPartResultReporter()}
C {testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::Mutex::~Mutex()}
C {testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ThreadLocal<T>::~ThreadLocal() [with T = testing::TestPartResultReporterInterface*]}
C {testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>]}
C {testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>]}
C {testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = int, _Alloc = std::allocator<int>]}
C {testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ParameterizedTestCaseRegistry::~ParameterizedTestCaseRegistry()}
C {testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestResult::~TestResult()}
C {testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestEventListeners::~TestEventListeners()}
C {testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = testing::internal::InternalRunDeathTestFlag]}
C {testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = testing::internal::DeathTestFactory]}
C {testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ThreadLocal<T>::~ThreadLocal() [with T = std::vector<testing::internal::TraceInfo>]}
C {testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::DefaultGlobalTestPartResultReporter::~DefaultGlobalTestPartResultReporter()}
C {testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::DefaultPerThreadTestPartResultReporter::~DefaultPerThreadTestPartResultReporter()}
C {testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::Mutex::~Mutex()}
C {testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ThreadLocal<T>::~ThreadLocal() [with T = testing::TestPartResultReporterInterface*]}
C {testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>]}
C {testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>]}
C {testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = int, _Alloc = std::allocator<int>]}
C {testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ParameterizedTestCaseRegistry::~ParameterizedTestCaseRegistry()}
C {testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestResult::~TestResult()}
C {testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestEventListeners::~TestEventListeners()}
C {testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = testing::internal::InternalRunDeathTestFlag]}
C {testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = testing::internal::DeathTestFactory]}
C {testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ThreadLocal<T>::~ThreadLocal() [with T = std::vector<testing::internal::TraceInfo>]}
C {testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ForEach(const Container&, Functor) [with Container = std::vector<testing::Environment*>, Functor = void (*)(testing::Environment*)]}
C {testing::internal::UnitTestImpl::~UnitTestImpl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ForEach(const Container&, Functor) [with Container = std::vector<testing::TestCase*>, Functor = void (*)(testing::TestCase*)]}
F {testing::internal::ThreadLocal<T>::~ThreadLocal() [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/include/gtest/internal/gtest-port.h:1480}
C {testing::internal::ThreadLocal<T>::~ThreadLocal() [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>]}
C {testing::internal::ThreadLocal<T>::~ThreadLocal() [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {testing::internal::ThreadLocal<T>::~ThreadLocal() [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>]}
C {testing::internal::ThreadLocal<T>::~ThreadLocal() [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {testing::internal::ThreadLocal<T>::~ThreadLocal() [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char, _Traits = std::char_traits<char>]}
C {testing::internal::ThreadLocal<T>::~ThreadLocal() [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::ThreadLocal<T>::~ThreadLocal() [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::ThreadLocal<T>::~ThreadLocal() [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {testing::internal::ThreadLocal<T>::~ThreadLocal() [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {testing::internal::ThreadLocal<T>::~ThreadLocal() [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {int pthread_key_delete(pthread_key_t)}
C {testing::internal::ThreadLocal<T>::~ThreadLocal() [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeleteThreadLocalValue(void*)}
C {testing::internal::ThreadLocal<T>::~ThreadLocal() [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* pthread_getspecific(pthread_key_t)}
F {void testing::internal::DeleteThreadLocalValue(void*)} {../third-party/gtest/include/gtest/internal/gtest-port.h:1439}
F {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = testing::internal::DeathTestFactory]} {../third-party/gtest/include/gtest/internal/gtest-port.h:895}
C {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = testing::internal::DeathTestFactory]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::scoped_ptr<T>::reset(T*) [with T = testing::internal::DeathTestFactory]}
F {void testing::internal::scoped_ptr<T>::reset(T*) [with T = testing::internal::DeathTestFactory]} {../third-party/gtest/include/gtest/internal/gtest-port.h:907}
C {void testing::internal::scoped_ptr<T>::reset(T*) [with T = testing::internal::DeathTestFactory]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsTrue(bool)}
F {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = testing::internal::InternalRunDeathTestFlag]} {../third-party/gtest/include/gtest/internal/gtest-port.h:895}
C {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = testing::internal::InternalRunDeathTestFlag]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::scoped_ptr<T>::reset(T*) [with T = testing::internal::InternalRunDeathTestFlag]}
F {testing::internal::ParameterizedTestCaseRegistry::~ParameterizedTestCaseRegistry()} {../third-party/gtest/include/gtest/internal/gtest-param-util.h:559}
C {testing::internal::ParameterizedTestCaseRegistry::~ParameterizedTestCaseRegistry()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>]}
C {testing::internal::ParameterizedTestCaseRegistry::~ParameterizedTestCaseRegistry()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>]}
C {testing::internal::ParameterizedTestCaseRegistry::~ParameterizedTestCaseRegistry()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::internal::ParameterizedTestCaseInfoBase**, _Container = std::vector<testing::internal::ParameterizedTestCaseInfoBase*>]}
C {testing::internal::ParameterizedTestCaseRegistry::~ParameterizedTestCaseRegistry()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::ParameterizedTestCaseInfoBase**, std::vector<testing::internal::ParameterizedTestCaseInfoBase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::ParameterizedTestCaseInfoBase**]}
C {testing::internal::ParameterizedTestCaseRegistry::~ParameterizedTestCaseRegistry()} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = testing::internal::ParameterizedTestCaseInfoBase**, _Container = std::vector<testing::internal::ParameterizedTestCaseInfoBase*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::internal::ParameterizedTestCaseInfoBase**, std::vector<testing::internal::ParameterizedTestCaseInfoBase*> >]}
C {testing::internal::ParameterizedTestCaseRegistry::~ParameterizedTestCaseRegistry()} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::internal::ParameterizedTestCaseInfoBase**, _Container = std::vector<testing::internal::ParameterizedTestCaseInfoBase*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::internal::ParameterizedTestCaseInfoBase*&]}
C {testing::internal::ParameterizedTestCaseRegistry::~ParameterizedTestCaseRegistry()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::ParameterizedTestCaseInfoBase**, std::vector<testing::internal::ParameterizedTestCaseInfoBase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::ParameterizedTestCaseInfoBase**]}
F {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::ParameterizedTestCaseInfoBase**, std::vector<testing::internal::ParameterizedTestCaseInfoBase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::ParameterizedTestCaseInfoBase**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:463}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::ParameterizedTestCaseInfoBase**, std::vector<testing::internal::ParameterizedTestCaseInfoBase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::ParameterizedTestCaseInfoBase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::internal::ParameterizedTestCaseInfoBase**, _Container = std::vector<testing::internal::ParameterizedTestCaseInfoBase*>]}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::internal::ParameterizedTestCaseInfoBase**, _Container = std::vector<testing::internal::ParameterizedTestCaseInfoBase*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:720}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::internal::ParameterizedTestCaseInfoBase**, _Container = std::vector<testing::internal::ParameterizedTestCaseInfoBase*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::internal::ParameterizedTestCaseInfoBase*&]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:732}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = testing::internal::ParameterizedTestCaseInfoBase**, _Container = std::vector<testing::internal::ParameterizedTestCaseInfoBase*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::internal::ParameterizedTestCaseInfoBase**, std::vector<testing::internal::ParameterizedTestCaseInfoBase*> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:740}
F {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::ParameterizedTestCaseInfoBase**, std::vector<testing::internal::ParameterizedTestCaseInfoBase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::ParameterizedTestCaseInfoBase**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:481}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::ParameterizedTestCaseInfoBase**, std::vector<testing::internal::ParameterizedTestCaseInfoBase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::ParameterizedTestCaseInfoBase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::internal::ParameterizedTestCaseInfoBase**, _Container = std::vector<testing::internal::ParameterizedTestCaseInfoBase*>]}
F {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::internal::ParameterizedTestCaseInfoBase**, _Container = std::vector<testing::internal::ParameterizedTestCaseInfoBase*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:817}
C {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::internal::ParameterizedTestCaseInfoBase**, _Container = std::vector<testing::internal::ParameterizedTestCaseInfoBase*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::internal::ParameterizedTestCaseInfoBase**, _Container = std::vector<testing::internal::ParameterizedTestCaseInfoBase*>]}
C {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::internal::ParameterizedTestCaseInfoBase**, _Container = std::vector<testing::internal::ParameterizedTestCaseInfoBase*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::internal::ParameterizedTestCaseInfoBase**, _Container = std::vector<testing::internal::ParameterizedTestCaseInfoBase*>]}
F {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::internal::ParameterizedTestCaseInfoBase**, _Container = std::vector<testing::internal::ParameterizedTestCaseInfoBase*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:784}
F {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:349}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>]}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>]}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::internal::ParameterizedTestCaseInfoBase**, _Tp = testing::internal::ParameterizedTestCaseInfoBase*]}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>]}
F {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:95}
F {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::internal::ParameterizedTestCaseInfoBase**, _Tp = testing::internal::ParameterizedTestCaseInfoBase*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:150}
C {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::internal::ParameterizedTestCaseInfoBase**, _Tp = testing::internal::ParameterizedTestCaseInfoBase*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::internal::ParameterizedTestCaseInfoBase**]}
F {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::internal::ParameterizedTestCaseInfoBase**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:123}
C {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::internal::ParameterizedTestCaseInfoBase**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void std::_Destroy_aux<true>::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::internal::ParameterizedTestCaseInfoBase**]}
F {static void std::_Destroy_aux<true>::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::internal::ParameterizedTestCaseInfoBase**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:113}
F {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:141}
C {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<testing::internal::ParameterizedTestCaseInfoBase*, std::allocator<testing::internal::ParameterizedTestCaseInfoBase*> >::_Vector_impl::~_Vector_impl()}
C {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<testing::internal::ParameterizedTestCaseInfoBase*, std::allocator<testing::internal::ParameterizedTestCaseInfoBase*> >::_Vector_impl::~_Vector_impl()}
C {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::internal::ParameterizedTestCaseInfoBase**, std::size_t = long unsigned int]}
F {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::internal::ParameterizedTestCaseInfoBase**, std::size_t = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:153}
C {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::internal::ParameterizedTestCaseInfoBase**, std::size_t = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::internal::ParameterizedTestCaseInfoBase**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::internal::ParameterizedTestCaseInfoBase**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:97}
C {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::internal::ParameterizedTestCaseInfoBase**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
F {std::_Vector_base<testing::internal::ParameterizedTestCaseInfoBase*, std::allocator<testing::internal::ParameterizedTestCaseInfoBase*> >::_Vector_impl::~_Vector_impl()} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:75}
C {std::_Vector_base<testing::internal::ParameterizedTestCaseInfoBase*, std::allocator<testing::internal::ParameterizedTestCaseInfoBase*> >::_Vector_impl::~_Vector_impl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*]}
F {std::allocator<_Alloc>::~allocator() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:115}
C {std::allocator<_Alloc>::~allocator() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*]}
F {__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:76}
F {std::vector<_Tp, _Alloc>::~vector() [with _Tp = int, _Alloc = std::allocator<int>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:349}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = int, _Alloc = std::allocator<int>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = int, _Alloc = std::allocator<int>]}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = int, _Alloc = std::allocator<int>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = int, _Alloc = std::allocator<int>]}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = int, _Alloc = std::allocator<int>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = int*, _Tp = int]}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = int, _Alloc = std::allocator<int>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = int, _Alloc = std::allocator<int>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<int>]}
F {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = int, _Alloc = std::allocator<int>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:141}
C {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = int, _Alloc = std::allocator<int>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()}
C {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = int, _Alloc = std::allocator<int>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()}
C {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = int, _Alloc = std::allocator<int>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = int, _Alloc = std::allocator<int>, typename _Alloc::rebind<_Tp>::other::pointer = int*, std::size_t = long unsigned int]}
F {std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:75}
C {std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = int]}
F {std::allocator<_Alloc>::~allocator() [with _Tp = int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:115}
C {std::allocator<_Alloc>::~allocator() [with _Tp = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = int]}
F {__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:76}
F {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:349}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>]}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>]}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::TestCase**, _Tp = testing::TestCase*]}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestCase*>]}
F {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:141}
C {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<testing::TestCase*, std::allocator<testing::TestCase*> >::_Vector_impl::~_Vector_impl()}
C {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<testing::TestCase*, std::allocator<testing::TestCase*> >::_Vector_impl::~_Vector_impl()}
C {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestCase**, std::size_t = long unsigned int]}
F {std::_Vector_base<testing::TestCase*, std::allocator<testing::TestCase*> >::_Vector_impl::~_Vector_impl()} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:75}
C {std::_Vector_base<testing::TestCase*, std::allocator<testing::TestCase*> >::_Vector_impl::~_Vector_impl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = testing::TestCase*]}
F {std::allocator<_Alloc>::~allocator() [with _Tp = testing::TestCase*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:115}
C {std::allocator<_Alloc>::~allocator() [with _Tp = testing::TestCase*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = testing::TestCase*]}
F {__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = testing::TestCase*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:76}
F {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:349}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>]}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>]}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::Environment**, _Tp = testing::Environment*]}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::Environment*>]}
F {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::Environment*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:95}
F {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::Environment**, _Tp = testing::Environment*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:150}
C {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::Environment**, _Tp = testing::Environment*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::Environment**]}
F {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::Environment**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:123}
C {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void std::_Destroy_aux<true>::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::Environment**]}
F {static void std::_Destroy_aux<true>::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::Environment**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:113}
F {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:141}
C {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<testing::Environment*, std::allocator<testing::Environment*> >::_Vector_impl::~_Vector_impl()}
C {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<testing::Environment*, std::allocator<testing::Environment*> >::_Vector_impl::~_Vector_impl()}
C {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::Environment**, std::size_t = long unsigned int]}
F {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::Environment**, std::size_t = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:153}
C {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::Environment**, std::size_t = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = testing::Environment*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::Environment**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = testing::Environment*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::Environment**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:97}
C {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = testing::Environment*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::Environment**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
F {std::_Vector_base<testing::Environment*, std::allocator<testing::Environment*> >::_Vector_impl::~_Vector_impl()} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:75}
C {std::_Vector_base<testing::Environment*, std::allocator<testing::Environment*> >::_Vector_impl::~_Vector_impl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = testing::Environment*]}
F {std::allocator<_Alloc>::~allocator() [with _Tp = testing::Environment*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:115}
C {std::allocator<_Alloc>::~allocator() [with _Tp = testing::Environment*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = testing::Environment*]}
F {__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = testing::Environment*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:76}
F {testing::internal::ThreadLocal<T>::~ThreadLocal() [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/include/gtest/internal/gtest-port.h:1480}
C {testing::internal::ThreadLocal<T>::~ThreadLocal() [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {testing::internal::ThreadLocal<T>::~ThreadLocal() [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {testing::internal::ThreadLocal<T>::~ThreadLocal() [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char, _Traits = std::char_traits<char>]}
C {testing::internal::ThreadLocal<T>::~ThreadLocal() [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::ThreadLocal<T>::~ThreadLocal() [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::ThreadLocal<T>::~ThreadLocal() [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {testing::internal::ThreadLocal<T>::~ThreadLocal() [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {testing::internal::ThreadLocal<T>::~ThreadLocal() [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {int pthread_key_delete(pthread_key_t)}
C {testing::internal::ThreadLocal<T>::~ThreadLocal() [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DeleteThreadLocalValue(void*)}
C {testing::internal::ThreadLocal<T>::~ThreadLocal() [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* pthread_getspecific(pthread_key_t)}
F {void testing::internal::Delete(T*) [with T = testing::Environment]} {../third-party/gtest/src/gtest-internal-inl.h:339}
F {void testing::internal::Delete(T*) [with T = testing::TestCase]} {../third-party/gtest/src/gtest-internal-inl.h:339}
F {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest.cc:3994}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::DefaultGlobalTestPartResultReporter::~DefaultGlobalTestPartResultReporter()}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::DefaultPerThreadTestPartResultReporter::~DefaultPerThreadTestPartResultReporter()}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::Mutex::~Mutex()}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ThreadLocal<T>::~ThreadLocal() [with T = testing::TestPartResultReporterInterface*]}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>]}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>]}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = int, _Alloc = std::allocator<int>]}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ParameterizedTestCaseRegistry::~ParameterizedTestCaseRegistry()}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestResult::~TestResult()}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestEventListeners::~TestEventListeners()}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = testing::internal::InternalRunDeathTestFlag]}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = testing::internal::DeathTestFactory]}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ThreadLocal<T>::~ThreadLocal() [with T = std::vector<testing::internal::TraceInfo>]}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::TestEventListeners::SetDefaultResultPrinter(testing::TestEventListener*)}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestEventListeners* testing::internal::UnitTestImpl::listeners()}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::PrettyUnitTestResultPrinter::PrettyUnitTestResultPrinter()}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ThreadLocal<T>::ThreadLocal() [with T = std::vector<testing::internal::TraceInfo>]}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::scoped_ptr(T*) [with T = testing::internal::DeathTestFactory]}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::DefaultDeathTestFactory::DefaultDeathTestFactory()}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::scoped_ptr(T*) [with T = testing::internal::InternalRunDeathTestFlag]}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::Random::Random(testing::internal::UInt32)}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestEventListeners::TestEventListeners()}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestResult::TestResult()}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ParameterizedTestCaseRegistry::ParameterizedTestCaseRegistry()}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::vector() [with _Tp = int, _Alloc = std::allocator<int>]}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::vector() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>]}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::vector() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>]}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ThreadLocal<T>::ThreadLocal(const T&) [with T = testing::TestPartResultReporterInterface*]}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::Mutex::Mutex()}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::DefaultPerThreadTestPartResultReporter::DefaultPerThreadTestPartResultReporter(testing::internal::UnitTestImpl*)}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::DefaultGlobalTestPartResultReporter::DefaultGlobalTestPartResultReporter(testing::internal::UnitTestImpl*)}
C {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::FilePath()}
F {testing::internal::ThreadLocal<T>::ThreadLocal(const T&) [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/include/gtest/internal/gtest-port.h:1477}
C {testing::internal::ThreadLocal<T>::ThreadLocal(const T&) [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static pthread_key_t testing::internal::ThreadLocal<T>::CreateKey() [with T = testing::TestPartResultReporterInterface*, pthread_key_t = unsigned int]}
F {static pthread_key_t testing::internal::ThreadLocal<T>::CreateKey() [with T = testing::TestPartResultReporterInterface*, pthread_key_t = unsigned int]} {../third-party/gtest/include/gtest/internal/gtest-port.h:1507}
C {static pthread_key_t testing::internal::ThreadLocal<T>::CreateKey() [with T = testing::TestPartResultReporterInterface*, pthread_key_t = unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {static pthread_key_t testing::internal::ThreadLocal<T>::CreateKey() [with T = testing::TestPartResultReporterInterface*, pthread_key_t = unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {static pthread_key_t testing::internal::ThreadLocal<T>::CreateKey() [with T = testing::TestPartResultReporterInterface*, pthread_key_t = unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char, _Traits = std::char_traits<char>]}
C {static pthread_key_t testing::internal::ThreadLocal<T>::CreateKey() [with T = testing::TestPartResultReporterInterface*, pthread_key_t = unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {static pthread_key_t testing::internal::ThreadLocal<T>::CreateKey() [with T = testing::TestPartResultReporterInterface*, pthread_key_t = unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {static pthread_key_t testing::internal::ThreadLocal<T>::CreateKey() [with T = testing::TestPartResultReporterInterface*, pthread_key_t = unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {static pthread_key_t testing::internal::ThreadLocal<T>::CreateKey() [with T = testing::TestPartResultReporterInterface*, pthread_key_t = unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {static pthread_key_t testing::internal::ThreadLocal<T>::CreateKey() [with T = testing::TestPartResultReporterInterface*, pthread_key_t = unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {int pthread_key_create(pthread_key_t*, void (*)(void*))}
F {std::vector<_Tp, _Alloc>::vector() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:217}
C {std::vector<_Tp, _Alloc>::vector() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>]}
F {std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:106}
C {std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>]}
F {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:82}
C {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = testing::Environment*]}
F {std::allocator<_Alloc>::allocator() [with _Tp = testing::Environment*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:107}
C {std::allocator<_Alloc>::allocator() [with _Tp = testing::Environment*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = testing::Environment*]}
F {__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = testing::Environment*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:69}
F {std::vector<_Tp, _Alloc>::vector() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:217}
C {std::vector<_Tp, _Alloc>::vector() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>]}
F {std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:106}
C {std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>]}
F {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:82}
C {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = testing::TestCase*]}
F {std::allocator<_Alloc>::allocator() [with _Tp = testing::TestCase*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:107}
C {std::allocator<_Alloc>::allocator() [with _Tp = testing::TestCase*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = testing::TestCase*]}
F {__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = testing::TestCase*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:69}
F {std::vector<_Tp, _Alloc>::vector() [with _Tp = int, _Alloc = std::allocator<int>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:217}
C {std::vector<_Tp, _Alloc>::vector() [with _Tp = int, _Alloc = std::allocator<int>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = int, _Alloc = std::allocator<int>]}
F {std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = int, _Alloc = std::allocator<int>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:106}
C {std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = int, _Alloc = std::allocator<int>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = int, _Alloc = std::allocator<int>]}
F {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = int, _Alloc = std::allocator<int>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:82}
C {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = int, _Alloc = std::allocator<int>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = int]}
F {std::allocator<_Alloc>::allocator() [with _Tp = int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:107}
C {std::allocator<_Alloc>::allocator() [with _Tp = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = int]}
F {__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:69}
F {testing::internal::ParameterizedTestCaseRegistry::ParameterizedTestCaseRegistry()} {../third-party/gtest/include/gtest/internal/gtest-param-util.h:558}
C {testing::internal::ParameterizedTestCaseRegistry::ParameterizedTestCaseRegistry()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::vector() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>]}
F {std::vector<_Tp, _Alloc>::vector() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:217}
C {std::vector<_Tp, _Alloc>::vector() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>]}
F {std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:106}
C {std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>]}
F {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:82}
C {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*]}
F {std::allocator<_Alloc>::allocator() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:107}
C {std::allocator<_Alloc>::allocator() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*]}
F {__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:69}
F {testing::internal::Random::Random(testing::internal::UInt32)} {../third-party/gtest/include/gtest/internal/gtest-internal.h:680}
F {testing::internal::scoped_ptr<T>::scoped_ptr(T*) [with T = testing::internal::InternalRunDeathTestFlag]} {../third-party/gtest/include/gtest/internal/gtest-port.h:894}
F {testing::internal::DefaultDeathTestFactory::DefaultDeathTestFactory()} {../third-party/gtest/include/gtest/internal/gtest-death-test-internal.h:148}
C {testing::internal::DefaultDeathTestFactory::DefaultDeathTestFactory()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::DeathTestFactory::DeathTestFactory()}
F {testing::internal::DeathTestFactory::DeathTestFactory()} {../third-party/gtest/include/gtest/internal/gtest-death-test-internal.h:140}
F {testing::internal::scoped_ptr<T>::scoped_ptr(T*) [with T = testing::internal::DeathTestFactory]} {../third-party/gtest/include/gtest/internal/gtest-port.h:894}
F {testing::internal::ThreadLocal<T>::ThreadLocal() [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/include/gtest/internal/gtest-port.h:1475}
C {testing::internal::ThreadLocal<T>::ThreadLocal() [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::vector() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>]}
C {testing::internal::ThreadLocal<T>::ThreadLocal() [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static pthread_key_t testing::internal::ThreadLocal<T>::CreateKey() [with T = std::vector<testing::internal::TraceInfo>, pthread_key_t = unsigned int]}
F {static pthread_key_t testing::internal::ThreadLocal<T>::CreateKey() [with T = std::vector<testing::internal::TraceInfo>, pthread_key_t = unsigned int]} {../third-party/gtest/include/gtest/internal/gtest-port.h:1507}
C {static pthread_key_t testing::internal::ThreadLocal<T>::CreateKey() [with T = std::vector<testing::internal::TraceInfo>, pthread_key_t = unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {static pthread_key_t testing::internal::ThreadLocal<T>::CreateKey() [with T = std::vector<testing::internal::TraceInfo>, pthread_key_t = unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {static pthread_key_t testing::internal::ThreadLocal<T>::CreateKey() [with T = std::vector<testing::internal::TraceInfo>, pthread_key_t = unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char, _Traits = std::char_traits<char>]}
C {static pthread_key_t testing::internal::ThreadLocal<T>::CreateKey() [with T = std::vector<testing::internal::TraceInfo>, pthread_key_t = unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {static pthread_key_t testing::internal::ThreadLocal<T>::CreateKey() [with T = std::vector<testing::internal::TraceInfo>, pthread_key_t = unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {static pthread_key_t testing::internal::ThreadLocal<T>::CreateKey() [with T = std::vector<testing::internal::TraceInfo>, pthread_key_t = unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {static pthread_key_t testing::internal::ThreadLocal<T>::CreateKey() [with T = std::vector<testing::internal::TraceInfo>, pthread_key_t = unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {static pthread_key_t testing::internal::ThreadLocal<T>::CreateKey() [with T = std::vector<testing::internal::TraceInfo>, pthread_key_t = unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {int pthread_key_create(pthread_key_t*, void (*)(void*))}
F {std::vector<_Tp, _Alloc>::vector() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:217}
C {std::vector<_Tp, _Alloc>::vector() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>]}
F {std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:106}
C {std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>]}
F {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:82}
C {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = testing::internal::TraceInfo]}
F {std::allocator<_Alloc>::allocator() [with _Tp = testing::internal::TraceInfo]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:107}
C {std::allocator<_Alloc>::allocator() [with _Tp = testing::internal::TraceInfo]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = testing::internal::TraceInfo]}
F {__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = testing::internal::TraceInfo]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:69}
F {testing::internal::PrettyUnitTestResultPrinter::PrettyUnitTestResultPrinter()} {../third-party/gtest/src/gtest.cc:2694}
C {testing::internal::PrettyUnitTestResultPrinter::PrettyUnitTestResultPrinter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestEventListener::TestEventListener()}
F {virtual testing::internal::DefaultPerThreadTestPartResultReporter::~DefaultPerThreadTestPartResultReporter()} {../third-party/gtest/src/gtest-internal-inl.h:490}
C {virtual testing::internal::DefaultPerThreadTestPartResultReporter::~DefaultPerThreadTestPartResultReporter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual testing::internal::DefaultPerThreadTestPartResultReporter::~DefaultPerThreadTestPartResultReporter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::DefaultPerThreadTestPartResultReporter::~DefaultPerThreadTestPartResultReporter()}
F {virtual testing::internal::DefaultGlobalTestPartResultReporter::~DefaultGlobalTestPartResultReporter()} {../third-party/gtest/src/gtest-internal-inl.h:474}
C {virtual testing::internal::DefaultGlobalTestPartResultReporter::~DefaultGlobalTestPartResultReporter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual testing::internal::DefaultGlobalTestPartResultReporter::~DefaultGlobalTestPartResultReporter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::DefaultGlobalTestPartResultReporter::~DefaultGlobalTestPartResultReporter()}
F {void testing::UnitTest::PopGTestTrace()} {../third-party/gtest/src/gtest.cc:3986}
C {void testing::UnitTest::PopGTestTrace()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestMutexLock::~GTestMutexLock()}
C {void testing::UnitTest::PopGTestTrace()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestMutexLock::~GTestMutexLock()}
C {void testing::UnitTest::PopGTestTrace()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::pop_back() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>]}
C {void testing::UnitTest::PopGTestTrace()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<testing::internal::TraceInfo>& testing::internal::UnitTestImpl::gtest_trace_stack()}
C {void testing::UnitTest::PopGTestTrace()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestMutexLock::GTestMutexLock(testing::internal::MutexBase*)}
F {testing::internal::GTestMutexLock::GTestMutexLock(testing::internal::MutexBase*)} {../third-party/gtest/include/gtest/internal/gtest-port.h:1413}
C {testing::internal::GTestMutexLock::GTestMutexLock(testing::internal::MutexBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::MutexBase::Lock()}
F {void testing::internal::MutexBase::Lock()} {../third-party/gtest/include/gtest/internal/gtest-port.h:1339}
C {void testing::internal::MutexBase::Lock()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {void testing::internal::MutexBase::Lock()} {../third-party/gtest/src/gtest-typed-test.cc:110} {pthread_t pthread_self()}
C {void testing::internal::MutexBase::Lock()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {void testing::internal::MutexBase::Lock()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char, _Traits = std::char_traits<char>]}
C {void testing::internal::MutexBase::Lock()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::MutexBase::Lock()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::MutexBase::Lock()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {void testing::internal::MutexBase::Lock()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {void testing::internal::MutexBase::Lock()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int pthread_mutex_lock(pthread_mutex_t*)}
F {std::vector<testing::internal::TraceInfo>& testing::internal::UnitTestImpl::gtest_trace_stack()} {../third-party/gtest/src/gtest-internal-inl.h:751}
C {std::vector<testing::internal::TraceInfo>& testing::internal::UnitTestImpl::gtest_trace_stack()} {../third-party/gtest/src/gtest-typed-test.cc:110} {T* testing::internal::ThreadLocal<T>::pointer() [with T = std::vector<testing::internal::TraceInfo>]}
F {T* testing::internal::ThreadLocal<T>::pointer() [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/include/gtest/internal/gtest-port.h:1489}
C {T* testing::internal::ThreadLocal<T>::pointer() [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = std::vector<testing::internal::TraceInfo>]}
F {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/include/gtest/internal/gtest-port.h:1516}
C {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T* testing::internal::ThreadLocal<T>::ValueHolder::pointer() [with T = std::vector<testing::internal::TraceInfo>]}
C {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char, _Traits = std::char_traits<char>]}
C {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {int pthread_setspecific(pthread_key_t, const void*)}
C {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ThreadLocal<T>::ValueHolder::ValueHolder(const T&) [with T = std::vector<testing::internal::TraceInfo>]}
C {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T* testing::internal::ThreadLocal<T>::ValueHolder::pointer() [with T = std::vector<testing::internal::TraceInfo>]}
C {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {Derived* testing::internal::CheckedDowncastToActualType(Base*) [with Derived = testing::internal::ThreadLocal<std::vector<testing::internal::TraceInfo> >::ValueHolder, Base = testing::internal::ThreadLocalValueHolderBase]}
C {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* pthread_getspecific(pthread_key_t)}
F {Derived* testing::internal::CheckedDowncastToActualType(Base*) [with Derived = testing::internal::ThreadLocal<std::vector<testing::internal::TraceInfo> >::ValueHolder, Base = testing::internal::ThreadLocalValueHolderBase]} {../third-party/gtest/include/gtest/internal/gtest-port.h:1145}
C {Derived* testing::internal::CheckedDowncastToActualType(Base*) [with Derived = testing::internal::ThreadLocal<std::vector<testing::internal::TraceInfo> >::ValueHolder, Base = testing::internal::ThreadLocalValueHolderBase]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {Derived* testing::internal::CheckedDowncastToActualType(Base*) [with Derived = testing::internal::ThreadLocal<std::vector<testing::internal::TraceInfo> >::ValueHolder, Base = testing::internal::ThreadLocalValueHolderBase]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __dynamic_cast(const void*, const __cxxabiv1::__class_type_info*, const __cxxabiv1::__class_type_info*, long int)}
C {Derived* testing::internal::CheckedDowncastToActualType(Base*) [with Derived = testing::internal::ThreadLocal<std::vector<testing::internal::TraceInfo> >::ValueHolder, Base = testing::internal::ThreadLocalValueHolderBase]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {Derived* testing::internal::CheckedDowncastToActualType(Base*) [with Derived = testing::internal::ThreadLocal<std::vector<testing::internal::TraceInfo> >::ValueHolder, Base = testing::internal::ThreadLocalValueHolderBase]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {Derived* testing::internal::CheckedDowncastToActualType(Base*) [with Derived = testing::internal::ThreadLocal<std::vector<testing::internal::TraceInfo> >::ValueHolder, Base = testing::internal::ThreadLocalValueHolderBase]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {Derived* testing::internal::CheckedDowncastToActualType(Base*) [with Derived = testing::internal::ThreadLocal<std::vector<testing::internal::TraceInfo> >::ValueHolder, Base = testing::internal::ThreadLocalValueHolderBase]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {Derived* testing::internal::CheckedDowncastToActualType(Base*) [with Derived = testing::internal::ThreadLocal<std::vector<testing::internal::TraceInfo> >::ValueHolder, Base = testing::internal::ThreadLocalValueHolderBase]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const std::type_info& __cxa_bad_typeid()}
C {Derived* testing::internal::CheckedDowncastToActualType(Base*) [with Derived = testing::internal::ThreadLocal<std::vector<testing::internal::TraceInfo> >::ValueHolder, Base = testing::internal::ThreadLocalValueHolderBase]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsTrue(bool)}
C {Derived* testing::internal::CheckedDowncastToActualType(Base*) [with Derived = testing::internal::ThreadLocal<std::vector<testing::internal::TraceInfo> >::ValueHolder, Base = testing::internal::ThreadLocalValueHolderBase]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::type_info::operator==(const std::type_info&) const}
F {testing::internal::ThreadLocal<T>::ValueHolder::ValueHolder(const T&) [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/include/gtest/internal/gtest-port.h:1498}
C {testing::internal::ThreadLocal<T>::ValueHolder::ValueHolder(const T&) [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ThreadLocalValueHolderBase::~ThreadLocalValueHolderBase()}
C {testing::internal::ThreadLocal<T>::ValueHolder::ValueHolder(const T&) [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc> = std::vector<testing::internal::TraceInfo>]}
C {testing::internal::ThreadLocal<T>::ValueHolder::ValueHolder(const T&) [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ThreadLocalValueHolderBase::ThreadLocalValueHolderBase()}
F {testing::internal::ThreadLocalValueHolderBase::ThreadLocalValueHolderBase()} {../third-party/gtest/include/gtest/internal/gtest-port.h:1432}
F {std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc> = std::vector<testing::internal::TraceInfo>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:278}
C {std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc> = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>]}
C {std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc> = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = __gnu_cxx::__normal_iterator<const testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, _ForwardIterator = testing::internal::TraceInfo*, _Tp = testing::internal::TraceInfo]}
C {std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc> = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = const testing::internal::TraceInfo*]}
C {std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc> = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = const testing::internal::TraceInfo*]}
C {std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc> = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::internal::TraceInfo>]}
C {std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc> = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::size_t = long unsigned int, std::_Vector_base<_Tp, _Alloc>::allocator_type = std::allocator<testing::internal::TraceInfo>]}
C {std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc> = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc> = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::internal::TraceInfo>]}
F {const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::internal::TraceInfo>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:99}
F {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:570}
F {std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::size_t = long unsigned int, std::_Vector_base<_Tp, _Alloc>::allocator_type = std::allocator<testing::internal::TraceInfo>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:120}
C {std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::size_t = long unsigned int, std::_Vector_base<_Tp, _Alloc>::allocator_type = std::allocator<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<testing::internal::TraceInfo, std::allocator<testing::internal::TraceInfo> >::_Vector_impl::~_Vector_impl()}
C {std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::size_t = long unsigned int, std::_Vector_base<_Tp, _Alloc>::allocator_type = std::allocator<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename _Alloc::rebind<_Tp>::other::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, typename _Alloc::rebind<_Tp>::other::pointer = testing::internal::TraceInfo*, std::size_t = long unsigned int]}
C {std::_Vector_base<_Tp, _Alloc>::_Vector_base(std::size_t, const allocator_type&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::size_t = long unsigned int, std::_Vector_base<_Tp, _Alloc>::allocator_type = std::allocator<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl(const _Tp_alloc_type&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::internal::TraceInfo>]}
F {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl(const _Tp_alloc_type&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::internal::TraceInfo>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:86}
C {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl(const _Tp_alloc_type&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator(const std::allocator<_Alloc>&) [with _Tp = testing::internal::TraceInfo, std::allocator<_Alloc> = std::allocator<testing::internal::TraceInfo>]}
F {std::allocator<_Alloc>::allocator(const std::allocator<_Alloc>&) [with _Tp = testing::internal::TraceInfo, std::allocator<_Alloc> = std::allocator<testing::internal::TraceInfo>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:109}
C {std::allocator<_Alloc>::allocator(const std::allocator<_Alloc>&) [with _Tp = testing::internal::TraceInfo, std::allocator<_Alloc> = std::allocator<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = testing::internal::TraceInfo, __gnu_cxx::new_allocator<_Tp> = __gnu_cxx::new_allocator<testing::internal::TraceInfo>]}
F {__gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = testing::internal::TraceInfo, __gnu_cxx::new_allocator<_Tp> = __gnu_cxx::new_allocator<testing::internal::TraceInfo>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:71}
F {typename _Alloc::rebind<_Tp>::other::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, typename _Alloc::rebind<_Tp>::other::pointer = testing::internal::TraceInfo*, std::size_t = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:149}
C {typename _Alloc::rebind<_Tp>::other::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, typename _Alloc::rebind<_Tp>::other::pointer = testing::internal::TraceInfo*, std::size_t = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::internal::TraceInfo, __gnu_cxx::new_allocator<_Tp>::pointer = testing::internal::TraceInfo*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::internal::TraceInfo, __gnu_cxx::new_allocator<_Tp>::pointer = testing::internal::TraceInfo*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:87}
C {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::internal::TraceInfo, __gnu_cxx::new_allocator<_Tp>::pointer = testing::internal::TraceInfo*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::internal::TraceInfo, __gnu_cxx::new_allocator<_Tp>::pointer = testing::internal::TraceInfo*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::__throw_bad_alloc()}
C {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::internal::TraceInfo, __gnu_cxx::new_allocator<_Tp>::pointer = testing::internal::TraceInfo*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = testing::internal::TraceInfo, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = testing::internal::TraceInfo, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:101}
F {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = const testing::internal::TraceInfo*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:490}
C {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = const testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = const testing::internal::TraceInfo*, _Container = std::vector<testing::internal::TraceInfo>]}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = const testing::internal::TraceInfo*, _Container = std::vector<testing::internal::TraceInfo>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:720}
F {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = const testing::internal::TraceInfo*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:472}
C {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = const testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = const testing::internal::TraceInfo*, _Container = std::vector<testing::internal::TraceInfo>]}
F {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = __gnu_cxx::__normal_iterator<const testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, _ForwardIterator = testing::internal::TraceInfo*, _Tp = testing::internal::TraceInfo]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:257}
C {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = __gnu_cxx::__normal_iterator<const testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, _ForwardIterator = testing::internal::TraceInfo*, _Tp = testing::internal::TraceInfo]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, _ForwardIterator = testing::internal::TraceInfo*]}
F {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, _ForwardIterator = testing::internal::TraceInfo*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:109}
C {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, _ForwardIterator = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, _ForwardIterator = testing::internal::TraceInfo*, bool _TrivialValueTypes = false]}
F {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, _ForwardIterator = testing::internal::TraceInfo*, bool _TrivialValueTypes = false]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:70}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, _ForwardIterator = testing::internal::TraceInfo*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_rethrow()}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, _ForwardIterator = testing::internal::TraceInfo*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::internal::TraceInfo*]}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, _ForwardIterator = testing::internal::TraceInfo*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_begin_catch(void*)}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, _ForwardIterator = testing::internal::TraceInfo*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_eh_pointer(int)}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, _ForwardIterator = testing::internal::TraceInfo*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, _ForwardIterator = testing::internal::TraceInfo*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const testing::internal::TraceInfo*, _Container = std::vector<testing::internal::TraceInfo>]}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, _ForwardIterator = testing::internal::TraceInfo*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = const testing::internal::TraceInfo*, _Container = std::vector<testing::internal::TraceInfo>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<const testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >]}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, _ForwardIterator = testing::internal::TraceInfo*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Construct(_T1*, const _T2&) [with _T1 = testing::internal::TraceInfo, _T2 = testing::internal::TraceInfo]}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, _ForwardIterator = testing::internal::TraceInfo*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_Tp* std::__addressof(_Tp&) [with _Tp = testing::internal::TraceInfo]}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, _ForwardIterator = testing::internal::TraceInfo*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = const testing::internal::TraceInfo*, _Container = std::vector<testing::internal::TraceInfo>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = const testing::internal::TraceInfo&]}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = const testing::internal::TraceInfo*, _Container = std::vector<testing::internal::TraceInfo>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = const testing::internal::TraceInfo&]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:732}
F {void std::_Construct(_T1*, const _T2&) [with _T1 = testing::internal::TraceInfo, _T2 = testing::internal::TraceInfo]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:80}
C {void std::_Construct(_T1*, const _T2&) [with _T1 = testing::internal::TraceInfo, _T2 = testing::internal::TraceInfo]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*, void*)}
C {void std::_Construct(_T1*, const _T2&) [with _T1 = testing::internal::TraceInfo, _T2 = testing::internal::TraceInfo]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TraceInfo::TraceInfo(const testing::internal::TraceInfo&)}
C {void std::_Construct(_T1*, const _T2&) [with _T1 = testing::internal::TraceInfo, _T2 = testing::internal::TraceInfo]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t, void*)}
F {testing::internal::TraceInfo::TraceInfo(const testing::internal::TraceInfo&)} {../third-party/gtest/src/gtest-internal-inl.h:466}
C {testing::internal::TraceInfo::TraceInfo(const testing::internal::TraceInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = const testing::internal::TraceInfo*, _Container = std::vector<testing::internal::TraceInfo>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<const testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:740}
F {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const testing::internal::TraceInfo*, _Container = std::vector<testing::internal::TraceInfo>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:817}
C {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const testing::internal::TraceInfo*, _Container = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = const testing::internal::TraceInfo*, _Container = std::vector<testing::internal::TraceInfo>]}
C {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const testing::internal::TraceInfo*, _Container = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = const testing::internal::TraceInfo*, _Container = std::vector<testing::internal::TraceInfo>]}
F {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = const testing::internal::TraceInfo*, _Container = std::vector<testing::internal::TraceInfo>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:784}
F {T* testing::internal::ThreadLocal<T>::ValueHolder::pointer() [with T = std::vector<testing::internal::TraceInfo>]} {../third-party/gtest/include/gtest/internal/gtest-port.h:1500}
F {void std::vector<_Tp, _Alloc>::pop_back() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:857}
C {void std::vector<_Tp, _Alloc>::pop_back() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::destroy(__gnu_cxx::new_allocator<_Tp>::pointer) [with _Tp = testing::internal::TraceInfo, __gnu_cxx::new_allocator<_Tp>::pointer = testing::internal::TraceInfo*]}
F {void __gnu_cxx::new_allocator<_Tp>::destroy(__gnu_cxx::new_allocator<_Tp>::pointer) [with _Tp = testing::internal::TraceInfo, __gnu_cxx::new_allocator<_Tp>::pointer = testing::internal::TraceInfo*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:118}
C {void __gnu_cxx::new_allocator<_Tp>::destroy(__gnu_cxx::new_allocator<_Tp>::pointer) [with _Tp = testing::internal::TraceInfo, __gnu_cxx::new_allocator<_Tp>::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TraceInfo::~TraceInfo()}
F {testing::internal::GTestMutexLock::~GTestMutexLock()} {../third-party/gtest/include/gtest/internal/gtest-port.h:1416}
C {testing::internal::GTestMutexLock::~GTestMutexLock()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::MutexBase::Unlock()}
F {void testing::internal::MutexBase::Unlock()} {../third-party/gtest/include/gtest/internal/gtest-port.h:1346}
C {void testing::internal::MutexBase::Unlock()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {void testing::internal::MutexBase::Unlock()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {void testing::internal::MutexBase::Unlock()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char, _Traits = std::char_traits<char>]}
C {void testing::internal::MutexBase::Unlock()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::MutexBase::Unlock()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::MutexBase::Unlock()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {void testing::internal::MutexBase::Unlock()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {void testing::internal::MutexBase::Unlock()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int pthread_mutex_unlock(pthread_mutex_t*)}
F {void testing::UnitTest::PushGTestTrace(const testing::internal::TraceInfo&)} {../third-party/gtest/src/gtest.cc:3979}
C {void testing::UnitTest::PushGTestTrace(const testing::internal::TraceInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestMutexLock::~GTestMutexLock()}
C {void testing::UnitTest::PushGTestTrace(const testing::internal::TraceInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestMutexLock::~GTestMutexLock()}
C {void testing::UnitTest::PushGTestTrace(const testing::internal::TraceInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::value_type = testing::internal::TraceInfo]}
C {void testing::UnitTest::PushGTestTrace(const testing::internal::TraceInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<testing::internal::TraceInfo>& testing::internal::UnitTestImpl::gtest_trace_stack()}
C {void testing::UnitTest::PushGTestTrace(const testing::internal::TraceInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestMutexLock::GTestMutexLock(testing::internal::MutexBase*)}
F {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::value_type = testing::internal::TraceInfo]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:826}
C {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::value_type = testing::internal::TraceInfo]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]}
C {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::value_type = testing::internal::TraceInfo]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]}
C {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::value_type = testing::internal::TraceInfo]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::internal::TraceInfo, __gnu_cxx::new_allocator<_Tp>::pointer = testing::internal::TraceInfo*]}
F {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::internal::TraceInfo, __gnu_cxx::new_allocator<_Tp>::pointer = testing::internal::TraceInfo*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:107}
C {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::internal::TraceInfo, __gnu_cxx::new_allocator<_Tp>::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*, void*)}
C {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::internal::TraceInfo, __gnu_cxx::new_allocator<_Tp>::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TraceInfo::TraceInfo(const testing::internal::TraceInfo&)}
C {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::internal::TraceInfo, __gnu_cxx::new_allocator<_Tp>::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t, void*)}
F {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:481}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::internal::TraceInfo*, _Container = std::vector<testing::internal::TraceInfo>]}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::internal::TraceInfo*, _Container = std::vector<testing::internal::TraceInfo>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:720}
F {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/vector.tcc:300}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_rethrow()}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, typename _Alloc::rebind<_Tp>::other::pointer = testing::internal::TraceInfo*, std::size_t = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::internal::TraceInfo*, _Tp = testing::internal::TraceInfo]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::internal::TraceInfo>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::destroy(__gnu_cxx::new_allocator<_Tp>::pointer) [with _Tp = testing::internal::TraceInfo, __gnu_cxx::new_allocator<_Tp>::pointer = testing::internal::TraceInfo*]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_begin_catch(void*)}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_eh_pointer(int)}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TraceInfo::~TraceInfo()}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, typename _Alloc::rebind<_Tp>::other::pointer = testing::internal::TraceInfo*, std::size_t = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::internal::TraceInfo*, _Tp = testing::internal::TraceInfo]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::internal::TraceInfo>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = testing::internal::TraceInfo*, _ForwardIterator = testing::internal::TraceInfo*, _Allocator = std::allocator<testing::internal::TraceInfo>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::internal::TraceInfo*, _Container = std::vector<testing::internal::TraceInfo>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::internal::TraceInfo>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = testing::internal::TraceInfo*, _ForwardIterator = testing::internal::TraceInfo*, _Allocator = std::allocator<testing::internal::TraceInfo>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::internal::TraceInfo*, _Container = std::vector<testing::internal::TraceInfo>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::internal::TraceInfo>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::internal::TraceInfo, __gnu_cxx::new_allocator<_Tp>::pointer = testing::internal::TraceInfo*]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename _Alloc::rebind<_Tp>::other::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, typename _Alloc::rebind<_Tp>::other::pointer = testing::internal::TraceInfo*, std::size_t = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::internal::TraceInfo*, _Container = std::vector<testing::internal::TraceInfo>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TraceInfo::~TraceInfo()}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TraceInfo& testing::internal::TraceInfo::operator=(const testing::internal::TraceInfo&)}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::internal::TraceInfo*, _Container = std::vector<testing::internal::TraceInfo>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::internal::TraceInfo&]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::internal::TraceInfo*, _BI2 = testing::internal::TraceInfo*]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::internal::TraceInfo*, _Container = std::vector<testing::internal::TraceInfo>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TraceInfo::TraceInfo(const testing::internal::TraceInfo&)}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::internal::TraceInfo, __gnu_cxx::new_allocator<_Tp>::pointer = testing::internal::TraceInfo*]}
F {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::internal::TraceInfo*, _BI2 = testing::internal::TraceInfo*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:613}
C {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::internal::TraceInfo*, _BI2 = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::internal::TraceInfo*, _BI2 = testing::internal::TraceInfo*]}
C {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::internal::TraceInfo*, _BI2 = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::internal::TraceInfo*, typename std::_Miter_base<_Iterator>::iterator_type = testing::internal::TraceInfo*]}
C {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::internal::TraceInfo*, _BI2 = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::internal::TraceInfo*, typename std::_Miter_base<_Iterator>::iterator_type = testing::internal::TraceInfo*]}
F {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::internal::TraceInfo*, typename std::_Miter_base<_Iterator>::iterator_type = testing::internal::TraceInfo*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:282}
C {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::internal::TraceInfo*, typename std::_Miter_base<_Iterator>::iterator_type = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = testing::internal::TraceInfo*, bool _HasBase = false, std::_Iter_base<_Iterator, _HasBase>::iterator_type = testing::internal::TraceInfo*]}
F {static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = testing::internal::TraceInfo*, bool _HasBase = false, std::_Iter_base<_Iterator, _HasBase>::iterator_type = testing::internal::TraceInfo*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator_base_types.h:213}
F {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::internal::TraceInfo*, _BI2 = testing::internal::TraceInfo*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:586}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::internal::TraceInfo*, _BI2 = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::internal::TraceInfo*, _BI2 = testing::internal::TraceInfo*]}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::internal::TraceInfo*, _BI2 = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::internal::TraceInfo*, typename std::_Niter_base<_Iterator>::iterator_type = testing::internal::TraceInfo*]}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::internal::TraceInfo*, _BI2 = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::internal::TraceInfo*, typename std::_Niter_base<_Iterator>::iterator_type = testing::internal::TraceInfo*]}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::internal::TraceInfo*, _BI2 = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::internal::TraceInfo*, typename std::_Niter_base<_Iterator>::iterator_type = testing::internal::TraceInfo*]}
F {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::internal::TraceInfo*, typename std::_Niter_base<_Iterator>::iterator_type = testing::internal::TraceInfo*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:271}
C {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::internal::TraceInfo*, typename std::_Niter_base<_Iterator>::iterator_type = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = testing::internal::TraceInfo*, bool _HasBase = false, std::_Iter_base<_Iterator, _HasBase>::iterator_type = testing::internal::TraceInfo*]}
F {_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::internal::TraceInfo*, _BI2 = testing::internal::TraceInfo*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:568}
C {_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::internal::TraceInfo*, _BI2 = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _BI2 std::__copy_move_backward<false, false, std::random_access_iterator_tag>::__copy_move_b(_BI1, _BI1, _BI2) [with _BI1 = testing::internal::TraceInfo*, _BI2 = testing::internal::TraceInfo*]}
F {static _BI2 std::__copy_move_backward<false, false, std::random_access_iterator_tag>::__copy_move_b(_BI1, _BI1, _BI2) [with _BI1 = testing::internal::TraceInfo*, _BI2 = testing::internal::TraceInfo*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:527}
C {static _BI2 std::__copy_move_backward<false, false, std::random_access_iterator_tag>::__copy_move_b(_BI1, _BI1, _BI2) [with _BI1 = testing::internal::TraceInfo*, _BI2 = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TraceInfo& testing::internal::TraceInfo::operator=(const testing::internal::TraceInfo&)}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::internal::TraceInfo*, _Container = std::vector<testing::internal::TraceInfo>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::internal::TraceInfo&]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:732}
F {testing::internal::TraceInfo& testing::internal::TraceInfo::operator=(const testing::internal::TraceInfo&)} {../third-party/gtest/src/gtest-internal-inl.h:466}
C {testing::internal::TraceInfo& testing::internal::TraceInfo::operator=(const testing::internal::TraceInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
F {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:1239}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::__throw_length_error(const char*)}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:575}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = testing::internal::TraceInfo, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::internal::TraceInfo>]}
F {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:463}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::TraceInfo*, std::vector<testing::internal::TraceInfo> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::internal::TraceInfo*, _Container = std::vector<testing::internal::TraceInfo>]}
F {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::internal::TraceInfo*, _Container = std::vector<testing::internal::TraceInfo>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:890}
C {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::internal::TraceInfo*, _Container = std::vector<testing::internal::TraceInfo>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::internal::TraceInfo*, _Container = std::vector<testing::internal::TraceInfo>]}
C {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::internal::TraceInfo*, _Container = std::vector<testing::internal::TraceInfo>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::internal::TraceInfo*, _Container = std::vector<testing::internal::TraceInfo>]}
F {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::internal::TraceInfo*, _Container = std::vector<testing::internal::TraceInfo>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:784}
F {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = testing::internal::TraceInfo*, _ForwardIterator = testing::internal::TraceInfo*, _Allocator = std::allocator<testing::internal::TraceInfo>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:264}
C {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = testing::internal::TraceInfo*, _ForwardIterator = testing::internal::TraceInfo*, _Allocator = std::allocator<testing::internal::TraceInfo>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = testing::internal::TraceInfo*, _ForwardIterator = testing::internal::TraceInfo*, _Tp = testing::internal::TraceInfo]}
F {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = testing::internal::TraceInfo*, _ForwardIterator = testing::internal::TraceInfo*, _Tp = testing::internal::TraceInfo]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:257}
C {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = testing::internal::TraceInfo*, _ForwardIterator = testing::internal::TraceInfo*, _Tp = testing::internal::TraceInfo]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::internal::TraceInfo*, _ForwardIterator = testing::internal::TraceInfo*]}
F {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::internal::TraceInfo*, _ForwardIterator = testing::internal::TraceInfo*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:109}
C {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::internal::TraceInfo*, _ForwardIterator = testing::internal::TraceInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::internal::TraceInfo*, _ForwardIterator = testing::internal::TraceInfo*, bool _TrivialValueTypes = false]}
F {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::internal::TraceInfo*, _ForwardIterator = testing::internal::TraceInfo*, bool _TrivialValueTypes = false]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:70}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::internal::TraceInfo*, _ForwardIterator = testing::internal::TraceInfo*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_rethrow()}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::internal::TraceInfo*, _ForwardIterator = testing::internal::TraceInfo*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::internal::TraceInfo*]}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::internal::TraceInfo*, _ForwardIterator = testing::internal::TraceInfo*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_begin_catch(void*)}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::internal::TraceInfo*, _ForwardIterator = testing::internal::TraceInfo*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_eh_pointer(int)}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::internal::TraceInfo*, _ForwardIterator = testing::internal::TraceInfo*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::internal::TraceInfo*, _ForwardIterator = testing::internal::TraceInfo*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Construct(_T1*, const _T2&) [with _T1 = testing::internal::TraceInfo, _T2 = testing::internal::TraceInfo]}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::internal::TraceInfo*, _ForwardIterator = testing::internal::TraceInfo*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_Tp* std::__addressof(_Tp&) [with _Tp = testing::internal::TraceInfo]}
F {virtual testing::UnitTest::~UnitTest()} {../third-party/gtest/src/gtest.cc:3973}
C {virtual testing::UnitTest::~UnitTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual testing::UnitTest::~UnitTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::UnitTest::~UnitTest()}
F {testing::UnitTest::~UnitTest()} {../third-party/gtest/src/gtest.cc:3973}
C {testing::UnitTest::~UnitTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::Mutex::~Mutex()}
C {testing::UnitTest::~UnitTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::UnitTest::~UnitTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::Mutex::~Mutex()}
F {testing::UnitTest::UnitTest()} {../third-party/gtest/src/gtest.cc:3968}
C {testing::UnitTest::UnitTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::Mutex::~Mutex()}
C {testing::UnitTest::UnitTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::UnitTest::UnitTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UnitTestImpl::UnitTestImpl(testing::UnitTest*)}
C {testing::UnitTest::UnitTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {testing::UnitTest::UnitTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::Mutex::Mutex()}
F {testing::internal::ParameterizedTestCaseRegistry& testing::UnitTest::parameterized_test_registry()} {../third-party/gtest/src/gtest.cc:3961}
C {testing::internal::ParameterizedTestCaseRegistry& testing::UnitTest::parameterized_test_registry()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ParameterizedTestCaseRegistry& testing::internal::UnitTestImpl::parameterized_test_registry()}
F {testing::internal::ParameterizedTestCaseRegistry& testing::internal::UnitTestImpl::parameterized_test_registry()} {../third-party/gtest/src/gtest-internal-inl.h:679}
F {int testing::UnitTest::random_seed() const} {../third-party/gtest/src/gtest.cc:3955}
C {int testing::UnitTest::random_seed() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::UnitTestImpl::random_seed() const}
F {int testing::internal::UnitTestImpl::random_seed() const} {../third-party/gtest/src/gtest-internal-inl.h:798}
F {const testing::TestInfo* testing::UnitTest::current_test_info() const} {../third-party/gtest/src/gtest.cc:3948}
C {const testing::TestInfo* testing::UnitTest::current_test_info() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestMutexLock::~GTestMutexLock()}
C {const testing::TestInfo* testing::UnitTest::current_test_info() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestMutexLock::~GTestMutexLock()}
C {const testing::TestInfo* testing::UnitTest::current_test_info() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestInfo* testing::internal::UnitTestImpl::current_test_info()}
C {const testing::TestInfo* testing::UnitTest::current_test_info() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestMutexLock::GTestMutexLock(testing::internal::MutexBase*)}
F {const testing::TestCase* testing::UnitTest::current_test_case() const} {../third-party/gtest/src/gtest.cc:3940}
C {const testing::TestCase* testing::UnitTest::current_test_case() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestMutexLock::~GTestMutexLock()}
C {const testing::TestCase* testing::UnitTest::current_test_case() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestMutexLock::~GTestMutexLock()}
C {const testing::TestCase* testing::UnitTest::current_test_case() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::TestCase* testing::internal::UnitTestImpl::current_test_case() const}
C {const testing::TestCase* testing::UnitTest::current_test_case() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestMutexLock::GTestMutexLock(testing::internal::MutexBase*)}
F {const testing::TestCase* testing::internal::UnitTestImpl::current_test_case() const} {../third-party/gtest/src/gtest-internal-inl.h:742}
F {const char* testing::UnitTest::original_working_dir() const} {../third-party/gtest/src/gtest.cc:3934}
C {const char* testing::UnitTest::original_working_dir() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::internal::FilePath::c_str() const}
F {int testing::UnitTest::Run()} {../third-party/gtest/src/gtest.cc:3854}
C {int testing::UnitTest::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ScopedPrematureExitFile::~ScopedPrematureExitFile()}
C {int testing::UnitTest::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ScopedPrematureExitFile::~ScopedPrematureExitFile()}
C {int testing::UnitTest::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::UnitTestImpl, Result = bool]}
C {int testing::UnitTest::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UnitTestImpl* testing::UnitTest::impl()}
C {int testing::UnitTest::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::UnitTestImpl::set_catch_exceptions(bool)}
C {int testing::UnitTest::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UnitTestImpl* testing::UnitTest::impl()}
C {int testing::UnitTest::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ScopedPrematureExitFile::ScopedPrematureExitFile(const char*)}
C {int testing::UnitTest::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::internal::posix::GetEnv(const char*)}
C {int testing::UnitTest::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
F {testing::internal::ScopedPrematureExitFile::ScopedPrematureExitFile(const char*)} {../third-party/gtest/src/gtest.cc:3530}
C {testing::internal::ScopedPrematureExitFile::ScopedPrematureExitFile(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fclose(FILE*)}
C {testing::internal::ScopedPrematureExitFile::ScopedPrematureExitFile(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {size_t fwrite(const void*, size_t, size_t, FILE*)}
C {testing::internal::ScopedPrematureExitFile::ScopedPrematureExitFile(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {FILE* testing::internal::posix::FOpen(const char*, const char*)}
F {void testing::internal::UnitTestImpl::set_catch_exceptions(bool)} {../third-party/gtest/src/gtest-internal-inl.h:819}
F {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::UnitTestImpl, Result = bool]} {../third-party/gtest/src/gtest.cc:2086}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::UnitTestImpl, Result = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::UnitTestImpl, Result = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::UnitTestImpl, Result = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ReportFailureInUnknownLocation(testing::TestPartResult::Type, const string&)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::UnitTestImpl, Result = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatCxxExceptionMessage(const char*, const char*)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::UnitTestImpl, Result = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_begin_catch(void*)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::UnitTestImpl, Result = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_eh_pointer(int)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::UnitTestImpl, Result = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::UnitTestImpl, Result = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::UnitTestImpl, Result = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ReportFailureInUnknownLocation(testing::TestPartResult::Type, const string&)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::UnitTestImpl, Result = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatCxxExceptionMessage(const char*, const char*)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::UnitTestImpl, Result = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_begin_catch(void*)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::UnitTestImpl, Result = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_eh_pointer(int)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::UnitTestImpl, Result = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_rethrow()}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::UnitTestImpl, Result = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_begin_catch(void*)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::UnitTestImpl, Result = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_eh_pointer(int)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::UnitTestImpl, Result = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::UnitTestImpl, Result = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::UnitTestImpl, Result = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::UnitTestImpl, Result = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::UnitTestImpl, Result = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::UnitTestImpl, Result = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {Result testing::internal::HandleSehExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::UnitTestImpl, Result = bool]}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::UnitTestImpl, Result = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::UnitTestImpl::catch_exceptions() const}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::UnitTestImpl, Result = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UnitTestImpl* testing::internal::GetUnitTestImpl()}
F {bool testing::internal::UnitTestImpl::catch_exceptions() const} {../third-party/gtest/src/gtest-internal-inl.h:812}
F {Result testing::internal::HandleSehExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::UnitTestImpl, Result = bool]} {../third-party/gtest/src/gtest.cc:2059}
F {std::string testing::internal::FormatCxxExceptionMessage(const char*, const char*)} {../third-party/gtest/src/gtest.cc:2028}
C {std::string testing::internal::FormatCxxExceptionMessage(const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {std::string testing::internal::FormatCxxExceptionMessage(const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {std::string testing::internal::FormatCxxExceptionMessage(const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::Message::GetString() const}
C {std::string testing::internal::FormatCxxExceptionMessage(const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [2], testing::Message = testing::Message]}
C {std::string testing::internal::FormatCxxExceptionMessage(const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]}
C {std::string testing::internal::FormatCxxExceptionMessage(const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [12], testing::Message = testing::Message]}
C {std::string testing::internal::FormatCxxExceptionMessage(const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [22], testing::Message = testing::Message]}
C {std::string testing::internal::FormatCxxExceptionMessage(const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [2], testing::Message = testing::Message]}
C {std::string testing::internal::FormatCxxExceptionMessage(const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]}
C {std::string testing::internal::FormatCxxExceptionMessage(const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [33], testing::Message = testing::Message]}
C {std::string testing::internal::FormatCxxExceptionMessage(const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {testing::internal::ScopedPrematureExitFile::~ScopedPrematureExitFile()} {../third-party/gtest/src/gtest.cc:3543}
C {testing::internal::ScopedPrematureExitFile::~ScopedPrematureExitFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int remove(const char*)}
F {void testing::UnitTest::RecordProperty(const string&, const string&)} {../third-party/gtest/src/gtest.cc:3844}
C {void testing::UnitTest::RecordProperty(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestProperty::~TestProperty()}
C {void testing::UnitTest::RecordProperty(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestProperty::~TestProperty()}
C {void testing::UnitTest::RecordProperty(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::UnitTestImpl::RecordProperty(const testing::TestProperty&)}
C {void testing::UnitTest::RecordProperty(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestProperty::TestProperty(const string&, const string&)}
F {testing::TestProperty::TestProperty(const string&, const string&)} {../third-party/gtest/include/gtest/gtest.h:468}
C {testing::TestProperty::TestProperty(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestProperty::TestProperty(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {testing::TestProperty::TestProperty(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
F {testing::TestProperty::~TestProperty()} {../third-party/gtest/include/gtest/gtest.h:463}
C {testing::TestProperty::~TestProperty()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestProperty::~TestProperty()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestProperty::~TestProperty()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest.cc:3777}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestMutexLock::~GTestMutexLock()}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResult::~TestPartResult()}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_free_exception(void*)}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestMutexLock::~GTestMutexLock()}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResult::~TestPartResult()}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_throw(void*, void*, void (*)(void*))}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GoogleTestFailureException::GoogleTestFailureException(const testing::TestPartResult&)}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_allocate_exception(long unsigned int)}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResultReporterInterface* testing::internal::UnitTestImpl::GetTestPartResultReporterForCurrentThread()}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResult::TestPartResult(testing::TestPartResult::Type, const char*, int, const char*)}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::Message::GetString() const}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = std::basic_string<char>, testing::Message = testing::Message]}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [15], testing::Message = testing::Message]}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::basic_string<_CharT, _Traits, _Alloc>::empty() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = std::basic_string<char>, testing::Message = testing::Message]}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [2], testing::Message = testing::Message]}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = std::basic_string<char>, testing::Message = testing::Message]}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [2], testing::Message = testing::Message]}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatFileLocation(const char*, int)}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::reference = testing::internal::TraceInfo&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<testing::internal::TraceInfo>& testing::internal::UnitTestImpl::gtest_trace_stack()}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<testing::internal::TraceInfo>& testing::internal::UnitTestImpl::gtest_trace_stack()}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [8], testing::Message = testing::Message]}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [12], testing::Message = testing::Message]}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [2], testing::Message = testing::Message]}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<testing::internal::TraceInfo>& testing::internal::UnitTestImpl::gtest_trace_stack()}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestMutexLock::GTestMutexLock(testing::internal::MutexBase*)}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = std::basic_string<char>, testing::Message = testing::Message]}
C {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [8], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [8], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [8], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = testing::internal::TraceInfo, _Alloc = std::allocator<testing::internal::TraceInfo>, std::vector<_Tp, _Alloc>::reference = testing::internal::TraceInfo&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:695}
F {testing::TestPartResult::TestPartResult(testing::TestPartResult::Type, const char*, int, const char*)} {../third-party/gtest/include/gtest/gtest-test-part.h:60}
C {testing::TestPartResult::TestPartResult(testing::TestPartResult::Type, const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestPartResult::TestPartResult(testing::TestPartResult::Type, const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestPartResult::TestPartResult(testing::TestPartResult::Type, const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::TestPartResult::TestPartResult(testing::TestPartResult::Type, const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::TestPartResult::TestPartResult(testing::TestPartResult::Type, const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::TestPartResult::TestPartResult(testing::TestPartResult::Type, const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestPartResult::TestPartResult(testing::TestPartResult::Type, const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {testing::TestPartResult::TestPartResult(testing::TestPartResult::Type, const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::string testing::TestPartResult::ExtractSummary(const char*)}
C {testing::TestPartResult::TestPartResult(testing::TestPartResult::Type, const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::TestPartResult::TestPartResult(testing::TestPartResult::Type, const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestPartResult::TestPartResult(testing::TestPartResult::Type, const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
F {testing::internal::GoogleTestFailureException::~GoogleTestFailureException()} {../third-party/gtest/include/gtest/internal/gtest-internal.h:148}
C {testing::internal::GoogleTestFailureException::~GoogleTestFailureException()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::GoogleTestFailureException::~GoogleTestFailureException()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::runtime_error::~runtime_error()}
F {virtual testing::internal::GoogleTestFailureException::~GoogleTestFailureException()} {../third-party/gtest/include/gtest/internal/gtest-internal.h:148}
C {virtual testing::internal::GoogleTestFailureException::~GoogleTestFailureException()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual testing::internal::GoogleTestFailureException::~GoogleTestFailureException()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GoogleTestFailureException::~GoogleTestFailureException()}
F {testing::Environment* testing::UnitTest::AddEnvironment(testing::Environment*)} {../third-party/gtest/src/gtest.cc:3764}
C {testing::Environment* testing::UnitTest::AddEnvironment(testing::Environment*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::value_type = testing::Environment*]}
C {testing::Environment* testing::UnitTest::AddEnvironment(testing::Environment*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<testing::Environment*>& testing::internal::UnitTestImpl::environments()}
F {std::vector<testing::Environment*>& testing::internal::UnitTestImpl::environments()} {../third-party/gtest/src/gtest-internal-inl.h:748}
F {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::value_type = testing::Environment*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:826}
C {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::value_type = testing::Environment*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]}
C {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::value_type = testing::Environment*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]}
C {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::value_type = testing::Environment*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::Environment*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::Environment**]}
F {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::Environment*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::Environment**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:107}
C {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::Environment*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t, void*)}
F {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/vector.tcc:300}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_rethrow()}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::Environment**, std::size_t = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::Environment**, _Tp = testing::Environment*]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::Environment*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::destroy(__gnu_cxx::new_allocator<_Tp>::pointer) [with _Tp = testing::Environment*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::Environment**]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_begin_catch(void*)}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_eh_pointer(int)}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::Environment**, std::size_t = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::Environment**, _Tp = testing::Environment*]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::Environment*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = testing::Environment**, _ForwardIterator = testing::Environment**, _Allocator = std::allocator<testing::Environment*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::Environment**, _Container = std::vector<testing::Environment*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::Environment*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = testing::Environment**, _ForwardIterator = testing::Environment**, _Allocator = std::allocator<testing::Environment*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::Environment**, _Container = std::vector<testing::Environment*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::Environment*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::Environment*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::Environment**]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename _Alloc::rebind<_Tp>::other::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::Environment**, std::size_t = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::Environment**, _Container = std::vector<testing::Environment*>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::Environment**, _Container = std::vector<testing::Environment*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::Environment*&]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::Environment**, _BI2 = testing::Environment**]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::Environment**, _Container = std::vector<testing::Environment*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::Environment**, std::vector<testing::Environment*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::Environment*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::Environment**]}
F {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::Environment**, _BI2 = testing::Environment**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:613}
C {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::Environment**, _BI2 = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::Environment**, _BI2 = testing::Environment**]}
C {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::Environment**, _BI2 = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::Environment**, typename std::_Miter_base<_Iterator>::iterator_type = testing::Environment**]}
C {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::Environment**, _BI2 = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::Environment**, typename std::_Miter_base<_Iterator>::iterator_type = testing::Environment**]}
F {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::Environment**, typename std::_Miter_base<_Iterator>::iterator_type = testing::Environment**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:282}
C {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::Environment**, typename std::_Miter_base<_Iterator>::iterator_type = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = testing::Environment**, bool _HasBase = false, std::_Iter_base<_Iterator, _HasBase>::iterator_type = testing::Environment**]}
F {static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = testing::Environment**, bool _HasBase = false, std::_Iter_base<_Iterator, _HasBase>::iterator_type = testing::Environment**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator_base_types.h:213}
F {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::Environment**, _BI2 = testing::Environment**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:586}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::Environment**, _BI2 = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::Environment**, _BI2 = testing::Environment**]}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::Environment**, _BI2 = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::Environment**, typename std::_Niter_base<_Iterator>::iterator_type = testing::Environment**]}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::Environment**, _BI2 = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::Environment**, typename std::_Niter_base<_Iterator>::iterator_type = testing::Environment**]}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::Environment**, _BI2 = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::Environment**, typename std::_Niter_base<_Iterator>::iterator_type = testing::Environment**]}
F {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::Environment**, typename std::_Niter_base<_Iterator>::iterator_type = testing::Environment**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:271}
C {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::Environment**, typename std::_Niter_base<_Iterator>::iterator_type = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = testing::Environment**, bool _HasBase = false, std::_Iter_base<_Iterator, _HasBase>::iterator_type = testing::Environment**]}
F {_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::Environment**, _BI2 = testing::Environment**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:568}
C {_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::Environment**, _BI2 = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _Tp* std::__copy_move_backward<_IsMove, true, std::random_access_iterator_tag>::__copy_move_b(const _Tp*, const _Tp*, _Tp*) [with _Tp = testing::Environment*, bool _IsMove = false]}
F {static _Tp* std::__copy_move_backward<_IsMove, true, std::random_access_iterator_tag>::__copy_move_b(const _Tp*, const _Tp*, _Tp*) [with _Tp = testing::Environment*, bool _IsMove = false]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:557}
C {static _Tp* std::__copy_move_backward<_IsMove, true, std::random_access_iterator_tag>::__copy_move_b(const _Tp*, const _Tp*, _Tp*) [with _Tp = testing::Environment*, bool _IsMove = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_memmove(void*, const void*, long unsigned int)}
F {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:1239}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::__throw_length_error(const char*)}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:570}
F {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:575}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = testing::Environment*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::Environment*>]}
F {const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::Environment*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:99}
F {__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = testing::Environment*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:101}
F {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::Environment**, _Container = std::vector<testing::Environment*>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:890}
C {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::Environment**, _Container = std::vector<testing::Environment*>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::Environment**, _Container = std::vector<testing::Environment*>]}
C {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::Environment**, _Container = std::vector<testing::Environment*>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::Environment**, _Container = std::vector<testing::Environment*>]}
F {typename _Alloc::rebind<_Tp>::other::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::Environment**, std::size_t = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:149}
C {typename _Alloc::rebind<_Tp>::other::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = testing::Environment*, _Alloc = std::allocator<testing::Environment*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::Environment**, std::size_t = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::Environment*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::Environment**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::Environment*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::Environment**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:87}
C {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::Environment*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::Environment**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::Environment*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::Environment**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::__throw_bad_alloc()}
C {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::Environment*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::Environment**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = testing::Environment*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = testing::Environment**, _ForwardIterator = testing::Environment**, _Allocator = std::allocator<testing::Environment*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:264}
C {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = testing::Environment**, _ForwardIterator = testing::Environment**, _Allocator = std::allocator<testing::Environment*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = testing::Environment**, _ForwardIterator = testing::Environment**, _Tp = testing::Environment*]}
F {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = testing::Environment**, _ForwardIterator = testing::Environment**, _Tp = testing::Environment*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:257}
C {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = testing::Environment**, _ForwardIterator = testing::Environment**, _Tp = testing::Environment*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::Environment**, _ForwardIterator = testing::Environment**]}
F {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::Environment**, _ForwardIterator = testing::Environment**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:109}
C {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::Environment**, _ForwardIterator = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _ForwardIterator std::__uninitialized_copy<true>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::Environment**, _ForwardIterator = testing::Environment**]}
F {static _ForwardIterator std::__uninitialized_copy<true>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::Environment**, _ForwardIterator = testing::Environment**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:93}
C {static _ForwardIterator std::__uninitialized_copy<true>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::Environment**, _ForwardIterator = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_OI std::copy(_II, _II, _OI) [with _II = testing::Environment**, _OI = testing::Environment**]}
F {_OI std::copy(_II, _II, _OI) [with _II = testing::Environment**, _OI = testing::Environment**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:444}
C {_OI std::copy(_II, _II, _OI) [with _II = testing::Environment**, _OI = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = testing::Environment**, _OI = testing::Environment**]}
C {_OI std::copy(_II, _II, _OI) [with _II = testing::Environment**, _OI = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::Environment**, typename std::_Miter_base<_Iterator>::iterator_type = testing::Environment**]}
C {_OI std::copy(_II, _II, _OI) [with _II = testing::Environment**, _OI = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::Environment**, typename std::_Miter_base<_Iterator>::iterator_type = testing::Environment**]}
F {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = testing::Environment**, _OI = testing::Environment**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:418}
C {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = testing::Environment**, _OI = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false, _II = testing::Environment**, _OI = testing::Environment**]}
C {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = testing::Environment**, _OI = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::Environment**, typename std::_Niter_base<_Iterator>::iterator_type = testing::Environment**]}
C {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = testing::Environment**, _OI = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::Environment**, typename std::_Niter_base<_Iterator>::iterator_type = testing::Environment**]}
C {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = testing::Environment**, _OI = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::Environment**, typename std::_Niter_base<_Iterator>::iterator_type = testing::Environment**]}
F {_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false, _II = testing::Environment**, _OI = testing::Environment**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:373}
C {_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false, _II = testing::Environment**, _OI = testing::Environment**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = testing::Environment*, bool _IsMove = false]}
F {static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = testing::Environment*, bool _IsMove = false]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:362}
C {static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = testing::Environment*, bool _IsMove = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_memmove(void*, const void*, long unsigned int)}
F {void __gnu_cxx::new_allocator<_Tp>::destroy(__gnu_cxx::new_allocator<_Tp>::pointer) [with _Tp = testing::Environment*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::Environment**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:118}
F {testing::TestEventListeners& testing::UnitTest::listeners()} {../third-party/gtest/src/gtest.cc:3750}
C {testing::TestEventListeners& testing::UnitTest::listeners()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestEventListeners* testing::internal::UnitTestImpl::listeners()}
C {testing::TestEventListeners& testing::UnitTest::listeners()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UnitTestImpl* testing::UnitTest::impl()}
F {testing::TestCase* testing::UnitTest::GetMutableTestCase(int)} {../third-party/gtest/src/gtest.cc:3744}
C {testing::TestCase* testing::UnitTest::GetMutableTestCase(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestCase* testing::internal::UnitTestImpl::GetMutableTestCase(int)}
C {testing::TestCase* testing::UnitTest::GetMutableTestCase(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UnitTestImpl* testing::UnitTest::impl()}
F {const testing::TestResult& testing::UnitTest::ad_hoc_test_result() const} {../third-party/gtest/src/gtest.cc:3738}
C {const testing::TestResult& testing::UnitTest::ad_hoc_test_result() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::TestResult* testing::internal::UnitTestImpl::ad_hoc_test_result() const}
C {const testing::TestResult& testing::UnitTest::ad_hoc_test_result() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::internal::UnitTestImpl* testing::UnitTest::impl() const}
F {const testing::internal::UnitTestImpl* testing::UnitTest::impl() const} {../third-party/gtest/include/gtest/gtest.h:1256}
F {const testing::TestCase* testing::UnitTest::GetTestCase(int) const} {../third-party/gtest/src/gtest.cc:3732}
C {const testing::TestCase* testing::UnitTest::GetTestCase(int) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(int) const}
C {const testing::TestCase* testing::UnitTest::GetTestCase(int) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::internal::UnitTestImpl* testing::UnitTest::impl() const}
F {const testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(int) const} {../third-party/gtest/src/gtest-internal-inl.h:586}
C {const testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(int) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::const_reference = testing::TestCase* const&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {const testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(int) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {E testing::internal::GetElementOr(const std::vector<T>&, int, E) [with E = int]}
F {std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::const_reference = testing::TestCase* const&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:710}
F {bool testing::UnitTest::Failed() const} {../third-party/gtest/src/gtest.cc:3728}
C {bool testing::UnitTest::Failed() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::UnitTestImpl::Failed() const}
C {bool testing::UnitTest::Failed() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::internal::UnitTestImpl* testing::UnitTest::impl() const}
F {bool testing::UnitTest::Passed() const} {../third-party/gtest/src/gtest.cc:3724}
C {bool testing::UnitTest::Passed() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::UnitTestImpl::Passed() const}
C {bool testing::UnitTest::Passed() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::internal::UnitTestImpl* testing::UnitTest::impl() const}
F {testing::internal::TimeInMillis testing::UnitTest::elapsed_time() const} {../third-party/gtest/src/gtest.cc:3719}
C {testing::internal::TimeInMillis testing::UnitTest::elapsed_time() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TimeInMillis testing::internal::UnitTestImpl::elapsed_time() const}
C {testing::internal::TimeInMillis testing::UnitTest::elapsed_time() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::internal::UnitTestImpl* testing::UnitTest::impl() const}
F {testing::internal::TimeInMillis testing::internal::UnitTestImpl::elapsed_time() const} {../third-party/gtest/src/gtest-internal-inl.h:573}
F {testing::internal::TimeInMillis testing::UnitTest::start_timestamp() const} {../third-party/gtest/src/gtest.cc:3714}
C {testing::internal::TimeInMillis testing::UnitTest::start_timestamp() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TimeInMillis testing::internal::UnitTestImpl::start_timestamp() const}
C {testing::internal::TimeInMillis testing::UnitTest::start_timestamp() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::internal::UnitTestImpl* testing::UnitTest::impl() const}
F {testing::internal::TimeInMillis testing::internal::UnitTestImpl::start_timestamp() const} {../third-party/gtest/src/gtest-internal-inl.h:570}
F {int testing::UnitTest::test_to_run_count() const} {../third-party/gtest/src/gtest.cc:3710}
C {int testing::UnitTest::test_to_run_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::UnitTestImpl::test_to_run_count() const}
C {int testing::UnitTest::test_to_run_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::internal::UnitTestImpl* testing::UnitTest::impl() const}
F {int testing::UnitTest::total_test_count() const} {../third-party/gtest/src/gtest.cc:3707}
C {int testing::UnitTest::total_test_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::UnitTestImpl::total_test_count() const}
C {int testing::UnitTest::total_test_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::internal::UnitTestImpl* testing::UnitTest::impl() const}
F {int testing::UnitTest::reportable_test_count() const} {../third-party/gtest/src/gtest.cc:3702}
C {int testing::UnitTest::reportable_test_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::UnitTestImpl::reportable_test_count() const}
C {int testing::UnitTest::reportable_test_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::internal::UnitTestImpl* testing::UnitTest::impl() const}
F {int testing::UnitTest::disabled_test_count() const} {../third-party/gtest/src/gtest.cc:3697}
C {int testing::UnitTest::disabled_test_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::UnitTestImpl::disabled_test_count() const}
C {int testing::UnitTest::disabled_test_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::internal::UnitTestImpl* testing::UnitTest::impl() const}
F {int testing::UnitTest::reportable_disabled_test_count() const} {../third-party/gtest/src/gtest.cc:3692}
C {int testing::UnitTest::reportable_disabled_test_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::UnitTestImpl::reportable_disabled_test_count() const}
C {int testing::UnitTest::reportable_disabled_test_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::internal::UnitTestImpl* testing::UnitTest::impl() const}
F {int testing::UnitTest::failed_test_count() const} {../third-party/gtest/src/gtest.cc:3689}
C {int testing::UnitTest::failed_test_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::UnitTestImpl::failed_test_count() const}
C {int testing::UnitTest::failed_test_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::internal::UnitTestImpl* testing::UnitTest::impl() const}
F {int testing::UnitTest::successful_test_count() const} {../third-party/gtest/src/gtest.cc:3684}
C {int testing::UnitTest::successful_test_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::UnitTestImpl::successful_test_count() const}
C {int testing::UnitTest::successful_test_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::internal::UnitTestImpl* testing::UnitTest::impl() const}
F {int testing::UnitTest::test_case_to_run_count() const} {../third-party/gtest/src/gtest.cc:3679}
C {int testing::UnitTest::test_case_to_run_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::UnitTestImpl::test_case_to_run_count() const}
C {int testing::UnitTest::test_case_to_run_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::internal::UnitTestImpl* testing::UnitTest::impl() const}
F {int testing::UnitTest::total_test_case_count() const} {../third-party/gtest/src/gtest.cc:3673}
C {int testing::UnitTest::total_test_case_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::UnitTestImpl::total_test_case_count() const}
C {int testing::UnitTest::total_test_case_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::internal::UnitTestImpl* testing::UnitTest::impl() const}
F {int testing::UnitTest::failed_test_case_count() const} {../third-party/gtest/src/gtest.cc:3668}
C {int testing::UnitTest::failed_test_case_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::UnitTestImpl::failed_test_case_count() const}
C {int testing::UnitTest::failed_test_case_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::internal::UnitTestImpl* testing::UnitTest::impl() const}
F {int testing::UnitTest::successful_test_case_count() const} {../third-party/gtest/src/gtest.cc:3663}
C {int testing::UnitTest::successful_test_case_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::UnitTestImpl::successful_test_case_count() const}
C {int testing::UnitTest::successful_test_case_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::internal::UnitTestImpl* testing::UnitTest::impl() const}
F {static testing::UnitTest* testing::UnitTest::GetInstance()} {../third-party/gtest/src/gtest.cc:3641}
C {static testing::UnitTest* testing::UnitTest::GetInstance()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_guard_abort(long long int*)}
C {static testing::UnitTest* testing::UnitTest::GetInstance()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __cxa_atexit(void (*)(void*), void*, void*)}
C {static testing::UnitTest* testing::UnitTest::GetInstance()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_guard_release(long long int*)}
C {static testing::UnitTest* testing::UnitTest::GetInstance()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::UnitTest::UnitTest()}
C {static testing::UnitTest* testing::UnitTest::GetInstance()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __cxa_guard_acquire(long long int*)}
F {void testing::TestEventListeners::SuppressEventForwarding()} {../third-party/gtest/src/gtest.cc:3628}
C {void testing::TestEventListeners::SuppressEventForwarding()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::TestEventRepeater::set_forwarding_enabled(bool)}
F {void testing::internal::TestEventRepeater::set_forwarding_enabled(bool)} {../third-party/gtest/src/gtest.cc:2909}
F {bool testing::TestEventListeners::EventForwardingEnabled() const} {../third-party/gtest/src/gtest.cc:3624}
C {bool testing::TestEventListeners::EventForwardingEnabled() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::TestEventRepeater::forwarding_enabled() const}
F {bool testing::internal::TestEventRepeater::forwarding_enabled() const} {../third-party/gtest/src/gtest.cc:2908}
F {void testing::TestEventListeners::SetDefaultXmlGenerator(testing::TestEventListener*)} {../third-party/gtest/src/gtest.cc:3611}
C {void testing::TestEventListeners::SetDefaultXmlGenerator(testing::TestEventListener*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::TestEventListeners::Append(testing::TestEventListener*)}
C {void testing::TestEventListeners::SetDefaultXmlGenerator(testing::TestEventListener*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestEventListener* testing::TestEventListeners::Release(testing::TestEventListener*)}
F {void testing::TestEventListeners::SetDefaultResultPrinter(testing::TestEventListener*)} {../third-party/gtest/src/gtest.cc:3595}
C {void testing::TestEventListeners::SetDefaultResultPrinter(testing::TestEventListener*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::TestEventListeners::Append(testing::TestEventListener*)}
C {void testing::TestEventListeners::SetDefaultResultPrinter(testing::TestEventListener*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestEventListener* testing::TestEventListeners::Release(testing::TestEventListener*)}
F {testing::TestEventListener* testing::TestEventListeners::repeater()} {../third-party/gtest/src/gtest.cc:3588}
F {testing::TestEventListener* testing::TestEventListeners::Release(testing::TestEventListener*)} {../third-party/gtest/src/gtest.cc:3578}
C {testing::TestEventListener* testing::TestEventListeners::Release(testing::TestEventListener*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestEventListener* testing::internal::TestEventRepeater::Release(testing::TestEventListener*)}
F {void testing::TestEventListeners::Append(testing::TestEventListener*)} {../third-party/gtest/src/gtest.cc:3571}
C {void testing::TestEventListeners::Append(testing::TestEventListener*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::TestEventRepeater::Append(testing::TestEventListener*)}
F {testing::TestEventListeners::~TestEventListeners()} {../third-party/gtest/src/gtest.cc:3565}
F {testing::TestEventListeners::TestEventListeners()} {../third-party/gtest/src/gtest.cc:3559}
C {testing::TestEventListeners::TestEventListeners()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::TestEventListeners::TestEventListeners()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TestEventRepeater::TestEventRepeater()}
C {testing::TestEventListeners::TestEventListeners()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
F {testing::internal::TestEventRepeater::TestEventRepeater()} {../third-party/gtest/src/gtest.cc:2901}
C {testing::internal::TestEventRepeater::TestEventRepeater()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestEventListener::~TestEventListener()}
C {testing::internal::TestEventRepeater::TestEventRepeater()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::vector() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>]}
C {testing::internal::TestEventRepeater::TestEventRepeater()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestEventListener::TestEventListener()}
F {std::vector<_Tp, _Alloc>::vector() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:217}
C {std::vector<_Tp, _Alloc>::vector() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>]}
F {std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:106}
C {std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>]}
F {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:82}
C {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = testing::TestEventListener*]}
F {std::allocator<_Alloc>::allocator() [with _Tp = testing::TestEventListener*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:107}
C {std::allocator<_Alloc>::allocator() [with _Tp = testing::TestEventListener*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = testing::TestEventListener*]}
F {__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = testing::TestEventListener*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:69}
F {virtual void testing::internal::OsStackTraceGetter::UponLeavingGTest()} {../third-party/gtest/src/gtest.cc:3518}
F {virtual testing::internal::string testing::internal::OsStackTraceGetter::CurrentStackTrace(int, int)} {../third-party/gtest/src/gtest.cc:3512}
C {virtual testing::internal::string testing::internal::OsStackTraceGetter::CurrentStackTrace(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual testing::internal::string testing::internal::OsStackTraceGetter::CurrentStackTrace(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual testing::internal::string testing::internal::OsStackTraceGetter::CurrentStackTrace(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual testing::internal::string testing::internal::OsStackTraceGetter::CurrentStackTrace(int, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
F {testing::internal::ScopedTrace::~ScopedTrace()} {../third-party/gtest/src/gtest.cc:3497}
C {testing::internal::ScopedTrace::~ScopedTrace()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::UnitTest::PopGTestTrace()}
C {testing::internal::ScopedTrace::~ScopedTrace()} {../third-party/gtest/src/gtest-typed-test.cc:110} {static testing::UnitTest* testing::UnitTest::GetInstance()}
F {testing::internal::ScopedTrace::ScopedTrace(const char*, int, const testing::Message&)} {../third-party/gtest/src/gtest.cc:3486}
C {testing::internal::ScopedTrace::ScopedTrace(const char*, int, const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TraceInfo::~TraceInfo()}
C {testing::internal::ScopedTrace::ScopedTrace(const char*, int, const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::ScopedTrace::ScopedTrace(const char*, int, const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TraceInfo::~TraceInfo()}
C {testing::internal::ScopedTrace::ScopedTrace(const char*, int, const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::UnitTest::PushGTestTrace(const testing::internal::TraceInfo&)}
C {testing::internal::ScopedTrace::ScopedTrace(const char*, int, const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static testing::UnitTest* testing::UnitTest::GetInstance()}
C {testing::internal::ScopedTrace::ScopedTrace(const char*, int, const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::ScopedTrace::ScopedTrace(const char*, int, const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {testing::internal::ScopedTrace::ScopedTrace(const char*, int, const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::Message::GetString() const}
C {testing::internal::ScopedTrace::ScopedTrace(const char*, int, const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TraceInfo::TraceInfo()}
F {testing::internal::TraceInfo::TraceInfo()} {../third-party/gtest/src/gtest-internal-inl.h:466}
C {testing::internal::TraceInfo::TraceInfo()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {void testing::internal::StreamingListener::SocketWriter::MakeConnection()} {../third-party/gtest/src/gtest.cc:3438}
C {void testing::internal::StreamingListener::SocketWriter::MakeConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {void testing::internal::StreamingListener::SocketWriter::MakeConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {void testing::internal::StreamingListener::SocketWriter::MakeConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {void testing::internal::StreamingListener::SocketWriter::MakeConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {void testing::internal::StreamingListener::SocketWriter::MakeConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::StreamingListener::SocketWriter::MakeConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::StreamingListener::SocketWriter::MakeConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::StreamingListener::SocketWriter::MakeConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::StreamingListener::SocketWriter::MakeConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {void testing::internal::StreamingListener::SocketWriter::MakeConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {void testing::internal::StreamingListener::SocketWriter::MakeConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void freeaddrinfo(addrinfo*)}
C {void testing::internal::StreamingListener::SocketWriter::MakeConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int close(int)}
C {void testing::internal::StreamingListener::SocketWriter::MakeConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int connect(int, const sockaddr*, socklen_t)}
C {void testing::internal::StreamingListener::SocketWriter::MakeConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int socket(int, int, int)}
C {void testing::internal::StreamingListener::SocketWriter::MakeConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {void testing::internal::StreamingListener::SocketWriter::MakeConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::StreamingListener::SocketWriter::MakeConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::StreamingListener::SocketWriter::MakeConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {void testing::internal::StreamingListener::SocketWriter::MakeConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {void testing::internal::StreamingListener::SocketWriter::MakeConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* gai_strerror(int)}
C {void testing::internal::StreamingListener::SocketWriter::MakeConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int getaddrinfo(const char*, const char*, const addrinfo*, addrinfo**)}
C {void testing::internal::StreamingListener::SocketWriter::MakeConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::StreamingListener::SocketWriter::MakeConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::StreamingListener::SocketWriter::MakeConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* memset(void*, int, size_t)}
C {void testing::internal::StreamingListener::SocketWriter::MakeConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {void testing::internal::StreamingListener::SocketWriter::MakeConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::StreamingListener::SocketWriter::MakeConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::StreamingListener::SocketWriter::MakeConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {void testing::internal::StreamingListener::SocketWriter::MakeConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {void testing::internal::StreamingListener::SocketWriter::MakeConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsTrue(bool)}
F {static testing::internal::string testing::internal::StreamingListener::UrlEncode(const char*)} {../third-party/gtest/src/gtest.cc:3419}
C {static testing::internal::string testing::internal::StreamingListener::UrlEncode(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::string testing::internal::StreamingListener::UrlEncode(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::string testing::internal::StreamingListener::UrlEncode(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::string testing::internal::StreamingListener::UrlEncode(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::basic_string<_CharT, _Traits, _Alloc>::push_back(_CharT) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::string testing::internal::StreamingListener::UrlEncode(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::string testing::internal::StreamingListener::UrlEncode(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::string testing::internal::StreamingListener::UrlEncode(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::append(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {static testing::internal::string testing::internal::StreamingListener::UrlEncode(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static testing::internal::string testing::internal::StreamingListener::UrlEncode(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::string testing::internal::String::FormatByte(unsigned char)}
C {static testing::internal::string testing::internal::StreamingListener::UrlEncode(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::basic_string<_CharT, _Traits, _Alloc>::reserve(std::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {static testing::internal::string testing::internal::StreamingListener::UrlEncode(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {size_t strlen(const char*)}
C {static testing::internal::string testing::internal::StreamingListener::UrlEncode(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {void std::basic_string<_CharT, _Traits, _Alloc>::push_back(_CharT) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:1043}
C {void std::basic_string<_CharT, _Traits, _Alloc>::push_back(_CharT) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_set_length_and_sharable(std::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {void std::basic_string<_CharT, _Traits, _Alloc>::push_back(_CharT) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::_Rep* std::basic_string<_CharT, _Traits, _Alloc>::_M_rep() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void std::basic_string<_CharT, _Traits, _Alloc>::push_back(_CharT) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void std::char_traits<char>::assign(std::char_traits<char>::char_type&, const char_type&)}
C {void std::basic_string<_CharT, _Traits, _Alloc>::push_back(_CharT) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {void std::basic_string<_CharT, _Traits, _Alloc>::push_back(_CharT) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_CharT* std::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void std::basic_string<_CharT, _Traits, _Alloc>::push_back(_CharT) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::basic_string<_CharT, _Traits, _Alloc>::reserve(std::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {void std::basic_string<_CharT, _Traits, _Alloc>::push_back(_CharT) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_is_shared() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void std::basic_string<_CharT, _Traits, _Alloc>::push_back(_CharT) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::_Rep* std::basic_string<_CharT, _Traits, _Alloc>::_M_rep() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void std::basic_string<_CharT, _Traits, _Alloc>::push_back(_CharT) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::capacity() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {void std::basic_string<_CharT, _Traits, _Alloc>::push_back(_CharT) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
F {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::capacity() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:768}
C {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::capacity() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::_Rep* std::basic_string<_CharT, _Traits, _Alloc>::_M_rep() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {bool std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_is_shared() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:190}
F {static std::string testing::internal::XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes(const testing::TestResult&)} {../third-party/gtest/src/gtest.cc:3399}
C {static std::string testing::internal::XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes(const testing::TestResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {static std::string testing::internal::XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes(const testing::TestResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes(const testing::TestResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes(const testing::TestResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes(const testing::TestResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {static std::string testing::internal::XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes(const testing::TestResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::Message::GetString() const}
C {static std::string testing::internal::XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes(const testing::TestResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::TestResult::test_property_count() const}
C {static std::string testing::internal::XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes(const testing::TestResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes(const testing::TestResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes(const testing::TestResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes(const testing::TestResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [2], testing::Message = testing::Message]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes(const testing::TestResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = std::basic_string<char>, testing::Message = testing::Message]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes(const testing::TestResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [2], testing::Message = testing::Message]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes(const testing::TestResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [2], testing::Message = testing::Message]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes(const testing::TestResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes(const testing::TestResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [2], testing::Message = testing::Message]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes(const testing::TestResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestProperty::key() const}
C {static std::string testing::internal::XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes(const testing::TestResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::string testing::internal::XmlUnitTestResultPrinter::EscapeXmlAttribute(const string&)}
C {static std::string testing::internal::XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes(const testing::TestResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes(const testing::TestResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestProperty::value() const}
C {static std::string testing::internal::XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes(const testing::TestResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes(const testing::TestResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::TestProperty& testing::TestResult::GetTestProperty(int) const}
C {static std::string testing::internal::XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes(const testing::TestResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {const char* testing::TestProperty::value() const} {../third-party/gtest/include/gtest/gtest.h:478}
C {const char* testing::TestProperty::value() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {static std::string testing::internal::XmlUnitTestResultPrinter::EscapeXmlAttribute(const string&)} {../third-party/gtest/src/gtest.cc:3040}
C {static std::string testing::internal::XmlUnitTestResultPrinter::EscapeXmlAttribute(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::string testing::internal::XmlUnitTestResultPrinter::EscapeXml(const string&, bool)}
F {const char* testing::TestProperty::key() const} {../third-party/gtest/include/gtest/gtest.h:473}
C {const char* testing::TestProperty::key() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest.cc:3359}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::UnitTest::total_test_case_count() const}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::TestCase* testing::UnitTest::GetTestCase(int) const}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::TestCase::reportable_test_count() const}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::TestCase* testing::UnitTest::GetTestCase(int) const}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::string testing::internal::XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes(const testing::TestResult&)}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::TestResult& testing::UnitTest::ad_hoc_test_result() const}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::UnitTest::random_seed() const}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatTimeInMillisAsSeconds(testing::internal::TimeInMillis)}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TimeInMillis testing::UnitTest::elapsed_time() const}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TimeInMillis testing::UnitTest::start_timestamp() const}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::UnitTest::reportable_disabled_test_count() const}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::UnitTest::failed_test_count() const}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::UnitTest::reportable_test_count() const}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
F {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest.cc:3333}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::TestCase::total_test_count() const}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestCase::name() const}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::TestInfo* testing::TestCase::GetTestInfo(int) const}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::TestInfo::is_reportable() const}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::TestInfo* testing::TestCase::GetTestInfo(int) const}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::string testing::internal::XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes(const testing::TestResult&)}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::TestResult& testing::TestCase::ad_hoc_test_result() const}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatTimeInMillisAsSeconds(testing::internal::TimeInMillis)}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TimeInMillis testing::TestCase::elapsed_time() const}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::TestCase::reportable_disabled_test_count() const}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::TestCase::failed_test_count() const}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::TestCase::reportable_test_count() const}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestCase::name() const}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase(std::ostream*, const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
F {testing::TimeInMillis testing::TestCase::elapsed_time() const} {../third-party/gtest/include/gtest/gtest.h:809}
F {const testing::TestResult& testing::TestCase::ad_hoc_test_result() const} {../third-party/gtest/include/gtest/gtest.h:817}
F {bool testing::TestInfo::is_reportable() const} {../third-party/gtest/include/gtest/gtest.h:668}
F {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest.cc:3283}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::TestResult::total_part_count() const}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlCDataSection(std::ostream*, const char*)}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::string testing::internal::XmlUnitTestResultPrinter::RemoveInvalidXmlCharacters(const string&)}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestPartResult::message() const}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::string testing::internal::XmlUnitTestResultPrinter::EscapeXmlAttribute(const string&)}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestPartResult::summary() const}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatCompilerIndependentFileLocation(const char*, int)}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestPartResult::file_name() const}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::TestPartResult::line_number() const}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::TestPartResult::failed() const}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::TestPartResult& testing::TestResult::GetTestPartResult(int) const}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::string testing::internal::XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes(const testing::TestResult&)}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatTimeInMillisAsSeconds(testing::internal::TimeInMillis)}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TimeInMillis testing::TestResult::elapsed_time() const}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::TestInfo::should_run() const}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestInfo::type_param() const}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestInfo::type_param() const}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestInfo::value_param() const}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestInfo::value_param() const}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestInfo::name() const}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo(std::ostream*, const char*, const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::TestResult* testing::TestInfo::result() const}
F {const char* testing::TestInfo::type_param() const} {../third-party/gtest/include/gtest/gtest.h:635}
C {const char* testing::TestInfo::type_param() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::TestInfo::type_param() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {T* testing::internal::scoped_ptr<T>::operator->() const [with T = const std::basic_string<char>]}
C {const char* testing::TestInfo::type_param() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {T* testing::internal::scoped_ptr<T>::get() const [with T = const std::basic_string<char>]}
F {bool testing::TestInfo::should_run() const} {../third-party/gtest/include/gtest/gtest.h:665}
F {testing::TimeInMillis testing::TestResult::elapsed_time() const} {../third-party/gtest/include/gtest/gtest.h:528}
F {bool testing::TestPartResult::failed() const} {../third-party/gtest/include/gtest/gtest-test-part.h:94}
F {const char* testing::TestPartResult::summary() const} {../third-party/gtest/include/gtest/gtest-test-part.h:85}
C {const char* testing::TestPartResult::summary() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)} {../third-party/gtest/src/gtest.cc:3265}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::string testing::internal::XmlUnitTestResultPrinter::EscapeXmlAttribute(const string&)}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsTrue(bool)}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {_IIter std::find(_IIter, _IIter, const _Tp&) [with _IIter = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _Tp = std::basic_string<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = const std::basic_string<char>*]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = const std::basic_string<char>*]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = const std::basic_string<char>*]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlAttribute(std::ostream*, const string&, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<std::basic_string<char> > testing::GetReservedAttributesForElement(const string&)}
F {std::vector<std::basic_string<char> > testing::GetReservedAttributesForElement(const string&)} {../third-party/gtest/src/gtest.cc:1789}
C {std::vector<std::basic_string<char> > testing::GetReservedAttributesForElement(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {std::vector<std::basic_string<char> > testing::GetReservedAttributesForElement(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::vector() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]}
C {std::vector<std::basic_string<char> > testing::GetReservedAttributesForElement(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {std::vector<std::basic_string<char> > testing::GetReservedAttributesForElement(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::vector<std::basic_string<char> > testing::GetReservedAttributesForElement(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {std::vector<std::basic_string<char> > testing::GetReservedAttributesForElement(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {std::vector<std::basic_string<char> > testing::GetReservedAttributesForElement(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {std::vector<std::basic_string<char> > testing::GetReservedAttributesForElement(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {std::vector<std::basic_string<char> > testing::GetReservedAttributesForElement(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsTrue(bool)}
C {std::vector<std::basic_string<char> > testing::GetReservedAttributesForElement(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<std::basic_string<char> > testing::ArrayAsVector(const char* const (&)[kSize]) [with int kSize = 6]}
C {std::vector<std::basic_string<char> > testing::GetReservedAttributesForElement(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::vector<std::basic_string<char> > testing::GetReservedAttributesForElement(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<std::basic_string<char> > testing::ArrayAsVector(const char* const (&)[kSize]) [with int kSize = 6]}
C {std::vector<std::basic_string<char> > testing::GetReservedAttributesForElement(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::vector<std::basic_string<char> > testing::GetReservedAttributesForElement(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<std::basic_string<char> > testing::ArrayAsVector(const char* const (&)[kSize]) [with int kSize = 8]}
C {std::vector<std::basic_string<char> > testing::GetReservedAttributesForElement(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::operator==(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {std::vector<std::basic_string<char> > testing::ArrayAsVector(const char* const (&)[kSize]) [with int kSize = 8]} {../third-party/gtest/src/gtest.cc:1785}
C {std::vector<std::basic_string<char> > testing::ArrayAsVector(const char* const (&)[kSize]) [with int kSize = 8]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = std::basic_string<char>]}
C {std::vector<std::basic_string<char> > testing::ArrayAsVector(const char* const (&)[kSize]) [with int kSize = 8]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = std::basic_string<char>]}
C {std::vector<std::basic_string<char> > testing::ArrayAsVector(const char* const (&)[kSize]) [with int kSize = 8]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = const char* const*, _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::basic_string<char> >]}
C {std::vector<std::basic_string<char> > testing::ArrayAsVector(const char* const (&)[kSize]) [with int kSize = 8]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = std::basic_string<char>]}
F {std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = const char* const*, _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:334}
C {std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = const char* const*, _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]}
C {std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = const char* const*, _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::_M_initialize_dispatch(_InputIterator, _InputIterator, std::__false_type) [with _InputIterator = const char* const*, _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]}
C {std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = const char* const*, _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Vector_base(const allocator_type&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::_Vector_base<_Tp, _Alloc>::allocator_type = std::allocator<std::basic_string<char> >]}
F {std::_Vector_base<_Tp, _Alloc>::_Vector_base(const allocator_type&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::_Vector_base<_Tp, _Alloc>::allocator_type = std::allocator<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:109}
C {std::_Vector_base<_Tp, _Alloc>::_Vector_base(const allocator_type&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::_Vector_base<_Tp, _Alloc>::allocator_type = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl(const _Tp_alloc_type&) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<std::basic_string<char> >]}
F {void std::vector<_Tp, _Alloc>::_M_initialize_dispatch(_InputIterator, _InputIterator, std::__false_type) [with _InputIterator = const char* const*, _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:1086}
C {void std::vector<_Tp, _Alloc>::_M_initialize_dispatch(_InputIterator, _InputIterator, std::__false_type) [with _InputIterator = const char* const*, _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::_M_range_initialize(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const char* const*, _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]}
F {void std::vector<_Tp, _Alloc>::_M_range_initialize(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const char* const*, _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:1107}
C {void std::vector<_Tp, _Alloc>::_M_range_initialize(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const char* const*, _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = const char* const*, _ForwardIterator = std::basic_string<char>*, _Tp = std::basic_string<char>]}
C {void std::vector<_Tp, _Alloc>::_M_range_initialize(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const char* const*, _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<std::basic_string<char> >]}
C {void std::vector<_Tp, _Alloc>::_M_range_initialize(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const char* const*, _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename _Alloc::rebind<_Tp>::other::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, typename _Alloc::rebind<_Tp>::other::pointer = std::basic_string<char>*, std::size_t = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_range_initialize(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const char* const*, _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const char* const*, typename std::iterator_traits<_Iterator>::difference_type = long int]}
F {typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const char* const*, typename std::iterator_traits<_Iterator>::difference_type = long int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator_base_funcs.h:113}
C {typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const char* const*, typename std::iterator_traits<_Iterator>::difference_type = long int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::iterator_traits<_Iterator>::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = const char* const*, typename std::iterator_traits<_Iterator>::difference_type = long int]}
C {typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const char* const*, typename std::iterator_traits<_Iterator>::difference_type = long int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::iterator_traits<_Iterator>::iterator_category std::__iterator_category(const _Iter&) [with _Iter = const char* const*, typename std::iterator_traits<_Iterator>::iterator_category = std::random_access_iterator_tag]}
F {typename std::iterator_traits<_Iterator>::iterator_category std::__iterator_category(const _Iter&) [with _Iter = const char* const*, typename std::iterator_traits<_Iterator>::iterator_category = std::random_access_iterator_tag]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator_base_types.h:202}
F {typename std::iterator_traits<_Iterator>::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = const char* const*, typename std::iterator_traits<_Iterator>::difference_type = long int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator_base_funcs.h:90}
F {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = const char* const*, _ForwardIterator = std::basic_string<char>*, _Tp = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:257}
C {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = const char* const*, _ForwardIterator = std::basic_string<char>*, _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const char* const*, _ForwardIterator = std::basic_string<char>*]}
F {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const char* const*, _ForwardIterator = std::basic_string<char>*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:109}
C {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const char* const*, _ForwardIterator = std::basic_string<char>*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const char* const*, _ForwardIterator = std::basic_string<char>*, bool _TrivialValueTypes = false]}
F {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const char* const*, _ForwardIterator = std::basic_string<char>*, bool _TrivialValueTypes = false]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:70}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const char* const*, _ForwardIterator = std::basic_string<char>*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_rethrow()}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const char* const*, _ForwardIterator = std::basic_string<char>*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = std::basic_string<char>*]}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const char* const*, _ForwardIterator = std::basic_string<char>*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_begin_catch(void*)}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const char* const*, _ForwardIterator = std::basic_string<char>*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_eh_pointer(int)}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const char* const*, _ForwardIterator = std::basic_string<char>*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const char* const*, _ForwardIterator = std::basic_string<char>*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Construct(_T1*, const _T2&) [with _T1 = std::basic_string<char>, _T2 = const char*]}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const char* const*, _ForwardIterator = std::basic_string<char>*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_Tp* std::__addressof(_Tp&) [with _Tp = std::basic_string<char>]}
F {void std::_Construct(_T1*, const _T2&) [with _T1 = std::basic_string<char>, _T2 = const char*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:80}
C {void std::_Construct(_T1*, const _T2&) [with _T1 = std::basic_string<char>, _T2 = const char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {void std::_Construct(_T1*, const _T2&) [with _T1 = std::basic_string<char>, _T2 = const char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*, void*)}
C {void std::_Construct(_T1*, const _T2&) [with _T1 = std::basic_string<char>, _T2 = const char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {void std::_Construct(_T1*, const _T2&) [with _T1 = std::basic_string<char>, _T2 = const char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void std::_Construct(_T1*, const _T2&) [with _T1 = std::basic_string<char>, _T2 = const char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t, void*)}
C {void std::_Construct(_T1*, const _T2&) [with _T1 = std::basic_string<char>, _T2 = const char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
F {std::vector<std::basic_string<char> > testing::ArrayAsVector(const char* const (&)[kSize]) [with int kSize = 6]} {../third-party/gtest/src/gtest.cc:1785}
C {std::vector<std::basic_string<char> > testing::ArrayAsVector(const char* const (&)[kSize]) [with int kSize = 6]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = std::basic_string<char>]}
C {std::vector<std::basic_string<char> > testing::ArrayAsVector(const char* const (&)[kSize]) [with int kSize = 6]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = std::basic_string<char>]}
C {std::vector<std::basic_string<char> > testing::ArrayAsVector(const char* const (&)[kSize]) [with int kSize = 6]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&) [with _InputIterator = const char* const*, _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::basic_string<char> >]}
C {std::vector<std::basic_string<char> > testing::ArrayAsVector(const char* const (&)[kSize]) [with int kSize = 6]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = std::basic_string<char>]}
F {_IIter std::find(_IIter, _IIter, const _Tp&) [with _IIter = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _Tp = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algo.h:4394}
C {_IIter std::find(_IIter, _IIter, const _Tp&) [with _IIter = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_RandomAccessIterator std::__find(_RandomAccessIterator, _RandomAccessIterator, const _Tp&, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _Tp = std::basic_string<char>]}
C {_IIter std::find(_IIter, _IIter, const _Tp&) [with _IIter = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::iterator_traits<_Iterator>::iterator_category std::__iterator_category(const _Iter&) [with _Iter = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::iterator_traits<_Iterator>::iterator_category = std::random_access_iterator_tag]}
F {typename std::iterator_traits<_Iterator>::iterator_category std::__iterator_category(const _Iter&) [with _Iter = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::iterator_traits<_Iterator>::iterator_category = std::random_access_iterator_tag]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator_base_types.h:202}
F {_RandomAccessIterator std::__find(_RandomAccessIterator, _RandomAccessIterator, const _Tp&, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _Tp = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algo.h:154}
C {_RandomAccessIterator std::__find(_RandomAccessIterator, _RandomAccessIterator, const _Tp&, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >]}
C {_RandomAccessIterator std::__find(_RandomAccessIterator, _RandomAccessIterator, const _Tp&, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::basic_string<_CharT>&, const std::basic_string<_CharT>&) [with _CharT = char, typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type = bool]}
C {_RandomAccessIterator std::__find(_RandomAccessIterator, _RandomAccessIterator, const _Tp&, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = const std::basic_string<char>&]}
C {_RandomAccessIterator std::__find(_RandomAccessIterator, _RandomAccessIterator, const _Tp&, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >]}
C {_RandomAccessIterator std::__find(_RandomAccessIterator, _RandomAccessIterator, const _Tp&, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::basic_string<_CharT>&, const std::basic_string<_CharT>&) [with _CharT = char, typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type = bool]}
C {_RandomAccessIterator std::__find(_RandomAccessIterator, _RandomAccessIterator, const _Tp&, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = const std::basic_string<char>&]}
C {_RandomAccessIterator std::__find(_RandomAccessIterator, _RandomAccessIterator, const _Tp&, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >]}
C {_RandomAccessIterator std::__find(_RandomAccessIterator, _RandomAccessIterator, const _Tp&, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::basic_string<_CharT>&, const std::basic_string<_CharT>&) [with _CharT = char, typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type = bool]}
C {_RandomAccessIterator std::__find(_RandomAccessIterator, _RandomAccessIterator, const _Tp&, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = const std::basic_string<char>&]}
C {_RandomAccessIterator std::__find(_RandomAccessIterator, _RandomAccessIterator, const _Tp&, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]}
C {_RandomAccessIterator std::__find(_RandomAccessIterator, _RandomAccessIterator, const _Tp&, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >]}
C {_RandomAccessIterator std::__find(_RandomAccessIterator, _RandomAccessIterator, const _Tp&, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::basic_string<_CharT>&, const std::basic_string<_CharT>&) [with _CharT = char, typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type = bool]}
C {_RandomAccessIterator std::__find(_RandomAccessIterator, _RandomAccessIterator, const _Tp&, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = const std::basic_string<char>&]}
C {_RandomAccessIterator std::__find(_RandomAccessIterator, _RandomAccessIterator, const _Tp&, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >]}
C {_RandomAccessIterator std::__find(_RandomAccessIterator, _RandomAccessIterator, const _Tp&, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::basic_string<_CharT>&, const std::basic_string<_CharT>&) [with _CharT = char, typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type = bool]}
C {_RandomAccessIterator std::__find(_RandomAccessIterator, _RandomAccessIterator, const _Tp&, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = const std::basic_string<char>&]}
C {_RandomAccessIterator std::__find(_RandomAccessIterator, _RandomAccessIterator, const _Tp&, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >]}
C {_RandomAccessIterator std::__find(_RandomAccessIterator, _RandomAccessIterator, const _Tp&, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::basic_string<_CharT>&, const std::basic_string<_CharT>&) [with _CharT = char, typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type = bool]}
C {_RandomAccessIterator std::__find(_RandomAccessIterator, _RandomAccessIterator, const _Tp&, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = const std::basic_string<char>&]}
C {_RandomAccessIterator std::__find(_RandomAccessIterator, _RandomAccessIterator, const _Tp&, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >]}
C {_RandomAccessIterator std::__find(_RandomAccessIterator, _RandomAccessIterator, const _Tp&, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::basic_string<_CharT>&, const std::basic_string<_CharT>&) [with _CharT = char, typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type = bool]}
C {_RandomAccessIterator std::__find(_RandomAccessIterator, _RandomAccessIterator, const _Tp&, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = const std::basic_string<char>&]}
C {_RandomAccessIterator std::__find(_RandomAccessIterator, _RandomAccessIterator, const _Tp&, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _Tp = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]}
F {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:890}
C {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >]}
C {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >]}
F {typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::basic_string<_CharT>&, const std::basic_string<_CharT>&) [with _CharT = char, typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type = bool]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:2434}
C {typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::basic_string<_CharT>&, const std::basic_string<_CharT>&) [with _CharT = char, typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static int std::char_traits<char>::compare(const char_type*, const char_type*, std::size_t)}
C {typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::basic_string<_CharT>&, const std::basic_string<_CharT>&) [with _CharT = char, typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::data() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::basic_string<_CharT>&, const std::basic_string<_CharT>&) [with _CharT = char, typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::data() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::basic_string<_CharT>&, const std::basic_string<_CharT>&) [with _CharT = char, typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::basic_string<_CharT>&, const std::basic_string<_CharT>&) [with _CharT = char, typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::basic_string<_CharT>&, const std::basic_string<_CharT>&) [with _CharT = char, typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type = bool]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
F {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlCDataSection(std::ostream*, const char*)} {../third-party/gtest/src/gtest.cc:3246}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlCDataSection(std::ostream*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlCDataSection(std::ostream*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlCDataSection(std::ostream*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlCDataSection(std::ostream*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::write(const _CharT*, std::streamsize) [with _CharT = char, _Traits = std::char_traits<char>, std::streamsize = long int]}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlCDataSection(std::ostream*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* strstr(const char*, const char*)}
C {static void testing::internal::XmlUnitTestResultPrinter::OutputXmlCDataSection(std::ostream*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
F {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest.cc:3221}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::string testing::internal::String::FormatIntWidth2(int)}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::string testing::internal::String::FormatIntWidth2(int)}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::string testing::internal::String::FormatIntWidth2(int)}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::string testing::internal::String::FormatIntWidth2(int)}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::string testing::internal::String::FormatIntWidth2(int)}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {std::string testing::internal::FormatEpochTimeInMillisAsIso8601(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {tm* localtime(const time_t*)}
F {std::string testing::internal::FormatTimeInMillisAsSeconds(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest.cc:3213}
C {std::string testing::internal::FormatTimeInMillisAsSeconds(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatTimeInMillisAsSeconds(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::FormatTimeInMillisAsSeconds(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::__string_type std::basic_stringstream<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringstream<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]}
C {std::string testing::internal::FormatTimeInMillisAsSeconds(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(double) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]}
C {std::string testing::internal::FormatTimeInMillisAsSeconds(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::basic_stringstream(std::ios_base::openmode) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::ios_base::openmode = std::_Ios_Openmode]}
C {std::string testing::internal::FormatTimeInMillisAsSeconds(testing::internal::TimeInMillis)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Ios_Openmode std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)}
F {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(double) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ostream:211}
C {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(double) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::_M_insert(_ValueT) [with _ValueT = double, _CharT = char, _Traits = std::char_traits<char>]}
F {std::basic_stringstream<_CharT, _Traits, _Alloc>::__string_type std::basic_stringstream<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringstream<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/sstream:563}
C {std::basic_stringstream<_CharT, _Traits, _Alloc>::__string_type std::basic_stringstream<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringstream<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type std::basic_stringbuf<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]}
F {std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type std::basic_stringbuf<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/sstream:122}
C {std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type std::basic_stringbuf<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type std::basic_stringbuf<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type std::basic_stringbuf<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type std::basic_stringbuf<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type std::basic_stringbuf<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type std::basic_stringbuf<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type std::basic_stringbuf<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type std::basic_stringbuf<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type std::basic_stringbuf<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type std::basic_stringbuf<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(_InputIterator, _InputIterator, const _Alloc&) [with _InputIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type std::basic_stringbuf<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_streambuf<_CharT, _Traits>::char_type* std::basic_streambuf<_CharT, _Traits>::pbase() const [with _CharT = char, _Traits = std::char_traits<char>, std::basic_streambuf<_CharT, _Traits>::char_type = char]}
C {std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type std::basic_stringbuf<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_streambuf<_CharT, _Traits>::char_type* std::basic_streambuf<_CharT, _Traits>::egptr() const [with _CharT = char, _Traits = std::char_traits<char>, std::basic_streambuf<_CharT, _Traits>::char_type = char]}
C {std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type std::basic_stringbuf<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type std::basic_stringbuf<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type std::basic_stringbuf<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type std::basic_stringbuf<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type std::basic_stringbuf<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(_InputIterator, _InputIterator, const _Alloc&) [with _InputIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type std::basic_stringbuf<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_streambuf<_CharT, _Traits>::char_type* std::basic_streambuf<_CharT, _Traits>::pbase() const [with _CharT = char, _Traits = std::char_traits<char>, std::basic_streambuf<_CharT, _Traits>::char_type = char]}
C {std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type std::basic_stringbuf<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_streambuf<_CharT, _Traits>::char_type* std::basic_streambuf<_CharT, _Traits>::pptr() const [with _CharT = char, _Traits = std::char_traits<char>, std::basic_streambuf<_CharT, _Traits>::char_type = char]}
C {std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type std::basic_stringbuf<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type std::basic_stringbuf<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_streambuf<_CharT, _Traits>::char_type* std::basic_streambuf<_CharT, _Traits>::egptr() const [with _CharT = char, _Traits = std::char_traits<char>, std::basic_streambuf<_CharT, _Traits>::char_type = char]}
C {std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type std::basic_stringbuf<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_streambuf<_CharT, _Traits>::char_type* std::basic_streambuf<_CharT, _Traits>::pptr() const [with _CharT = char, _Traits = std::char_traits<char>, std::basic_streambuf<_CharT, _Traits>::char_type = char]}
C {std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type std::basic_stringbuf<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_streambuf<_CharT, _Traits>::char_type* std::basic_streambuf<_CharT, _Traits>::pptr() const [with _CharT = char, _Traits = std::char_traits<char>, std::basic_streambuf<_CharT, _Traits>::char_type = char]}
C {std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type std::basic_stringbuf<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringbuf<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {std::basic_streambuf<_CharT, _Traits>::char_type* std::basic_streambuf<_CharT, _Traits>::pptr() const [with _CharT = char, _Traits = std::char_traits<char>, std::basic_streambuf<_CharT, _Traits>::char_type = char]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/streambuf:512}
F {std::basic_streambuf<_CharT, _Traits>::char_type* std::basic_streambuf<_CharT, _Traits>::egptr() const [with _CharT = char, _Traits = std::char_traits<char>, std::basic_streambuf<_CharT, _Traits>::char_type = char]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/streambuf:468}
F {std::basic_streambuf<_CharT, _Traits>::char_type* std::basic_streambuf<_CharT, _Traits>::pbase() const [with _CharT = char, _Traits = std::char_traits<char>, std::basic_streambuf<_CharT, _Traits>::char_type = char]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/streambuf:509}
F {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(_InputIterator, _InputIterator, const _Alloc&) [with _InputIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.tcc:229}
C {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(_InputIterator, _InputIterator, const _Alloc&) [with _InputIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(_CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(_InputIterator, _InputIterator, const _Alloc&) [with _InputIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&) [with _InIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&) [with _InIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:1710}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&) [with _InIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct_aux(_InIterator, _InIterator, const _Alloc&, std::__false_type) [with _InIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct_aux(_InIterator, _InIterator, const _Alloc&, std::__false_type) [with _InIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:1688}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct_aux(_InIterator, _InIterator, const _Alloc&, std::__false_type) [with _InIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.tcc:125}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_rethrow()}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_destroy(const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_begin_catch(void*)}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_eh_pointer(int)}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_CharT* std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_refdata() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_set_length_and_sharable(std::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void std::basic_string<_CharT, _Traits, _Alloc>::_S_copy_chars(_CharT*, _CharT*, _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_CharT* std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_refdata() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::basic_string<_CharT, _Traits, _Alloc>::_Rep* std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_S_create(std::basic_string<_CharT, _Traits, _Alloc>::size_type, std::basic_string<_CharT, _Traits, _Alloc>::size_type, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = char*, typename std::iterator_traits<_Iterator>::difference_type = long int]}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::__throw_logic_error(const char*)}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool __gnu_cxx::__is_null_pointer(_Type*) [with _Type = char]}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_CharT* std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_refdata() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::basic_string<_CharT, _Traits, _Alloc>::_Rep& std::basic_string<_CharT, _Traits, _Alloc>::_S_empty_rep() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::operator==(const std::allocator<_Tp1>&, const std::allocator<_Tp1>&) [with _Tp = char]}
C {static _CharT* std::basic_string<_CharT, _Traits, _Alloc>::_S_construct(_InIterator, _InIterator, const _Alloc&, std::forward_iterator_tag) [with _FwdIterator = char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
F {bool __gnu_cxx::__is_null_pointer(_Type*) [with _Type = char]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/type_traits.h:150}
F {typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = char*, typename std::iterator_traits<_Iterator>::difference_type = long int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator_base_funcs.h:113}
C {typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = char*, typename std::iterator_traits<_Iterator>::difference_type = long int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::iterator_traits<_Iterator>::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = char*, typename std::iterator_traits<_Iterator>::difference_type = long int]}
C {typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = char*, typename std::iterator_traits<_Iterator>::difference_type = long int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::iterator_traits<_Iterator>::iterator_category std::__iterator_category(const _Iter&) [with _Iter = char*, typename std::iterator_traits<_Iterator>::iterator_category = std::random_access_iterator_tag]}
F {typename std::iterator_traits<_Iterator>::iterator_category std::__iterator_category(const _Iter&) [with _Iter = char*, typename std::iterator_traits<_Iterator>::iterator_category = std::random_access_iterator_tag]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator_base_types.h:202}
F {typename std::iterator_traits<_Iterator>::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = char*, typename std::iterator_traits<_Iterator>::difference_type = long int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator_base_funcs.h:90}
F {static void std::basic_string<_CharT, _Traits, _Alloc>::_S_copy_chars(_CharT*, _CharT*, _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:394}
C {static void std::basic_string<_CharT, _Traits, _Alloc>::_S_copy_chars(_CharT*, _CharT*, _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void std::basic_string<_CharT, _Traits, _Alloc>::_M_copy(_CharT*, const _CharT*, std::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
F {static std::string testing::internal::XmlUnitTestResultPrinter::RemoveInvalidXmlCharacters(const string&)} {../third-party/gtest/src/gtest.cc:3185}
C {static std::string testing::internal::XmlUnitTestResultPrinter::RemoveInvalidXmlCharacters(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::RemoveInvalidXmlCharacters(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const char*, _Container = std::basic_string<char>]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::RemoveInvalidXmlCharacters(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::const_iterator std::basic_string<_CharT, _Traits, _Alloc>::end() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*, std::basic_string<char> >, typename _Alloc::rebind<_CharT>::other::const_pointer = const char*]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::RemoveInvalidXmlCharacters(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = const char*, _Container = std::basic_string<char>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<const char*, std::basic_string<char> >]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::RemoveInvalidXmlCharacters(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::basic_string<_CharT, _Traits, _Alloc>::push_back(_CharT) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::RemoveInvalidXmlCharacters(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = const char*, _Container = std::basic_string<char>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = const char&]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::RemoveInvalidXmlCharacters(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::XmlUnitTestResultPrinter::IsValidXmlCharacter(char)}
C {static std::string testing::internal::XmlUnitTestResultPrinter::RemoveInvalidXmlCharacters(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = const char*, _Container = std::basic_string<char>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = const char&]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::RemoveInvalidXmlCharacters(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::const_iterator std::basic_string<_CharT, _Traits, _Alloc>::begin() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*, std::basic_string<char> >, typename _Alloc::rebind<_CharT>::other::const_pointer = const char*]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::RemoveInvalidXmlCharacters(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::basic_string<_CharT, _Traits, _Alloc>::reserve(std::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::RemoveInvalidXmlCharacters(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::RemoveInvalidXmlCharacters(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {std::basic_string<_CharT, _Traits, _Alloc>::const_iterator std::basic_string<_CharT, _Traits, _Alloc>::begin() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*, std::basic_string<char> >, typename _Alloc::rebind<_CharT>::other::const_pointer = const char*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:611}
C {std::basic_string<_CharT, _Traits, _Alloc>::const_iterator std::basic_string<_CharT, _Traits, _Alloc>::begin() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*, std::basic_string<char> >, typename _Alloc::rebind<_CharT>::other::const_pointer = const char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = const char*, _Container = std::basic_string<char>]}
C {std::basic_string<_CharT, _Traits, _Alloc>::const_iterator std::basic_string<_CharT, _Traits, _Alloc>::begin() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*, std::basic_string<char> >, typename _Alloc::rebind<_CharT>::other::const_pointer = const char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_CharT* std::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = const char*, _Container = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:720}
F {static bool testing::internal::XmlUnitTestResultPrinter::IsValidXmlCharacter(char)} {../third-party/gtest/src/gtest.cc:3026}
C {static bool testing::internal::XmlUnitTestResultPrinter::IsValidXmlCharacter(char)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::XmlUnitTestResultPrinter::IsNormalizableWhitespace(char)}
F {static bool testing::internal::XmlUnitTestResultPrinter::IsNormalizableWhitespace(char)} {../third-party/gtest/src/gtest.cc:3021}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = const char*, _Container = std::basic_string<char>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = const char&]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:732}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = const char*, _Container = std::basic_string<char>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<const char*, std::basic_string<char> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:740}
F {std::basic_string<_CharT, _Traits, _Alloc>::const_iterator std::basic_string<_CharT, _Traits, _Alloc>::end() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*, std::basic_string<char> >, typename _Alloc::rebind<_CharT>::other::const_pointer = const char*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:630}
C {std::basic_string<_CharT, _Traits, _Alloc>::const_iterator std::basic_string<_CharT, _Traits, _Alloc>::end() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*, std::basic_string<char> >, typename _Alloc::rebind<_CharT>::other::const_pointer = const char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = const char*, _Container = std::basic_string<char>]}
C {std::basic_string<_CharT, _Traits, _Alloc>::const_iterator std::basic_string<_CharT, _Traits, _Alloc>::end() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*, std::basic_string<char> >, typename _Alloc::rebind<_CharT>::other::const_pointer = const char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {std::basic_string<_CharT, _Traits, _Alloc>::const_iterator std::basic_string<_CharT, _Traits, _Alloc>::end() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const char*, std::basic_string<char> >, typename _Alloc::rebind<_CharT>::other::const_pointer = const char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_CharT* std::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const char*, _Container = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:817}
C {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const char*, _Container = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = const char*, _Container = std::basic_string<char>]}
C {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const char*, _Container = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = const char*, _Container = std::basic_string<char>]}
F {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = const char*, _Container = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:784}
F {static std::string testing::internal::XmlUnitTestResultPrinter::EscapeXml(const string&, bool)} {../third-party/gtest/src/gtest.cc:3139}
C {static std::string testing::internal::XmlUnitTestResultPrinter::EscapeXml(const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {static std::string testing::internal::XmlUnitTestResultPrinter::EscapeXml(const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::EscapeXml(const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {static std::string testing::internal::XmlUnitTestResultPrinter::EscapeXml(const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::Message::GetString() const}
C {static std::string testing::internal::XmlUnitTestResultPrinter::EscapeXml(const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::EscapeXml(const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char, testing::Message = testing::Message]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::EscapeXml(const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::EscapeXml(const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [2], testing::Message = testing::Message]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::EscapeXml(const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = std::basic_string<char>, testing::Message = testing::Message]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::EscapeXml(const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [4], testing::Message = testing::Message]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::EscapeXml(const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::string testing::internal::String::FormatByte(unsigned char)}
C {static std::string testing::internal::XmlUnitTestResultPrinter::EscapeXml(const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::XmlUnitTestResultPrinter::IsNormalizableWhitespace(char)}
C {static std::string testing::internal::XmlUnitTestResultPrinter::EscapeXml(const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::XmlUnitTestResultPrinter::IsValidXmlCharacter(char)}
C {static std::string testing::internal::XmlUnitTestResultPrinter::EscapeXml(const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char, testing::Message = testing::Message]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::EscapeXml(const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [7], testing::Message = testing::Message]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::EscapeXml(const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char, testing::Message = testing::Message]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::EscapeXml(const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [7], testing::Message = testing::Message]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::EscapeXml(const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [6], testing::Message = testing::Message]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::EscapeXml(const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [5], testing::Message = testing::Message]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::EscapeXml(const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [5], testing::Message = testing::Message]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::EscapeXml(const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::const_reference std::basic_string<_CharT, _Traits, _Alloc>::operator[](std::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::const_reference = const char&, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {static std::string testing::internal::XmlUnitTestResultPrinter::EscapeXml(const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [5], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [5], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [5], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {virtual void testing::internal::XmlUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest.cc:3095}
C {virtual void testing::internal::XmlUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {virtual void testing::internal::XmlUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {virtual void testing::internal::XmlUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::XmlUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::XmlUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {virtual void testing::internal::XmlUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {virtual void testing::internal::XmlUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::XmlUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fclose(FILE*)}
C {virtual void testing::internal::XmlUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::XmlUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __builtin_fputs(const char*, FILE*)}
C {virtual void testing::internal::XmlUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::XmlUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StringStreamToString(std::stringstream*)}
C {virtual void testing::internal::XmlUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream*, const testing::UnitTest&)}
C {virtual void testing::internal::XmlUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::basic_stringstream(std::ios_base::openmode) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::ios_base::openmode = std::_Ios_Openmode]}
C {virtual void testing::internal::XmlUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Ios_Openmode std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)}
C {virtual void testing::internal::XmlUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void exit(int)}
C {virtual void testing::internal::XmlUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fflush(FILE*)}
C {virtual void testing::internal::XmlUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fprintf(FILE*, const char*, ...)}
C {virtual void testing::internal::XmlUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::XmlUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {FILE* testing::internal::posix::FOpen(const char*, const char*)}
C {virtual void testing::internal::XmlUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::XmlUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::FilePath::CreateDirectoriesRecursively() const}
C {virtual void testing::internal::XmlUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath testing::internal::FilePath::RemoveFileName() const}
C {virtual void testing::internal::XmlUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::FilePath(const string&)}
F {testing::internal::XmlUnitTestResultPrinter::XmlUnitTestResultPrinter(const char*)} {../third-party/gtest/src/gtest.cc:3085}
C {testing::internal::XmlUnitTestResultPrinter::XmlUnitTestResultPrinter(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::EmptyTestEventListener::~EmptyTestEventListener()}
C {testing::internal::XmlUnitTestResultPrinter::XmlUnitTestResultPrinter(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::XmlUnitTestResultPrinter::XmlUnitTestResultPrinter(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::internal::XmlUnitTestResultPrinter::XmlUnitTestResultPrinter(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void exit(int)}
C {testing::internal::XmlUnitTestResultPrinter::XmlUnitTestResultPrinter(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fflush(FILE*)}
C {testing::internal::XmlUnitTestResultPrinter::XmlUnitTestResultPrinter(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {long unsigned int __builtin_fwrite(const void*, size_t, size_t, FILE*)}
C {testing::internal::XmlUnitTestResultPrinter::XmlUnitTestResultPrinter(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::basic_string<_CharT, _Traits, _Alloc>::empty() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::XmlUnitTestResultPrinter::XmlUnitTestResultPrinter(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::XmlUnitTestResultPrinter::XmlUnitTestResultPrinter(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::internal::XmlUnitTestResultPrinter::XmlUnitTestResultPrinter(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::XmlUnitTestResultPrinter::XmlUnitTestResultPrinter(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {testing::internal::XmlUnitTestResultPrinter::XmlUnitTestResultPrinter(const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::EmptyTestEventListener::EmptyTestEventListener()}
F {virtual void testing::internal::TestEventRepeater::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest.cc:3000}
C {virtual void testing::internal::TestEventRepeater::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::reference = testing::TestEventListener*&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {virtual void testing::internal::TestEventRepeater::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:570}
F {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::reference = testing::TestEventListener*&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:695}
F {virtual void testing::internal::TestEventRepeater::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest.cc:2991}
C {virtual void testing::internal::TestEventRepeater::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {virtual void testing::internal::TestEventRepeater::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::reference = testing::TestEventListener*&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {virtual void testing::internal::TestEventRepeater::OnTestProgramEnd(const testing::UnitTest&)} {../third-party/gtest/src/gtest.cc:2986}
C {virtual void testing::internal::TestEventRepeater::OnTestProgramEnd(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::reference = testing::TestEventListener*&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {virtual void testing::internal::TestEventRepeater::OnTestProgramEnd(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {virtual void testing::internal::TestEventRepeater::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest.cc:2985}
C {virtual void testing::internal::TestEventRepeater::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::reference = testing::TestEventListener*&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {virtual void testing::internal::TestEventRepeater::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {virtual void testing::internal::TestEventRepeater::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest.cc:2984}
C {virtual void testing::internal::TestEventRepeater::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::reference = testing::TestEventListener*&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {virtual void testing::internal::TestEventRepeater::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {virtual void testing::internal::TestEventRepeater::OnEnvironmentsTearDownEnd(const testing::UnitTest&)} {../third-party/gtest/src/gtest.cc:2983}
C {virtual void testing::internal::TestEventRepeater::OnEnvironmentsTearDownEnd(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::reference = testing::TestEventListener*&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {virtual void testing::internal::TestEventRepeater::OnEnvironmentsTearDownEnd(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {virtual void testing::internal::TestEventRepeater::OnEnvironmentsSetUpEnd(const testing::UnitTest&)} {../third-party/gtest/src/gtest.cc:2982}
C {virtual void testing::internal::TestEventRepeater::OnEnvironmentsSetUpEnd(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::reference = testing::TestEventListener*&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {virtual void testing::internal::TestEventRepeater::OnEnvironmentsSetUpEnd(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {virtual void testing::internal::TestEventRepeater::OnEnvironmentsTearDownStart(const testing::UnitTest&)} {../third-party/gtest/src/gtest.cc:2981}
C {virtual void testing::internal::TestEventRepeater::OnEnvironmentsTearDownStart(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {virtual void testing::internal::TestEventRepeater::OnEnvironmentsTearDownStart(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::reference = testing::TestEventListener*&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {virtual void testing::internal::TestEventRepeater::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest.cc:2980}
C {virtual void testing::internal::TestEventRepeater::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {virtual void testing::internal::TestEventRepeater::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::reference = testing::TestEventListener*&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {virtual void testing::internal::TestEventRepeater::OnTestStart(const testing::TestInfo&)} {../third-party/gtest/src/gtest.cc:2979}
C {virtual void testing::internal::TestEventRepeater::OnTestStart(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {virtual void testing::internal::TestEventRepeater::OnTestStart(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::reference = testing::TestEventListener*&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {virtual void testing::internal::TestEventRepeater::OnTestCaseStart(const testing::TestCase&)} {../third-party/gtest/src/gtest.cc:2978}
C {virtual void testing::internal::TestEventRepeater::OnTestCaseStart(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {virtual void testing::internal::TestEventRepeater::OnTestCaseStart(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::reference = testing::TestEventListener*&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {virtual void testing::internal::TestEventRepeater::OnEnvironmentsSetUpStart(const testing::UnitTest&)} {../third-party/gtest/src/gtest.cc:2977}
C {virtual void testing::internal::TestEventRepeater::OnEnvironmentsSetUpStart(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {virtual void testing::internal::TestEventRepeater::OnEnvironmentsSetUpStart(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::reference = testing::TestEventListener*&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {virtual void testing::internal::TestEventRepeater::OnTestProgramStart(const testing::UnitTest&)} {../third-party/gtest/src/gtest.cc:2976}
C {virtual void testing::internal::TestEventRepeater::OnTestProgramStart(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {virtual void testing::internal::TestEventRepeater::OnTestProgramStart(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::reference = testing::TestEventListener*&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {testing::TestEventListener* testing::internal::TestEventRepeater::Release(testing::TestEventListener*)} {../third-party/gtest/src/gtest.cc:2944}
C {testing::TestEventListener* testing::internal::TestEventRepeater::Release(testing::TestEventListener*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {testing::TestEventListener* testing::internal::TestEventRepeater::Release(testing::TestEventListener*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::iterator) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]}
C {testing::TestEventListener* testing::internal::TestEventRepeater::Release(testing::TestEventListener*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator+(const difference_type&) const [with _Iterator = testing::TestEventListener**, _Container = std::vector<testing::TestEventListener*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]}
C {testing::TestEventListener* testing::internal::TestEventRepeater::Release(testing::TestEventListener*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]}
C {testing::TestEventListener* testing::internal::TestEventRepeater::Release(testing::TestEventListener*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::reference = testing::TestEventListener*&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:463}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::TestEventListener**, _Container = std::vector<testing::TestEventListener*>]}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::TestEventListener**, _Container = std::vector<testing::TestEventListener*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:720}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator+(const difference_type&) const [with _Iterator = testing::TestEventListener**, _Container = std::vector<testing::TestEventListener*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:772}
C {__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator+(const difference_type&) const [with _Iterator = testing::TestEventListener**, _Container = std::vector<testing::TestEventListener*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::TestEventListener**, _Container = std::vector<testing::TestEventListener*>]}
F {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::iterator) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/vector.tcc:135}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::iterator) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::destroy(__gnu_cxx::new_allocator<_Tp>::pointer) [with _Tp = testing::TestEventListener*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestEventListener**]}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::iterator) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_OI std::copy(_II, _II, _OI) [with _II = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, _OI = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >]}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::iterator) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator+(const difference_type&) const [with _Iterator = testing::TestEventListener**, _Container = std::vector<testing::TestEventListener*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::iterator) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::iterator) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestEventListener**, _Container = std::vector<testing::TestEventListener*>]}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::iterator) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator+(const difference_type&) const [with _Iterator = testing::TestEventListener**, _Container = std::vector<testing::TestEventListener*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::erase(std::vector<_Tp, _Alloc>::iterator) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]}
F {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestEventListener**, _Container = std::vector<testing::TestEventListener*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:817}
C {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestEventListener**, _Container = std::vector<testing::TestEventListener*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestEventListener**, _Container = std::vector<testing::TestEventListener*>]}
C {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestEventListener**, _Container = std::vector<testing::TestEventListener*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestEventListener**, _Container = std::vector<testing::TestEventListener*>]}
F {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestEventListener**, _Container = std::vector<testing::TestEventListener*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:784}
F {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:481}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::TestEventListener**, _Container = std::vector<testing::TestEventListener*>]}
F {_OI std::copy(_II, _II, _OI) [with _II = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, _OI = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:444}
C {_OI std::copy(_II, _II, _OI) [with _II = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, _OI = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, _OI = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >]}
C {_OI std::copy(_II, _II, _OI) [with _II = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, _OI = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Miter_base<_Iterator>::iterator_type = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >]}
C {_OI std::copy(_II, _II, _OI) [with _II = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, _OI = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Miter_base<_Iterator>::iterator_type = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >]}
F {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Miter_base<_Iterator>::iterator_type = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:282}
C {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Miter_base<_Iterator>::iterator_type = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, bool _HasBase = false, std::_Iter_base<_Iterator, _HasBase>::iterator_type = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >]}
F {static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, bool _HasBase = false, std::_Iter_base<_Iterator, _HasBase>::iterator_type = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator_base_types.h:213}
F {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, _OI = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:418}
C {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, _OI = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::TestEventListener**, _Container = std::vector<testing::TestEventListener*>]}
C {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, _OI = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false, _II = testing::TestEventListener**, _OI = testing::TestEventListener**]}
C {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, _OI = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestEventListener**]}
C {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, _OI = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestEventListener**]}
C {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, _OI = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestEventListener**]}
F {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestEventListener**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:271}
C {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::_Iter_base<_Iterator, true>::iterator_type std::_Iter_base<_Iterator, true>::_S_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, std::_Iter_base<_Iterator, true>::iterator_type = testing::TestEventListener**]}
F {static std::_Iter_base<_Iterator, true>::iterator_type std::_Iter_base<_Iterator, true>::_S_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, std::_Iter_base<_Iterator, true>::iterator_type = testing::TestEventListener**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator_base_types.h:221}
C {static std::_Iter_base<_Iterator, true>::iterator_type std::_Iter_base<_Iterator, true>::_S_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, std::_Iter_base<_Iterator, true>::iterator_type = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestEventListener**, _Container = std::vector<testing::TestEventListener*>]}
F {_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false, _II = testing::TestEventListener**, _OI = testing::TestEventListener**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:373}
C {_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false, _II = testing::TestEventListener**, _OI = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = testing::TestEventListener*, bool _IsMove = false]}
F {static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = testing::TestEventListener*, bool _IsMove = false]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:362}
C {static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = testing::TestEventListener*, bool _IsMove = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_memmove(void*, const void*, long unsigned int)}
F {void __gnu_cxx::new_allocator<_Tp>::destroy(__gnu_cxx::new_allocator<_Tp>::pointer) [with _Tp = testing::TestEventListener*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestEventListener**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:118}
F {void testing::internal::TestEventRepeater::Append(testing::TestEventListener*)} {../third-party/gtest/src/gtest.cc:2939}
C {void testing::internal::TestEventRepeater::Append(testing::TestEventListener*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::value_type = testing::TestEventListener*]}
F {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::value_type = testing::TestEventListener*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:826}
C {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::value_type = testing::TestEventListener*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]}
C {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::value_type = testing::TestEventListener*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]}
C {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::value_type = testing::TestEventListener*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::TestEventListener*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestEventListener**]}
F {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::TestEventListener*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestEventListener**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:107}
C {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::TestEventListener*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t, void*)}
F {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/vector.tcc:300}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_rethrow()}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestEventListener**, std::size_t = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::TestEventListener**, _Tp = testing::TestEventListener*]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestEventListener*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::destroy(__gnu_cxx::new_allocator<_Tp>::pointer) [with _Tp = testing::TestEventListener*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestEventListener**]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_begin_catch(void*)}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_eh_pointer(int)}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestEventListener**, std::size_t = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::TestEventListener**, _Tp = testing::TestEventListener*]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestEventListener*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = testing::TestEventListener**, _ForwardIterator = testing::TestEventListener**, _Allocator = std::allocator<testing::TestEventListener*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestEventListener**, _Container = std::vector<testing::TestEventListener*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestEventListener*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = testing::TestEventListener**, _ForwardIterator = testing::TestEventListener**, _Allocator = std::allocator<testing::TestEventListener*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestEventListener**, _Container = std::vector<testing::TestEventListener*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestEventListener*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::TestEventListener*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestEventListener**]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename _Alloc::rebind<_Tp>::other::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestEventListener**, std::size_t = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestEventListener**, _Container = std::vector<testing::TestEventListener*>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::TestEventListener**, _Container = std::vector<testing::TestEventListener*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::TestEventListener*&]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::TestEventListener**, _BI2 = testing::TestEventListener**]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestEventListener**, _Container = std::vector<testing::TestEventListener*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener**, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::TestEventListener*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestEventListener**]}
F {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::TestEventListener**, _BI2 = testing::TestEventListener**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:613}
C {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::TestEventListener**, _BI2 = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestEventListener**, _BI2 = testing::TestEventListener**]}
C {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::TestEventListener**, _BI2 = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::TestEventListener**, typename std::_Miter_base<_Iterator>::iterator_type = testing::TestEventListener**]}
C {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::TestEventListener**, _BI2 = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::TestEventListener**, typename std::_Miter_base<_Iterator>::iterator_type = testing::TestEventListener**]}
F {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::TestEventListener**, typename std::_Miter_base<_Iterator>::iterator_type = testing::TestEventListener**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:282}
C {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::TestEventListener**, typename std::_Miter_base<_Iterator>::iterator_type = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = testing::TestEventListener**, bool _HasBase = false, std::_Iter_base<_Iterator, _HasBase>::iterator_type = testing::TestEventListener**]}
F {static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = testing::TestEventListener**, bool _HasBase = false, std::_Iter_base<_Iterator, _HasBase>::iterator_type = testing::TestEventListener**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator_base_types.h:213}
F {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestEventListener**, _BI2 = testing::TestEventListener**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:586}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestEventListener**, _BI2 = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestEventListener**, _BI2 = testing::TestEventListener**]}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestEventListener**, _BI2 = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestEventListener**, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestEventListener**]}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestEventListener**, _BI2 = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestEventListener**, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestEventListener**]}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestEventListener**, _BI2 = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestEventListener**, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestEventListener**]}
F {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestEventListener**, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestEventListener**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:271}
C {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestEventListener**, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = testing::TestEventListener**, bool _HasBase = false, std::_Iter_base<_Iterator, _HasBase>::iterator_type = testing::TestEventListener**]}
F {_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestEventListener**, _BI2 = testing::TestEventListener**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:568}
C {_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestEventListener**, _BI2 = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _Tp* std::__copy_move_backward<_IsMove, true, std::random_access_iterator_tag>::__copy_move_b(const _Tp*, const _Tp*, _Tp*) [with _Tp = testing::TestEventListener*, bool _IsMove = false]}
F {static _Tp* std::__copy_move_backward<_IsMove, true, std::random_access_iterator_tag>::__copy_move_b(const _Tp*, const _Tp*, _Tp*) [with _Tp = testing::TestEventListener*, bool _IsMove = false]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:557}
C {static _Tp* std::__copy_move_backward<_IsMove, true, std::random_access_iterator_tag>::__copy_move_b(const _Tp*, const _Tp*, _Tp*) [with _Tp = testing::TestEventListener*, bool _IsMove = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_memmove(void*, const void*, long unsigned int)}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::TestEventListener**, _Container = std::vector<testing::TestEventListener*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::TestEventListener*&]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:732}
F {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:1239}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::__throw_length_error(const char*)}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:575}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = testing::TestEventListener*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestEventListener*>]}
F {const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestEventListener*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:99}
F {__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = testing::TestEventListener*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:101}
F {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestEventListener**, _Container = std::vector<testing::TestEventListener*>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:890}
C {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestEventListener**, _Container = std::vector<testing::TestEventListener*>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestEventListener**, _Container = std::vector<testing::TestEventListener*>]}
C {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestEventListener**, _Container = std::vector<testing::TestEventListener*>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestEventListener**, _Container = std::vector<testing::TestEventListener*>]}
F {typename _Alloc::rebind<_Tp>::other::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestEventListener**, std::size_t = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:149}
C {typename _Alloc::rebind<_Tp>::other::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestEventListener**, std::size_t = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::TestEventListener*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestEventListener**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::TestEventListener*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestEventListener**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:87}
C {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::TestEventListener*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestEventListener**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::TestEventListener*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestEventListener**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::__throw_bad_alloc()}
C {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::TestEventListener*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestEventListener**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = testing::TestEventListener*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = testing::TestEventListener**, _ForwardIterator = testing::TestEventListener**, _Allocator = std::allocator<testing::TestEventListener*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:264}
C {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = testing::TestEventListener**, _ForwardIterator = testing::TestEventListener**, _Allocator = std::allocator<testing::TestEventListener*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = testing::TestEventListener**, _ForwardIterator = testing::TestEventListener**, _Tp = testing::TestEventListener*]}
F {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = testing::TestEventListener**, _ForwardIterator = testing::TestEventListener**, _Tp = testing::TestEventListener*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:257}
C {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = testing::TestEventListener**, _ForwardIterator = testing::TestEventListener**, _Tp = testing::TestEventListener*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestEventListener**, _ForwardIterator = testing::TestEventListener**]}
F {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestEventListener**, _ForwardIterator = testing::TestEventListener**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:109}
C {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestEventListener**, _ForwardIterator = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _ForwardIterator std::__uninitialized_copy<true>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestEventListener**, _ForwardIterator = testing::TestEventListener**]}
F {static _ForwardIterator std::__uninitialized_copy<true>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestEventListener**, _ForwardIterator = testing::TestEventListener**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:93}
C {static _ForwardIterator std::__uninitialized_copy<true>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestEventListener**, _ForwardIterator = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_OI std::copy(_II, _II, _OI) [with _II = testing::TestEventListener**, _OI = testing::TestEventListener**]}
F {_OI std::copy(_II, _II, _OI) [with _II = testing::TestEventListener**, _OI = testing::TestEventListener**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:444}
C {_OI std::copy(_II, _II, _OI) [with _II = testing::TestEventListener**, _OI = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = testing::TestEventListener**, _OI = testing::TestEventListener**]}
C {_OI std::copy(_II, _II, _OI) [with _II = testing::TestEventListener**, _OI = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::TestEventListener**, typename std::_Miter_base<_Iterator>::iterator_type = testing::TestEventListener**]}
C {_OI std::copy(_II, _II, _OI) [with _II = testing::TestEventListener**, _OI = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::TestEventListener**, typename std::_Miter_base<_Iterator>::iterator_type = testing::TestEventListener**]}
F {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = testing::TestEventListener**, _OI = testing::TestEventListener**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:418}
C {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = testing::TestEventListener**, _OI = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false, _II = testing::TestEventListener**, _OI = testing::TestEventListener**]}
C {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = testing::TestEventListener**, _OI = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestEventListener**, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestEventListener**]}
C {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = testing::TestEventListener**, _OI = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestEventListener**, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestEventListener**]}
C {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = testing::TestEventListener**, _OI = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestEventListener**, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestEventListener**]}
F {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestEventListener*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:95}
F {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::TestEventListener**, _Tp = testing::TestEventListener*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:150}
C {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::TestEventListener**, _Tp = testing::TestEventListener*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::TestEventListener**]}
F {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::TestEventListener**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:123}
C {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::TestEventListener**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void std::_Destroy_aux<true>::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::TestEventListener**]}
F {static void std::_Destroy_aux<true>::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::TestEventListener**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:113}
F {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestEventListener**, std::size_t = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:153}
C {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestEventListener**, std::size_t = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = testing::TestEventListener*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestEventListener**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = testing::TestEventListener*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestEventListener**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:97}
C {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = testing::TestEventListener*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestEventListener**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
F {virtual testing::internal::TestEventRepeater::~TestEventRepeater()} {../third-party/gtest/src/gtest.cc:2935}
C {virtual testing::internal::TestEventRepeater::~TestEventRepeater()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual testing::internal::TestEventRepeater::~TestEventRepeater()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TestEventRepeater::~TestEventRepeater()}
F {testing::internal::TestEventRepeater::~TestEventRepeater()} {../third-party/gtest/src/gtest.cc:2935}
C {testing::internal::TestEventRepeater::~TestEventRepeater()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestEventListener::~TestEventListener()}
C {testing::internal::TestEventRepeater::~TestEventRepeater()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>]}
C {testing::internal::TestEventRepeater::~TestEventRepeater()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::TestEventRepeater::~TestEventRepeater()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestEventListener::~TestEventListener()}
C {testing::internal::TestEventRepeater::~TestEventRepeater()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>]}
C {testing::internal::TestEventRepeater::~TestEventRepeater()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ForEach(const Container&, Functor) [with Container = std::vector<testing::TestEventListener*>, Functor = void (*)(testing::TestEventListener*)]}
F {void testing::internal::ForEach(const Container&, Functor) [with Container = std::vector<testing::TestEventListener*>, Functor = void (*)(testing::TestEventListener*)]} {../third-party/gtest/src/gtest-internal-inl.h:295}
C {void testing::internal::ForEach(const Container&, Functor) [with Container = std::vector<testing::TestEventListener*>, Functor = void (*)(testing::TestEventListener*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_Funct std::for_each(_IIter, _IIter, _Funct) [with _IIter = __gnu_cxx::__normal_iterator<testing::TestEventListener* const*, std::vector<testing::TestEventListener*> >, _Funct = void (*)(testing::TestEventListener*)]}
C {void testing::internal::ForEach(const Container&, Functor) [with Container = std::vector<testing::TestEventListener*>, Functor = void (*)(testing::TestEventListener*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener* const*, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = testing::TestEventListener* const*]}
C {void testing::internal::ForEach(const Container&, Functor) [with Container = std::vector<testing::TestEventListener*>, Functor = void (*)(testing::TestEventListener*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener* const*, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = testing::TestEventListener* const*]}
F {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener* const*, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = testing::TestEventListener* const*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:490}
C {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener* const*, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = testing::TestEventListener* const*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::TestEventListener* const*, _Container = std::vector<testing::TestEventListener*>]}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::TestEventListener* const*, _Container = std::vector<testing::TestEventListener*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:720}
F {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener* const*, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = testing::TestEventListener* const*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:472}
C {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<testing::TestEventListener* const*, std::vector<testing::TestEventListener*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = testing::TestEventListener* const*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::TestEventListener* const*, _Container = std::vector<testing::TestEventListener*>]}
F {_Funct std::for_each(_IIter, _IIter, _Funct) [with _IIter = __gnu_cxx::__normal_iterator<testing::TestEventListener* const*, std::vector<testing::TestEventListener*> >, _Funct = void (*)(testing::TestEventListener*)]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algo.h:4373}
C {_Funct std::for_each(_IIter, _IIter, _Funct) [with _IIter = __gnu_cxx::__normal_iterator<testing::TestEventListener* const*, std::vector<testing::TestEventListener*> >, _Funct = void (*)(testing::TestEventListener*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestEventListener* const*, _Container = std::vector<testing::TestEventListener*>]}
C {_Funct std::for_each(_IIter, _IIter, _Funct) [with _IIter = __gnu_cxx::__normal_iterator<testing::TestEventListener* const*, std::vector<testing::TestEventListener*> >, _Funct = void (*)(testing::TestEventListener*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = testing::TestEventListener* const*, _Container = std::vector<testing::TestEventListener*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::TestEventListener* const*, std::vector<testing::TestEventListener*> >]}
C {_Funct std::for_each(_IIter, _IIter, _Funct) [with _IIter = __gnu_cxx::__normal_iterator<testing::TestEventListener* const*, std::vector<testing::TestEventListener*> >, _Funct = void (*)(testing::TestEventListener*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::TestEventListener* const*, _Container = std::vector<testing::TestEventListener*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::TestEventListener* const&]}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::TestEventListener* const*, _Container = std::vector<testing::TestEventListener*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::TestEventListener* const&]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:732}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = testing::TestEventListener* const*, _Container = std::vector<testing::TestEventListener*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::TestEventListener* const*, std::vector<testing::TestEventListener*> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:740}
F {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestEventListener* const*, _Container = std::vector<testing::TestEventListener*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:817}
C {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestEventListener* const*, _Container = std::vector<testing::TestEventListener*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestEventListener* const*, _Container = std::vector<testing::TestEventListener*>]}
C {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestEventListener* const*, _Container = std::vector<testing::TestEventListener*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestEventListener* const*, _Container = std::vector<testing::TestEventListener*>]}
F {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestEventListener* const*, _Container = std::vector<testing::TestEventListener*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:784}
F {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:349}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>]}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>]}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::TestEventListener**, _Tp = testing::TestEventListener*]}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestEventListener*>]}
F {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:141}
C {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<testing::TestEventListener*, std::allocator<testing::TestEventListener*> >::_Vector_impl::~_Vector_impl()}
C {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<testing::TestEventListener*, std::allocator<testing::TestEventListener*> >::_Vector_impl::~_Vector_impl()}
C {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::TestEventListener*, _Alloc = std::allocator<testing::TestEventListener*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestEventListener**, std::size_t = long unsigned int]}
F {std::_Vector_base<testing::TestEventListener*, std::allocator<testing::TestEventListener*> >::_Vector_impl::~_Vector_impl()} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:75}
C {std::_Vector_base<testing::TestEventListener*, std::allocator<testing::TestEventListener*> >::_Vector_impl::~_Vector_impl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = testing::TestEventListener*]}
F {std::allocator<_Alloc>::~allocator() [with _Tp = testing::TestEventListener*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:115}
C {std::allocator<_Alloc>::~allocator() [with _Tp = testing::TestEventListener*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = testing::TestEventListener*]}
F {__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = testing::TestEventListener*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:76}
F {void testing::internal::Delete(T*) [with T = testing::TestEventListener]} {../third-party/gtest/src/gtest-internal-inl.h:339}
F {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest.cc:2856}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fflush(FILE*)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __builtin_putchar(int)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::UnitTest::reportable_disabled_test_count() const}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int printf(const char*, ...)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::PrettyUnitTestResultPrinter::PrintFailedTests(const testing::UnitTest&)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int printf(const char*, ...)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::FormatTestCount(int)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::UnitTest::failed_test_count() const}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::UnitTest::Passed() const}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::UnitTest::failed_test_count() const}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int printf(const char*, ...)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::FormatTestCount(int)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::UnitTest::successful_test_count() const}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __builtin_putchar(int)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int printf(const char*, ...)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = long long int, std::string = std::basic_string<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TimeInMillis testing::UnitTest::elapsed_time() const}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int printf(const char*, ...)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::FormatTestCount(int)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::UnitTest::test_to_run_count() const}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::FormatTestCaseCount(int)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::UnitTest::test_case_to_run_count() const}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)}
F {std::string testing::FormatTestCaseCount(int)} {../third-party/gtest/src/gtest.cc:2492}
C {std::string testing::FormatTestCaseCount(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::FormatCountableNoun(int, const char*, const char*)}
F {std::string testing::FormatCountableNoun(int, const char*, const char*)} {../third-party/gtest/src/gtest.cc:2479}
C {std::string testing::FormatCountableNoun(int, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::FormatCountableNoun(int, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::FormatCountableNoun(int, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::FormatCountableNoun(int, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::FormatCountableNoun(int, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::FormatCountableNoun(int, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::FormatCountableNoun(int, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
F {std::string testing::internal::StreamableToString(const T&) [with T = long long int, std::string = std::basic_string<char>]} {../third-party/gtest/include/gtest/gtest-message.h:243}
C {std::string testing::internal::StreamableToString(const T&) [with T = long long int, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {std::string testing::internal::StreamableToString(const T&) [with T = long long int, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {std::string testing::internal::StreamableToString(const T&) [with T = long long int, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::Message::GetString() const}
C {std::string testing::internal::StreamableToString(const T&) [with T = long long int, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = long long int, testing::Message = testing::Message]}
C {std::string testing::internal::StreamableToString(const T&) [with T = long long int, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {testing::Message& testing::Message::operator<<(const T&) [with T = long long int, testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = long long int, testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long long int) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = long long int, testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long long int) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ostream:202}
C {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long long int) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::_M_insert(_ValueT) [with _ValueT = long long int, _CharT = char, _Traits = std::char_traits<char>]}
F {std::string testing::FormatTestCount(int)} {../third-party/gtest/src/gtest.cc:2487}
C {std::string testing::FormatTestCount(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::FormatCountableNoun(int, const char*, const char*)}
F {static void testing::internal::PrettyUnitTestResultPrinter::PrintFailedTests(const testing::UnitTest&)} {../third-party/gtest/src/gtest.cc:2832}
C {static void testing::internal::PrettyUnitTestResultPrinter::PrintFailedTests(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::UnitTest::total_test_case_count() const}
C {static void testing::internal::PrettyUnitTestResultPrinter::PrintFailedTests(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::TestCase::total_test_count() const}
C {static void testing::internal::PrettyUnitTestResultPrinter::PrintFailedTests(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __builtin_putchar(int)}
C {static void testing::internal::PrettyUnitTestResultPrinter::PrintFailedTests(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::PrintFullTestCommentIfPresent(const testing::TestInfo&)}
C {static void testing::internal::PrettyUnitTestResultPrinter::PrintFailedTests(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int printf(const char*, ...)}
C {static void testing::internal::PrettyUnitTestResultPrinter::PrintFailedTests(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestCase::name() const}
C {static void testing::internal::PrettyUnitTestResultPrinter::PrintFailedTests(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestInfo::name() const}
C {static void testing::internal::PrettyUnitTestResultPrinter::PrintFailedTests(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)}
C {static void testing::internal::PrettyUnitTestResultPrinter::PrintFailedTests(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::TestResult::Passed() const}
C {static void testing::internal::PrettyUnitTestResultPrinter::PrintFailedTests(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::TestResult* testing::TestInfo::result() const}
C {static void testing::internal::PrettyUnitTestResultPrinter::PrintFailedTests(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::TestInfo::should_run() const}
C {static void testing::internal::PrettyUnitTestResultPrinter::PrintFailedTests(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::TestInfo* testing::TestCase::GetTestInfo(int) const}
C {static void testing::internal::PrettyUnitTestResultPrinter::PrintFailedTests(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::TestCase::failed_test_count() const}
C {static void testing::internal::PrettyUnitTestResultPrinter::PrintFailedTests(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::TestCase::should_run() const}
C {static void testing::internal::PrettyUnitTestResultPrinter::PrintFailedTests(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::TestCase* testing::UnitTest::GetTestCase(int) const}
C {static void testing::internal::PrettyUnitTestResultPrinter::PrintFailedTests(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::UnitTest::failed_test_count() const}
F {bool testing::TestResult::Passed() const} {../third-party/gtest/include/gtest/gtest.h:516}
C {bool testing::TestResult::Passed() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::TestResult::Failed() const}
F {virtual void testing::internal::PrettyUnitTestResultPrinter::OnEnvironmentsTearDownStart(const testing::UnitTest&)} {../third-party/gtest/src/gtest.cc:2824}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnEnvironmentsTearDownStart(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fflush(FILE*)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnEnvironmentsTearDownStart(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __builtin_puts(const char*)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnEnvironmentsTearDownStart(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)}
F {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest.cc:2812}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fflush(FILE*)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int printf(const char*, ...)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestCase::name() const}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = long long int, std::string = std::basic_string<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TimeInMillis testing::TestCase::elapsed_time() const}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::FormatCountableNoun(int, const char*, const char*)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::TestCase::test_to_run_count() const}
F {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest.cc:2793}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fflush(FILE*)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __builtin_putchar(int)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int printf(const char*, ...)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = long long int, std::string = std::basic_string<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TimeInMillis testing::TestResult::elapsed_time() const}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::TestResult* testing::TestInfo::result() const}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::PrintFullTestCommentIfPresent(const testing::TestInfo&)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::TestResult::Failed() const}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::TestResult* testing::TestInfo::result() const}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::PrettyUnitTestResultPrinter::PrintTestName(const char*, const char*)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestInfo::test_case_name() const}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestInfo::name() const}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::TestResult::Passed() const}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::TestResult* testing::TestInfo::result() const}
F {static void testing::internal::PrettyUnitTestResultPrinter::PrintTestName(const char*, const char*)} {../third-party/gtest/src/gtest.cc:2695}
C {static void testing::internal::PrettyUnitTestResultPrinter::PrintTestName(const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int printf(const char*, ...)}
F {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest.cc:2782}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fflush(FILE*)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::PrintTestPartResult(const testing::TestPartResult&)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResult::Type testing::TestPartResult::type() const}
F {void testing::internal::PrintTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest.cc:2530}
C {void testing::internal::PrintTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::PrintTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::PrintTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fflush(FILE*)}
C {void testing::internal::PrintTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __builtin_puts(const char*)}
C {void testing::internal::PrintTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::PrintTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::PrintTestPartResultToString(const testing::TestPartResult&)}
F {std::string testing::internal::PrintTestPartResultToString(const testing::TestPartResult&)} {../third-party/gtest/src/gtest.cc:2520}
C {std::string testing::internal::PrintTestPartResultToString(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::PrintTestPartResultToString(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {std::string testing::internal::PrintTestPartResultToString(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::PrintTestPartResultToString(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {std::string testing::internal::PrintTestPartResultToString(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::Message::GetString() const}
C {std::string testing::internal::PrintTestPartResultToString(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]}
C {std::string testing::internal::PrintTestPartResultToString(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]}
C {std::string testing::internal::PrintTestPartResultToString(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [2], testing::Message = testing::Message]}
C {std::string testing::internal::PrintTestPartResultToString(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = std::basic_string<char>, testing::Message = testing::Message]}
C {std::string testing::internal::PrintTestPartResultToString(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
C {std::string testing::internal::PrintTestPartResultToString(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatFileLocation(const char*, int)}
C {std::string testing::internal::PrintTestPartResultToString(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestPartResult::file_name() const}
C {std::string testing::internal::PrintTestPartResultToString(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::TestPartResult::line_number() const}
C {std::string testing::internal::PrintTestPartResultToString(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestPartResultTypeToString(testing::TestPartResult::Type)}
C {std::string testing::internal::PrintTestPartResultToString(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResult::Type testing::TestPartResult::type() const}
C {std::string testing::internal::PrintTestPartResultToString(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestPartResult::message() const}
F {const char* testing::TestPartResultTypeToString(testing::TestPartResult::Type)} {../third-party/gtest/src/gtest.cc:2500}
F {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestStart(const testing::TestInfo&)} {../third-party/gtest/src/gtest.cc:2774}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestStart(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fflush(FILE*)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestStart(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __builtin_putchar(int)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestStart(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::PrettyUnitTestResultPrinter::PrintTestName(const char*, const char*)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestStart(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestInfo::test_case_name() const}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestStart(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestInfo::name() const}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestStart(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)}
F {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestCaseStart(const testing::TestCase&)} {../third-party/gtest/src/gtest.cc:2761}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestCaseStart(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestCaseStart(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestCaseStart(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fflush(FILE*)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestCaseStart(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int printf(const char*, ...)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestCaseStart(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestCase::type_param() const}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestCaseStart(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __builtin_putchar(int)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestCaseStart(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestCase::type_param() const}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestCaseStart(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int printf(const char*, ...)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestCaseStart(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestCaseStart(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestCase::name() const}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestCaseStart(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestCaseStart(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::FormatCountableNoun(int, const char*, const char*)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestCaseStart(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::TestCase::test_to_run_count() const}
F {virtual void testing::internal::PrettyUnitTestResultPrinter::OnEnvironmentsSetUpStart(const testing::UnitTest&)} {../third-party/gtest/src/gtest.cc:2754}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnEnvironmentsSetUpStart(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fflush(FILE*)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnEnvironmentsSetUpStart(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __builtin_puts(const char*)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnEnvironmentsSetUpStart(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)}
F {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest.cc:2719}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fflush(FILE*)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int printf(const char*, ...)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::FormatTestCount(int)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::UnitTest::test_to_run_count() const}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::FormatTestCaseCount(int)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::UnitTest::test_case_to_run_count() const}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::UnitTest::random_seed() const}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::internal::posix::GetEnv(const char*)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::Int32 testing::internal::Int32FromEnvOrDie(const char*, testing::internal::Int32)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ShouldShard(const char*, const char*, bool)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::String::CStringEquals(const char*, const char*)}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int printf(const char*, ...)}
F {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestProgramEnd(const testing::UnitTest&)} {../third-party/gtest/src/gtest.cc:2712}
F {virtual void testing::internal::PrettyUnitTestResultPrinter::OnEnvironmentsTearDownEnd(const testing::UnitTest&)} {../third-party/gtest/src/gtest.cc:2710}
F {virtual void testing::internal::PrettyUnitTestResultPrinter::OnEnvironmentsSetUpEnd(const testing::UnitTest&)} {../third-party/gtest/src/gtest.cc:2703}
F {virtual void testing::internal::PrettyUnitTestResultPrinter::OnTestProgramStart(const testing::UnitTest&)} {../third-party/gtest/src/gtest.cc:2700}
F {void testing::internal::PrintFullTestCommentIfPresent(const testing::TestInfo&)} {../third-party/gtest/src/gtest.cc:2672}
C {void testing::internal::PrintFullTestCommentIfPresent(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int printf(const char*, ...)}
C {void testing::internal::PrintFullTestCommentIfPresent(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int printf(const char*, ...)}
C {void testing::internal::PrintFullTestCommentIfPresent(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int printf(const char*, ...)}
C {void testing::internal::PrintFullTestCommentIfPresent(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int printf(const char*, ...)}
C {void testing::internal::PrintFullTestCommentIfPresent(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestInfo::value_param() const}
C {void testing::internal::PrintFullTestCommentIfPresent(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestInfo::type_param() const}
F {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)} {../third-party/gtest/src/gtest.cc:2621}
C {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_guard_abort(long long int*)}
C {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __builtin_va_end(__va_list_tag*)}
C {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int printf(const char*, ...)}
C {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int vprintf(const char*, __va_list_tag*)}
C {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int printf(const char*, ...)}
C {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::internal::GetAnsiColorCode(testing::internal::GTestColor)}
C {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __builtin_va_end(__va_list_tag*)}
C {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int vprintf(const char*, __va_list_tag*)}
C {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_guard_release(long long int*)}
C {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::ShouldUseColor(bool)}
C {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::posix::IsATTY(int)}
C {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::posix::FileNo(FILE*)}
C {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int __cxa_guard_acquire(long long int*)}
C {void testing::internal::ColoredPrintf(testing::internal::GTestColor, const char*, ...)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __builtin_va_start(__va_list_tag*, ...)}
F {int testing::internal::posix::FileNo(FILE*)} {../third-party/gtest/include/gtest/internal/gtest-port.h:1741}
C {int testing::internal::posix::FileNo(FILE*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fileno(FILE*)}
F {int testing::internal::posix::IsATTY(int)} {../third-party/gtest/include/gtest/internal/gtest-port.h:1742}
C {int testing::internal::posix::IsATTY(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int isatty(int)}
F {int vprintf(const char*, __va_list_tag*)} {/usr/include/bits/stdio.h:37}
C {int vprintf(const char*, __va_list_tag*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int vfprintf(FILE*, const char*, __va_list_tag*)}
F {bool testing::internal::ShouldUseColor(bool)} {../third-party/gtest/src/gtest.cc:2585}
C {bool testing::internal::ShouldUseColor(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::String::CStringEquals(const char*, const char*)}
C {bool testing::internal::ShouldUseColor(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::String::CaseInsensitiveCStringEquals(const char*, const char*)}
C {bool testing::internal::ShouldUseColor(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::String::CaseInsensitiveCStringEquals(const char*, const char*)}
C {bool testing::internal::ShouldUseColor(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::String::CaseInsensitiveCStringEquals(const char*, const char*)}
C {bool testing::internal::ShouldUseColor(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::String::CStringEquals(const char*, const char*)}
C {bool testing::internal::ShouldUseColor(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::String::CStringEquals(const char*, const char*)}
C {bool testing::internal::ShouldUseColor(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::String::CStringEquals(const char*, const char*)}
C {bool testing::internal::ShouldUseColor(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::String::CStringEquals(const char*, const char*)}
C {bool testing::internal::ShouldUseColor(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::String::CStringEquals(const char*, const char*)}
C {bool testing::internal::ShouldUseColor(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::String::CStringEquals(const char*, const char*)}
C {bool testing::internal::ShouldUseColor(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::String::CStringEquals(const char*, const char*)}
C {bool testing::internal::ShouldUseColor(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::internal::posix::GetEnv(const char*)}
C {bool testing::internal::ShouldUseColor(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::String::CaseInsensitiveCStringEquals(const char*, const char*)}
C {bool testing::internal::ShouldUseColor(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {const char* testing::internal::GetAnsiColorCode(testing::internal::GTestColor)} {../third-party/gtest/src/gtest.cc:2573}
F {void testing::TestCase::UnshuffleTests()} {../third-party/gtest/src/gtest.cc:2468}
C {void testing::TestCase::UnshuffleTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {void testing::TestCase::UnshuffleTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::reference = int&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {void testing::TestCase::ShuffleTests(testing::internal::Random*)} {../third-party/gtest/src/gtest.cc:2463}
C {void testing::TestCase::ShuffleTests(testing::internal::Random*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::Shuffle(testing::internal::Random*, std::vector<T>*) [with E = int]}
F {void testing::internal::Shuffle(testing::internal::Random*, std::vector<T>*) [with E = int]} {../third-party/gtest/src/gtest-internal-inl.h:332}
C {void testing::internal::Shuffle(testing::internal::Random*, std::vector<T>*) [with E = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ShuffleRange(testing::internal::Random*, int, int, std::vector<T>*) [with E = int]}
C {void testing::internal::Shuffle(testing::internal::Random*, std::vector<T>*) [with E = int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {void testing::TestCase::ClearResult()} {../third-party/gtest/src/gtest.cc:2457}
C {void testing::TestCase::ClearResult()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ForEach(const Container&, Functor) [with Container = std::vector<testing::TestInfo*>, Functor = void (*)(testing::TestInfo*)]}
C {void testing::TestCase::ClearResult()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::TestResult::Clear()}
F {void testing::internal::ForEach(const Container&, Functor) [with Container = std::vector<testing::TestInfo*>, Functor = void (*)(testing::TestInfo*)]} {../third-party/gtest/src/gtest-internal-inl.h:295}
C {void testing::internal::ForEach(const Container&, Functor) [with Container = std::vector<testing::TestInfo*>, Functor = void (*)(testing::TestInfo*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_Funct std::for_each(_IIter, _IIter, _Funct) [with _IIter = __gnu_cxx::__normal_iterator<testing::TestInfo* const*, std::vector<testing::TestInfo*> >, _Funct = void (*)(testing::TestInfo*)]}
C {void testing::internal::ForEach(const Container&, Functor) [with Container = std::vector<testing::TestInfo*>, Functor = void (*)(testing::TestInfo*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<testing::TestInfo* const*, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = testing::TestInfo* const*]}
C {void testing::internal::ForEach(const Container&, Functor) [with Container = std::vector<testing::TestInfo*>, Functor = void (*)(testing::TestInfo*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<testing::TestInfo* const*, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = testing::TestInfo* const*]}
F {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<testing::TestInfo* const*, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = testing::TestInfo* const*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:490}
C {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<testing::TestInfo* const*, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = testing::TestInfo* const*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::TestInfo* const*, _Container = std::vector<testing::TestInfo*>]}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::TestInfo* const*, _Container = std::vector<testing::TestInfo*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:720}
F {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<testing::TestInfo* const*, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = testing::TestInfo* const*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:472}
C {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<testing::TestInfo* const*, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = testing::TestInfo* const*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::TestInfo* const*, _Container = std::vector<testing::TestInfo*>]}
F {_Funct std::for_each(_IIter, _IIter, _Funct) [with _IIter = __gnu_cxx::__normal_iterator<testing::TestInfo* const*, std::vector<testing::TestInfo*> >, _Funct = void (*)(testing::TestInfo*)]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algo.h:4373}
C {_Funct std::for_each(_IIter, _IIter, _Funct) [with _IIter = __gnu_cxx::__normal_iterator<testing::TestInfo* const*, std::vector<testing::TestInfo*> >, _Funct = void (*)(testing::TestInfo*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestInfo* const*, _Container = std::vector<testing::TestInfo*>]}
C {_Funct std::for_each(_IIter, _IIter, _Funct) [with _IIter = __gnu_cxx::__normal_iterator<testing::TestInfo* const*, std::vector<testing::TestInfo*> >, _Funct = void (*)(testing::TestInfo*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = testing::TestInfo* const*, _Container = std::vector<testing::TestInfo*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::TestInfo* const*, std::vector<testing::TestInfo*> >]}
C {_Funct std::for_each(_IIter, _IIter, _Funct) [with _IIter = __gnu_cxx::__normal_iterator<testing::TestInfo* const*, std::vector<testing::TestInfo*> >, _Funct = void (*)(testing::TestInfo*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::TestInfo* const*, _Container = std::vector<testing::TestInfo*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::TestInfo* const&]}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::TestInfo* const*, _Container = std::vector<testing::TestInfo*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::TestInfo* const&]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:732}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = testing::TestInfo* const*, _Container = std::vector<testing::TestInfo*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::TestInfo* const*, std::vector<testing::TestInfo*> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:740}
F {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestInfo* const*, _Container = std::vector<testing::TestInfo*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:817}
C {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestInfo* const*, _Container = std::vector<testing::TestInfo*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestInfo* const*, _Container = std::vector<testing::TestInfo*>]}
C {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestInfo* const*, _Container = std::vector<testing::TestInfo*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestInfo* const*, _Container = std::vector<testing::TestInfo*>]}
F {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestInfo* const*, _Container = std::vector<testing::TestInfo*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:784}
F {static void testing::TestInfo::ClearTestResult(testing::TestInfo*)} {../third-party/gtest/include/gtest/gtest.h:715}
C {static void testing::TestInfo::ClearTestResult(testing::TestInfo*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::TestResult::Clear()}
F {void testing::TestCase::Run()} {../third-party/gtest/src/gtest.cc:2429}
C {void testing::TestCase::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::UnitTestImpl::set_current_test_case(testing::TestCase*)}
C {void testing::TestCase::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::TestCase, Result = void]}
C {void testing::TestCase::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::OsStackTraceGetterInterface* testing::internal::UnitTestImpl::os_stack_trace_getter()}
C {void testing::TestCase::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TimeInMillis testing::internal::GetTimeInMillis()}
C {void testing::TestCase::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::TestCase::total_test_count() const}
C {void testing::TestCase::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::TestInfo::Run()}
C {void testing::TestCase::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestInfo* testing::TestCase::GetMutableTestInfo(int)}
C {void testing::TestCase::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TimeInMillis testing::internal::GetTimeInMillis()}
C {void testing::TestCase::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::TestCase, Result = void]}
C {void testing::TestCase::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::OsStackTraceGetterInterface* testing::internal::UnitTestImpl::os_stack_trace_getter()}
C {void testing::TestCase::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestEventListener* testing::TestEventListeners::repeater()}
C {void testing::TestCase::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestEventListeners& testing::UnitTest::listeners()}
C {void testing::TestCase::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {static testing::UnitTest* testing::UnitTest::GetInstance()}
C {void testing::TestCase::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::UnitTestImpl::set_current_test_case(testing::TestCase*)}
C {void testing::TestCase::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UnitTestImpl* testing::internal::GetUnitTestImpl()}
F {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::TestCase, Result = void]} {../third-party/gtest/src/gtest.cc:2086}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::TestCase, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::TestCase, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::TestCase, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ReportFailureInUnknownLocation(testing::TestPartResult::Type, const string&)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::TestCase, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatCxxExceptionMessage(const char*, const char*)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::TestCase, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_begin_catch(void*)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::TestCase, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_eh_pointer(int)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::TestCase, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::TestCase, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::TestCase, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ReportFailureInUnknownLocation(testing::TestPartResult::Type, const string&)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::TestCase, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatCxxExceptionMessage(const char*, const char*)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::TestCase, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_begin_catch(void*)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::TestCase, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_eh_pointer(int)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::TestCase, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_rethrow()}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::TestCase, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_begin_catch(void*)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::TestCase, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_eh_pointer(int)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::TestCase, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::TestCase, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::TestCase, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::TestCase, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::TestCase, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::TestCase, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {Result testing::internal::HandleSehExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::TestCase, Result = void]}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::TestCase, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::UnitTestImpl::catch_exceptions() const}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::TestCase, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UnitTestImpl* testing::internal::GetUnitTestImpl()}
F {Result testing::internal::HandleSehExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::TestCase, Result = void]} {../third-party/gtest/src/gtest.cc:2059}
F {void testing::internal::UnitTestImpl::set_current_test_case(testing::TestCase*)} {../third-party/gtest/src/gtest-internal-inl.h:685}
F {void testing::TestCase::RunTearDownTestCase()} {../third-party/gtest/include/gtest/gtest.h:859}
F {void testing::TestCase::RunSetUpTestCase()} {../third-party/gtest/include/gtest/gtest.h:855}
F {void testing::TestCase::AddTestInfo(testing::TestInfo*)} {../third-party/gtest/src/gtest.cc:2423}
C {void testing::TestCase::AddTestInfo(testing::TestInfo*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::value_type = int]}
C {void testing::TestCase::AddTestInfo(testing::TestInfo*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = int, _Alloc = std::allocator<int>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {void testing::TestCase::AddTestInfo(testing::TestInfo*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::value_type = testing::TestInfo*]}
F {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::value_type = testing::TestInfo*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:826}
C {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::value_type = testing::TestInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]}
C {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::value_type = testing::TestInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]}
C {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::value_type = testing::TestInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::TestInfo*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestInfo**]}
F {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::TestInfo*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestInfo**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:107}
C {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::TestInfo*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t, void*)}
F {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:481}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::TestInfo**, _Container = std::vector<testing::TestInfo*>]}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::TestInfo**, _Container = std::vector<testing::TestInfo*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:720}
F {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/vector.tcc:300}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_rethrow()}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestInfo**, std::size_t = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::TestInfo**, _Tp = testing::TestInfo*]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestInfo*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::destroy(__gnu_cxx::new_allocator<_Tp>::pointer) [with _Tp = testing::TestInfo*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestInfo**]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_begin_catch(void*)}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_eh_pointer(int)}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestInfo**, std::size_t = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::TestInfo**, _Tp = testing::TestInfo*]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestInfo*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = testing::TestInfo**, _ForwardIterator = testing::TestInfo**, _Allocator = std::allocator<testing::TestInfo*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestInfo**, _Container = std::vector<testing::TestInfo*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestInfo*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = testing::TestInfo**, _ForwardIterator = testing::TestInfo**, _Allocator = std::allocator<testing::TestInfo*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestInfo**, _Container = std::vector<testing::TestInfo*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestInfo*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::TestInfo*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestInfo**]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename _Alloc::rebind<_Tp>::other::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestInfo**, std::size_t = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestInfo**, _Container = std::vector<testing::TestInfo*>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::TestInfo**, _Container = std::vector<testing::TestInfo*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::TestInfo*&]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::TestInfo**, _BI2 = testing::TestInfo**]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestInfo**, _Container = std::vector<testing::TestInfo*>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::TestInfo*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestInfo**]}
F {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::TestInfo**, _BI2 = testing::TestInfo**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:613}
C {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::TestInfo**, _BI2 = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestInfo**, _BI2 = testing::TestInfo**]}
C {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::TestInfo**, _BI2 = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::TestInfo**, typename std::_Miter_base<_Iterator>::iterator_type = testing::TestInfo**]}
C {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::TestInfo**, _BI2 = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::TestInfo**, typename std::_Miter_base<_Iterator>::iterator_type = testing::TestInfo**]}
F {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::TestInfo**, typename std::_Miter_base<_Iterator>::iterator_type = testing::TestInfo**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:282}
C {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::TestInfo**, typename std::_Miter_base<_Iterator>::iterator_type = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = testing::TestInfo**, bool _HasBase = false, std::_Iter_base<_Iterator, _HasBase>::iterator_type = testing::TestInfo**]}
F {static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = testing::TestInfo**, bool _HasBase = false, std::_Iter_base<_Iterator, _HasBase>::iterator_type = testing::TestInfo**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator_base_types.h:213}
F {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestInfo**, _BI2 = testing::TestInfo**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:586}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestInfo**, _BI2 = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestInfo**, _BI2 = testing::TestInfo**]}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestInfo**, _BI2 = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestInfo**, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestInfo**]}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestInfo**, _BI2 = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestInfo**, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestInfo**]}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestInfo**, _BI2 = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestInfo**, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestInfo**]}
F {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestInfo**, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestInfo**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:271}
C {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestInfo**, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = testing::TestInfo**, bool _HasBase = false, std::_Iter_base<_Iterator, _HasBase>::iterator_type = testing::TestInfo**]}
F {_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestInfo**, _BI2 = testing::TestInfo**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:568}
C {_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestInfo**, _BI2 = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _Tp* std::__copy_move_backward<_IsMove, true, std::random_access_iterator_tag>::__copy_move_b(const _Tp*, const _Tp*, _Tp*) [with _Tp = testing::TestInfo*, bool _IsMove = false]}
F {static _Tp* std::__copy_move_backward<_IsMove, true, std::random_access_iterator_tag>::__copy_move_b(const _Tp*, const _Tp*, _Tp*) [with _Tp = testing::TestInfo*, bool _IsMove = false]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:557}
C {static _Tp* std::__copy_move_backward<_IsMove, true, std::random_access_iterator_tag>::__copy_move_b(const _Tp*, const _Tp*, _Tp*) [with _Tp = testing::TestInfo*, bool _IsMove = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_memmove(void*, const void*, long unsigned int)}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::TestInfo**, _Container = std::vector<testing::TestInfo*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::TestInfo*&]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:732}
F {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:1239}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::__throw_length_error(const char*)}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:575}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = testing::TestInfo*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestInfo*>]}
F {const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestInfo*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:99}
F {__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = testing::TestInfo*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:101}
F {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:463}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestInfo**, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::TestInfo**, _Container = std::vector<testing::TestInfo*>]}
F {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestInfo**, _Container = std::vector<testing::TestInfo*>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:890}
C {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestInfo**, _Container = std::vector<testing::TestInfo*>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestInfo**, _Container = std::vector<testing::TestInfo*>]}
C {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestInfo**, _Container = std::vector<testing::TestInfo*>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestInfo**, _Container = std::vector<testing::TestInfo*>]}
F {typename _Alloc::rebind<_Tp>::other::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestInfo**, std::size_t = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:149}
C {typename _Alloc::rebind<_Tp>::other::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestInfo**, std::size_t = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::TestInfo*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestInfo**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::TestInfo*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestInfo**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:87}
C {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::TestInfo*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestInfo**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::TestInfo*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestInfo**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::__throw_bad_alloc()}
C {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::TestInfo*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestInfo**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = testing::TestInfo*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestInfo**, _Container = std::vector<testing::TestInfo*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:784}
F {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = testing::TestInfo**, _ForwardIterator = testing::TestInfo**, _Allocator = std::allocator<testing::TestInfo*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:264}
C {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = testing::TestInfo**, _ForwardIterator = testing::TestInfo**, _Allocator = std::allocator<testing::TestInfo*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = testing::TestInfo**, _ForwardIterator = testing::TestInfo**, _Tp = testing::TestInfo*]}
F {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = testing::TestInfo**, _ForwardIterator = testing::TestInfo**, _Tp = testing::TestInfo*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:257}
C {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = testing::TestInfo**, _ForwardIterator = testing::TestInfo**, _Tp = testing::TestInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestInfo**, _ForwardIterator = testing::TestInfo**]}
F {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestInfo**, _ForwardIterator = testing::TestInfo**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:109}
C {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestInfo**, _ForwardIterator = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _ForwardIterator std::__uninitialized_copy<true>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestInfo**, _ForwardIterator = testing::TestInfo**]}
F {static _ForwardIterator std::__uninitialized_copy<true>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestInfo**, _ForwardIterator = testing::TestInfo**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:93}
C {static _ForwardIterator std::__uninitialized_copy<true>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestInfo**, _ForwardIterator = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_OI std::copy(_II, _II, _OI) [with _II = testing::TestInfo**, _OI = testing::TestInfo**]}
F {_OI std::copy(_II, _II, _OI) [with _II = testing::TestInfo**, _OI = testing::TestInfo**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:444}
C {_OI std::copy(_II, _II, _OI) [with _II = testing::TestInfo**, _OI = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = testing::TestInfo**, _OI = testing::TestInfo**]}
C {_OI std::copy(_II, _II, _OI) [with _II = testing::TestInfo**, _OI = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::TestInfo**, typename std::_Miter_base<_Iterator>::iterator_type = testing::TestInfo**]}
C {_OI std::copy(_II, _II, _OI) [with _II = testing::TestInfo**, _OI = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::TestInfo**, typename std::_Miter_base<_Iterator>::iterator_type = testing::TestInfo**]}
F {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = testing::TestInfo**, _OI = testing::TestInfo**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:418}
C {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = testing::TestInfo**, _OI = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false, _II = testing::TestInfo**, _OI = testing::TestInfo**]}
C {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = testing::TestInfo**, _OI = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestInfo**, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestInfo**]}
C {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = testing::TestInfo**, _OI = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestInfo**, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestInfo**]}
C {_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false, _II = testing::TestInfo**, _OI = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestInfo**, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestInfo**]}
F {_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false, _II = testing::TestInfo**, _OI = testing::TestInfo**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:373}
C {_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false, _II = testing::TestInfo**, _OI = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = testing::TestInfo*, bool _IsMove = false]}
F {static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = testing::TestInfo*, bool _IsMove = false]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:362}
C {static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = testing::TestInfo*, bool _IsMove = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_memmove(void*, const void*, long unsigned int)}
F {void __gnu_cxx::new_allocator<_Tp>::destroy(__gnu_cxx::new_allocator<_Tp>::pointer) [with _Tp = testing::TestInfo*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestInfo**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:118}
F {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestInfo*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:95}
F {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::TestInfo**, _Tp = testing::TestInfo*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:150}
C {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::TestInfo**, _Tp = testing::TestInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::TestInfo**]}
F {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::TestInfo**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:123}
C {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::TestInfo**]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void std::_Destroy_aux<true>::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::TestInfo**]}
F {static void std::_Destroy_aux<true>::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::TestInfo**]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:113}
F {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestInfo**, std::size_t = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:153}
C {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestInfo**, std::size_t = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = testing::TestInfo*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestInfo**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = testing::TestInfo*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestInfo**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:97}
C {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = testing::TestInfo*, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestInfo**, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
F {testing::TestInfo* testing::TestCase::GetMutableTestInfo(int)} {../third-party/gtest/src/gtest.cc:2416}
C {testing::TestInfo* testing::TestCase::GetMutableTestInfo(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::reference = testing::TestInfo*&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {testing::TestInfo* testing::TestCase::GetMutableTestInfo(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {E testing::internal::GetElementOr(const std::vector<T>&, int, E) [with E = int]}
F {const testing::TestInfo* testing::TestCase::GetTestInfo(int) const} {../third-party/gtest/src/gtest.cc:2409}
C {const testing::TestInfo* testing::TestCase::GetTestInfo(int) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::const_reference = testing::TestInfo* const&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {const testing::TestInfo* testing::TestCase::GetTestInfo(int) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {E testing::internal::GetElementOr(const std::vector<T>&, int, E) [with E = int]}
F {virtual testing::TestCase::~TestCase()} {../third-party/gtest/src/gtest.cc:2402}
C {virtual testing::TestCase::~TestCase()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual testing::TestCase::~TestCase()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestCase::~TestCase()}
F {testing::TestCase::~TestCase()} {../third-party/gtest/src/gtest.cc:2402}
C {testing::TestCase::~TestCase()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestCase::~TestCase()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = const std::basic_string<char>]}
C {testing::TestCase::~TestCase()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>]}
C {testing::TestCase::~TestCase()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = int, _Alloc = std::allocator<int>]}
C {testing::TestCase::~TestCase()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestResult::~TestResult()}
C {testing::TestCase::~TestCase()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::TestCase::~TestCase()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestCase::~TestCase()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = const std::basic_string<char>]}
C {testing::TestCase::~TestCase()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>]}
C {testing::TestCase::~TestCase()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = int, _Alloc = std::allocator<int>]}
C {testing::TestCase::~TestCase()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestResult::~TestResult()}
C {testing::TestCase::~TestCase()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ForEach(const Container&, Functor) [with Container = std::vector<testing::TestInfo*>, Functor = void (*)(testing::TestInfo*)]}
F {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:349}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>]}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>]}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::TestInfo**, _Tp = testing::TestInfo*]}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestInfo*>]}
F {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:141}
C {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<testing::TestInfo*, std::allocator<testing::TestInfo*> >::_Vector_impl::~_Vector_impl()}
C {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<testing::TestInfo*, std::allocator<testing::TestInfo*> >::_Vector_impl::~_Vector_impl()}
C {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestInfo**, std::size_t = long unsigned int]}
F {std::_Vector_base<testing::TestInfo*, std::allocator<testing::TestInfo*> >::_Vector_impl::~_Vector_impl()} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:75}
C {std::_Vector_base<testing::TestInfo*, std::allocator<testing::TestInfo*> >::_Vector_impl::~_Vector_impl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = testing::TestInfo*]}
F {std::allocator<_Alloc>::~allocator() [with _Tp = testing::TestInfo*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:115}
C {std::allocator<_Alloc>::~allocator() [with _Tp = testing::TestInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = testing::TestInfo*]}
F {__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = testing::TestInfo*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:76}
F {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = const std::basic_string<char>]} {../third-party/gtest/include/gtest/internal/gtest-port.h:895}
C {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = const std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::scoped_ptr<T>::reset(T*) [with T = const std::basic_string<char>]}
F {void testing::internal::scoped_ptr<T>::reset(T*) [with T = const std::basic_string<char>]} {../third-party/gtest/include/gtest/internal/gtest-port.h:907}
C {void testing::internal::scoped_ptr<T>::reset(T*) [with T = const std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {void testing::internal::scoped_ptr<T>::reset(T*) [with T = const std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::scoped_ptr<T>::reset(T*) [with T = const std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsTrue(bool)}
F {void testing::internal::Delete(T*) [with T = testing::TestInfo]} {../third-party/gtest/src/gtest-internal-inl.h:339}
C {void testing::internal::Delete(T*) [with T = testing::TestInfo]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {void testing::internal::Delete(T*) [with T = testing::TestInfo]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestInfo::~TestInfo()}
F {testing::TestCase::TestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest.cc:2390}
C {testing::TestCase::TestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestCase::TestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = const std::basic_string<char>]}
C {testing::TestCase::TestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>]}
C {testing::TestCase::TestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = int, _Alloc = std::allocator<int>]}
C {testing::TestCase::TestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::TestCase::TestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::TestCase::TestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::TestCase::TestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestResult::TestResult()}
C {testing::TestCase::TestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::vector() [with _Tp = int, _Alloc = std::allocator<int>]}
C {testing::TestCase::TestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::vector() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>]}
C {testing::TestCase::TestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::TestCase::TestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::scoped_ptr(T*) [with T = const std::basic_string<char>]}
C {testing::TestCase::TestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestCase::TestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {testing::TestCase::TestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {testing::TestCase::TestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::TestCase::TestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestCase::TestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
F {testing::internal::scoped_ptr<T>::scoped_ptr(T*) [with T = const std::basic_string<char>]} {../third-party/gtest/include/gtest/internal/gtest-port.h:894}
F {std::vector<_Tp, _Alloc>::vector() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:217}
C {std::vector<_Tp, _Alloc>::vector() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>]}
F {std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:106}
C {std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>]}
F {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:82}
C {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = testing::TestInfo*]}
F {std::allocator<_Alloc>::allocator() [with _Tp = testing::TestInfo*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:107}
C {std::allocator<_Alloc>::allocator() [with _Tp = testing::TestInfo*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = testing::TestInfo*]}
F {__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = testing::TestInfo*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:69}
F {int testing::TestCase::total_test_count() const} {../third-party/gtest/src/gtest.cc:2377}
C {int testing::TestCase::total_test_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {int testing::TestCase::test_to_run_count() const} {../third-party/gtest/src/gtest.cc:2372}
C {int testing::TestCase::test_to_run_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::CountIf(const Container&, Predicate) [with Container = std::vector<testing::TestInfo*>, Predicate = bool (*)(const testing::TestInfo*)]}
F {int testing::internal::CountIf(const Container&, Predicate) [with Container = std::vector<testing::TestInfo*>, Predicate = bool (*)(const testing::TestInfo*)]} {../third-party/gtest/src/gtest-internal-inl.h:282}
C {int testing::internal::CountIf(const Container&, Predicate) [with Container = std::vector<testing::TestInfo*>, Predicate = bool (*)(const testing::TestInfo*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestInfo* const*, _Container = std::vector<testing::TestInfo*>]}
C {int testing::internal::CountIf(const Container&, Predicate) [with Container = std::vector<testing::TestInfo*>, Predicate = bool (*)(const testing::TestInfo*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<testing::TestInfo* const*, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = testing::TestInfo* const*]}
C {int testing::internal::CountIf(const Container&, Predicate) [with Container = std::vector<testing::TestInfo*>, Predicate = bool (*)(const testing::TestInfo*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = testing::TestInfo* const*, _Container = std::vector<testing::TestInfo*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::TestInfo* const*, std::vector<testing::TestInfo*> >]}
C {int testing::internal::CountIf(const Container&, Predicate) [with Container = std::vector<testing::TestInfo*>, Predicate = bool (*)(const testing::TestInfo*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::TestInfo* const*, _Container = std::vector<testing::TestInfo*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::TestInfo* const&]}
C {int testing::internal::CountIf(const Container&, Predicate) [with Container = std::vector<testing::TestInfo*>, Predicate = bool (*)(const testing::TestInfo*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<testing::TestInfo* const*, std::vector<testing::TestInfo*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = testing::TestInfo* const*]}
F {static bool testing::TestCase::ShouldRunTest(const testing::TestInfo*)} {../third-party/gtest/include/gtest/gtest.h:888}
C {static bool testing::TestCase::ShouldRunTest(const testing::TestInfo*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::TestInfo::should_run() const}
F {int testing::TestCase::reportable_test_count() const} {../third-party/gtest/src/gtest.cc:2367}
C {int testing::TestCase::reportable_test_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::CountIf(const Container&, Predicate) [with Container = std::vector<testing::TestInfo*>, Predicate = bool (*)(const testing::TestInfo*)]}
F {static bool testing::TestCase::TestReportable(const testing::TestInfo*)} {../third-party/gtest/include/gtest/gtest.h:883}
C {static bool testing::TestCase::TestReportable(const testing::TestInfo*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::TestInfo::is_reportable() const}
F {int testing::TestCase::disabled_test_count() const} {../third-party/gtest/src/gtest.cc:2362}
C {int testing::TestCase::disabled_test_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::CountIf(const Container&, Predicate) [with Container = std::vector<testing::TestInfo*>, Predicate = bool (*)(const testing::TestInfo*)]}
F {static bool testing::TestCase::TestDisabled(const testing::TestInfo*)} {../third-party/gtest/include/gtest/gtest.h:878}
F {int testing::TestCase::reportable_disabled_test_count() const} {../third-party/gtest/src/gtest.cc:2357}
C {int testing::TestCase::reportable_disabled_test_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::CountIf(const Container&, Predicate) [with Container = std::vector<testing::TestInfo*>, Predicate = bool (*)(const testing::TestInfo*)]}
F {static bool testing::TestCase::TestReportableDisabled(const testing::TestInfo*)} {../third-party/gtest/include/gtest/gtest.h:873}
C {static bool testing::TestCase::TestReportableDisabled(const testing::TestInfo*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::TestInfo::is_reportable() const}
F {int testing::TestCase::failed_test_count() const} {../third-party/gtest/src/gtest.cc:2352}
C {int testing::TestCase::failed_test_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::CountIf(const Container&, Predicate) [with Container = std::vector<testing::TestInfo*>, Predicate = bool (*)(const testing::TestInfo*)]}
F {static bool testing::TestCase::TestFailed(const testing::TestInfo*)} {../third-party/gtest/include/gtest/gtest.h:867}
C {static bool testing::TestCase::TestFailed(const testing::TestInfo*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::TestResult::Failed() const}
C {static bool testing::TestCase::TestFailed(const testing::TestInfo*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::TestResult* testing::TestInfo::result() const}
C {static bool testing::TestCase::TestFailed(const testing::TestInfo*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::TestInfo::should_run() const}
F {int testing::TestCase::successful_test_count() const} {../third-party/gtest/src/gtest.cc:2347}
C {int testing::TestCase::successful_test_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::CountIf(const Container&, Predicate) [with Container = std::vector<testing::TestInfo*>, Predicate = bool (*)(const testing::TestInfo*)]}
F {static bool testing::TestCase::TestPassed(const testing::TestInfo*)} {../third-party/gtest/include/gtest/gtest.h:862}
C {static bool testing::TestCase::TestPassed(const testing::TestInfo*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::TestResult::Passed() const}
C {static bool testing::TestCase::TestPassed(const testing::TestInfo*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::TestResult* testing::TestInfo::result() const}
C {static bool testing::TestCase::TestPassed(const testing::TestInfo*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::TestInfo::should_run() const}
F {void testing::TestInfo::Run()} {../third-party/gtest/src/gtest.cc:2300}
C {void testing::TestInfo::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::UnitTestImpl::set_current_test_info(testing::TestInfo*)}
C {void testing::TestInfo::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::TestResult::set_elapsed_time(testing::TimeInMillis)}
C {void testing::TestInfo::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TimeInMillis testing::internal::GetTimeInMillis()}
C {void testing::TestInfo::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::Test, Result = void]}
C {void testing::TestInfo::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::OsStackTraceGetterInterface* testing::internal::UnitTestImpl::os_stack_trace_getter()}
C {void testing::TestInfo::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::Test::Run()}
C {void testing::TestInfo::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::Test::HasFatalFailure()}
C {void testing::TestInfo::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::TestFactoryBase, Result = testing::Test*]}
C {void testing::TestInfo::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::OsStackTraceGetterInterface* testing::internal::UnitTestImpl::os_stack_trace_getter()}
C {void testing::TestInfo::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TimeInMillis testing::internal::GetTimeInMillis()}
C {void testing::TestInfo::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestEventListener* testing::TestEventListeners::repeater()}
C {void testing::TestInfo::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestEventListeners& testing::UnitTest::listeners()}
C {void testing::TestInfo::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {static testing::UnitTest* testing::UnitTest::GetInstance()}
C {void testing::TestInfo::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::UnitTestImpl::set_current_test_info(testing::TestInfo*)}
C {void testing::TestInfo::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UnitTestImpl* testing::internal::GetUnitTestImpl()}
F {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::TestFactoryBase, Result = testing::Test*]} {../third-party/gtest/src/gtest.cc:2086}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::TestFactoryBase, Result = testing::Test*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::TestFactoryBase, Result = testing::Test*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::TestFactoryBase, Result = testing::Test*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ReportFailureInUnknownLocation(testing::TestPartResult::Type, const string&)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::TestFactoryBase, Result = testing::Test*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatCxxExceptionMessage(const char*, const char*)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::TestFactoryBase, Result = testing::Test*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_begin_catch(void*)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::TestFactoryBase, Result = testing::Test*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_eh_pointer(int)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::TestFactoryBase, Result = testing::Test*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::TestFactoryBase, Result = testing::Test*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::TestFactoryBase, Result = testing::Test*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ReportFailureInUnknownLocation(testing::TestPartResult::Type, const string&)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::TestFactoryBase, Result = testing::Test*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatCxxExceptionMessage(const char*, const char*)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::TestFactoryBase, Result = testing::Test*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_begin_catch(void*)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::TestFactoryBase, Result = testing::Test*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_eh_pointer(int)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::TestFactoryBase, Result = testing::Test*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_rethrow()}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::TestFactoryBase, Result = testing::Test*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_begin_catch(void*)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::TestFactoryBase, Result = testing::Test*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_eh_pointer(int)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::TestFactoryBase, Result = testing::Test*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::TestFactoryBase, Result = testing::Test*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::TestFactoryBase, Result = testing::Test*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::TestFactoryBase, Result = testing::Test*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::TestFactoryBase, Result = testing::Test*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::TestFactoryBase, Result = testing::Test*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {Result testing::internal::HandleSehExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::TestFactoryBase, Result = testing::Test*]}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::TestFactoryBase, Result = testing::Test*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::UnitTestImpl::catch_exceptions() const}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::TestFactoryBase, Result = testing::Test*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UnitTestImpl* testing::internal::GetUnitTestImpl()}
F {Result testing::internal::HandleSehExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::internal::TestFactoryBase, Result = testing::Test*]} {../third-party/gtest/src/gtest.cc:2059}
F {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::Test, Result = void]} {../third-party/gtest/src/gtest.cc:2086}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::Test, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::Test, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::Test, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ReportFailureInUnknownLocation(testing::TestPartResult::Type, const string&)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::Test, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatCxxExceptionMessage(const char*, const char*)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::Test, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_begin_catch(void*)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::Test, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_eh_pointer(int)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::Test, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::Test, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::Test, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ReportFailureInUnknownLocation(testing::TestPartResult::Type, const string&)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::Test, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatCxxExceptionMessage(const char*, const char*)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::Test, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_begin_catch(void*)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::Test, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_eh_pointer(int)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::Test, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_rethrow()}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::Test, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_begin_catch(void*)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::Test, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_eh_pointer(int)}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::Test, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::Test, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::Test, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::Test, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::Test, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::Test, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {Result testing::internal::HandleSehExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::Test, Result = void]}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::Test, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::UnitTestImpl::catch_exceptions() const}
C {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::Test, Result = void]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UnitTestImpl* testing::internal::GetUnitTestImpl()}
F {Result testing::internal::HandleSehExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::Test, Result = void]} {../third-party/gtest/src/gtest.cc:2059}
F {void testing::TestResult::set_elapsed_time(testing::TimeInMillis)} {../third-party/gtest/include/gtest/gtest.h:561}
F {void testing::internal::UnitTestImpl::set_current_test_info(testing::TestInfo*)} {../third-party/gtest/src/gtest-internal-inl.h:692}
F {void testing::Test::DeleteSelf_()} {../third-party/gtest/include/gtest/gtest.h:429}
F {void testing::internal::UnitTestImpl::RegisterParameterizedTests()} {../third-party/gtest/src/gtest.cc:2287}
C {void testing::internal::UnitTestImpl::RegisterParameterizedTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ParameterizedTestCaseRegistry::RegisterTests()}
F {void testing::internal::ParameterizedTestCaseRegistry::RegisterTests()} {../third-party/gtest/include/gtest/internal/gtest-param-util.h:599}
C {void testing::internal::ParameterizedTestCaseRegistry::RegisterTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::internal::ParameterizedTestCaseInfoBase**, _Container = std::vector<testing::internal::ParameterizedTestCaseInfoBase*>]}
C {void testing::internal::ParameterizedTestCaseRegistry::RegisterTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::ParameterizedTestCaseInfoBase**, std::vector<testing::internal::ParameterizedTestCaseInfoBase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::ParameterizedTestCaseInfoBase**]}
C {void testing::internal::ParameterizedTestCaseRegistry::RegisterTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = testing::internal::ParameterizedTestCaseInfoBase**, _Container = std::vector<testing::internal::ParameterizedTestCaseInfoBase*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::internal::ParameterizedTestCaseInfoBase**, std::vector<testing::internal::ParameterizedTestCaseInfoBase*> >]}
C {void testing::internal::ParameterizedTestCaseRegistry::RegisterTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::internal::ParameterizedTestCaseInfoBase**, _Container = std::vector<testing::internal::ParameterizedTestCaseInfoBase*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::internal::ParameterizedTestCaseInfoBase*&]}
C {void testing::internal::ParameterizedTestCaseRegistry::RegisterTests()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = testing::internal::ParameterizedTestCaseInfoBase*, _Alloc = std::allocator<testing::internal::ParameterizedTestCaseInfoBase*>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::internal::ParameterizedTestCaseInfoBase**, std::vector<testing::internal::ParameterizedTestCaseInfoBase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::internal::ParameterizedTestCaseInfoBase**]}
F {void testing::internal::ReportInvalidTestCaseType(const char*, const char*, int)} {../third-party/gtest/src/gtest.cc:2233}
C {void testing::internal::ReportInvalidTestCaseType(const char*, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {void testing::internal::ReportInvalidTestCaseType(const char*, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::ReportInvalidTestCaseType(const char*, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::ReportInvalidTestCaseType(const char*, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {void testing::internal::ReportInvalidTestCaseType(const char*, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::ReportInvalidTestCaseType(const char*, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::ReportInvalidTestCaseType(const char*, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int fprintf(FILE*, const char*, ...)}
C {void testing::internal::ReportInvalidTestCaseType(const char*, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::ReportInvalidTestCaseType(const char*, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatFileLocation(const char*, int)}
C {void testing::internal::ReportInvalidTestCaseType(const char*, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::ReportInvalidTestCaseType(const char*, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::Message::GetString() const}
C {void testing::internal::ReportInvalidTestCaseType(const char*, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [12], testing::Message = testing::Message]}
C {void testing::internal::ReportInvalidTestCaseType(const char*, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [68], testing::Message = testing::Message]}
C {void testing::internal::ReportInvalidTestCaseType(const char*, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [62], testing::Message = testing::Message]}
C {void testing::internal::ReportInvalidTestCaseType(const char*, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [62], testing::Message = testing::Message]}
C {void testing::internal::ReportInvalidTestCaseType(const char*, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [63], testing::Message = testing::Message]}
C {void testing::internal::ReportInvalidTestCaseType(const char*, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [13], testing::Message = testing::Message]}
C {void testing::internal::ReportInvalidTestCaseType(const char*, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]}
C {void testing::internal::ReportInvalidTestCaseType(const char*, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [31], testing::Message = testing::Message]}
C {void testing::internal::ReportInvalidTestCaseType(const char*, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [64], testing::Message = testing::Message]}
C {void testing::internal::ReportInvalidTestCaseType(const char*, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [3], testing::Message = testing::Message]}
C {void testing::internal::ReportInvalidTestCaseType(const char*, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]}
C {void testing::internal::ReportInvalidTestCaseType(const char*, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [37], testing::Message = testing::Message]}
C {void testing::internal::ReportInvalidTestCaseType(const char*, const char*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [37], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [37], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [37], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [64], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [64], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [64], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [31], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [31], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [31], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [63], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [63], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [63], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [62], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [62], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [62], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [68], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [68], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [68], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::TestInfo* testing::internal::MakeAndRegisterTestInfo(const char*, const char*, const char*, const char*, testing::internal::TypeId, testing::internal::SetUpTestCaseFunc, testing::internal::TearDownTestCaseFunc, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest.cc:2216}
C {testing::TestInfo* testing::internal::MakeAndRegisterTestInfo(const char*, const char*, const char*, const char*, testing::internal::TypeId, testing::internal::SetUpTestCaseFunc, testing::internal::TearDownTestCaseFunc, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::TestInfo* testing::internal::MakeAndRegisterTestInfo(const char*, const char*, const char*, const char*, testing::internal::TypeId, testing::internal::SetUpTestCaseFunc, testing::internal::TearDownTestCaseFunc, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestInfo* testing::internal::MakeAndRegisterTestInfo(const char*, const char*, const char*, const char*, testing::internal::TypeId, testing::internal::SetUpTestCaseFunc, testing::internal::TearDownTestCaseFunc, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::TestInfo* testing::internal::MakeAndRegisterTestInfo(const char*, const char*, const char*, const char*, testing::internal::TypeId, testing::internal::SetUpTestCaseFunc, testing::internal::TearDownTestCaseFunc, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestInfo* testing::internal::MakeAndRegisterTestInfo(const char*, const char*, const char*, const char*, testing::internal::TypeId, testing::internal::SetUpTestCaseFunc, testing::internal::TearDownTestCaseFunc, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::TestInfo* testing::internal::MakeAndRegisterTestInfo(const char*, const char*, const char*, const char*, testing::internal::TypeId, testing::internal::SetUpTestCaseFunc, testing::internal::TearDownTestCaseFunc, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::UnitTestImpl::AddTestInfo(testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc, testing::TestInfo*)}
C {testing::TestInfo* testing::internal::MakeAndRegisterTestInfo(const char*, const char*, const char*, const char*, testing::internal::TypeId, testing::internal::SetUpTestCaseFunc, testing::internal::TearDownTestCaseFunc, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UnitTestImpl* testing::internal::GetUnitTestImpl()}
C {testing::TestInfo* testing::internal::MakeAndRegisterTestInfo(const char*, const char*, const char*, const char*, testing::internal::TypeId, testing::internal::SetUpTestCaseFunc, testing::internal::TearDownTestCaseFunc, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::TestInfo* testing::internal::MakeAndRegisterTestInfo(const char*, const char*, const char*, const char*, testing::internal::TypeId, testing::internal::SetUpTestCaseFunc, testing::internal::TearDownTestCaseFunc, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestInfo* testing::internal::MakeAndRegisterTestInfo(const char*, const char*, const char*, const char*, testing::internal::TypeId, testing::internal::SetUpTestCaseFunc, testing::internal::TearDownTestCaseFunc, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::TestInfo* testing::internal::MakeAndRegisterTestInfo(const char*, const char*, const char*, const char*, testing::internal::TypeId, testing::internal::SetUpTestCaseFunc, testing::internal::TearDownTestCaseFunc, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestInfo* testing::internal::MakeAndRegisterTestInfo(const char*, const char*, const char*, const char*, testing::internal::TypeId, testing::internal::SetUpTestCaseFunc, testing::internal::TearDownTestCaseFunc, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestInfo::TestInfo(const string&, const string&, const char*, const char*, testing::internal::TypeId, testing::internal::TestFactoryBase*)}
C {testing::TestInfo* testing::internal::MakeAndRegisterTestInfo(const char*, const char*, const char*, const char*, testing::internal::TypeId, testing::internal::SetUpTestCaseFunc, testing::internal::TearDownTestCaseFunc, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {testing::TestInfo* testing::internal::MakeAndRegisterTestInfo(const char*, const char*, const char*, const char*, testing::internal::TypeId, testing::internal::SetUpTestCaseFunc, testing::internal::TearDownTestCaseFunc, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestInfo* testing::internal::MakeAndRegisterTestInfo(const char*, const char*, const char*, const char*, testing::internal::TypeId, testing::internal::SetUpTestCaseFunc, testing::internal::TearDownTestCaseFunc, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {testing::TestInfo* testing::internal::MakeAndRegisterTestInfo(const char*, const char*, const char*, const char*, testing::internal::TypeId, testing::internal::SetUpTestCaseFunc, testing::internal::TearDownTestCaseFunc, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestInfo* testing::internal::MakeAndRegisterTestInfo(const char*, const char*, const char*, const char*, testing::internal::TypeId, testing::internal::SetUpTestCaseFunc, testing::internal::TearDownTestCaseFunc, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
F {void testing::internal::UnitTestImpl::AddTestInfo(testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc, testing::TestInfo*)} {../third-party/gtest/src/gtest-internal-inl.h:654}
C {void testing::internal::UnitTestImpl::AddTestInfo(testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc, testing::TestInfo*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {void testing::internal::UnitTestImpl::AddTestInfo(testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc, testing::TestInfo*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {void testing::internal::UnitTestImpl::AddTestInfo(testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc, testing::TestInfo*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::TestCase::AddTestInfo(testing::TestInfo*)}
C {void testing::internal::UnitTestImpl::AddTestInfo(testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc, testing::TestInfo*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestCase* testing::internal::UnitTestImpl::GetTestCase(const char*, const char*, testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc)}
C {void testing::internal::UnitTestImpl::AddTestInfo(testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc, testing::TestInfo*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestInfo::test_case_name() const}
C {void testing::internal::UnitTestImpl::AddTestInfo(testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc, testing::TestInfo*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestInfo::type_param() const}
C {void testing::internal::UnitTestImpl::AddTestInfo(testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc, testing::TestInfo*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {void testing::internal::UnitTestImpl::AddTestInfo(testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc, testing::TestInfo*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::UnitTestImpl::AddTestInfo(testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc, testing::TestInfo*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {void testing::internal::UnitTestImpl::AddTestInfo(testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc, testing::TestInfo*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {void testing::internal::UnitTestImpl::AddTestInfo(testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc, testing::TestInfo*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {void testing::internal::UnitTestImpl::AddTestInfo(testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc, testing::TestInfo*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsTrue(bool)}
C {void testing::internal::UnitTestImpl::AddTestInfo(testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc, testing::TestInfo*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::FilePath::IsEmpty() const}
C {void testing::internal::UnitTestImpl::AddTestInfo(testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc, testing::TestInfo*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {void testing::internal::UnitTestImpl::AddTestInfo(testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc, testing::TestInfo*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::FilePath::Set(const testing::internal::FilePath&)}
C {void testing::internal::UnitTestImpl::AddTestInfo(testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc, testing::TestInfo*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static testing::internal::FilePath testing::internal::FilePath::GetCurrentDir()}
C {void testing::internal::UnitTestImpl::AddTestInfo(testing::Test::SetUpTestCaseFunc, testing::Test::TearDownTestCaseFunc, testing::TestInfo*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::FilePath::IsEmpty() const}
F {testing::TestInfo::~TestInfo()} {../third-party/gtest/src/gtest.cc:2195}
C {testing::TestInfo::~TestInfo()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestInfo::~TestInfo()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestInfo::~TestInfo()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = const std::basic_string<char>]}
C {testing::TestInfo::~TestInfo()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = const std::basic_string<char>]}
C {testing::TestInfo::~TestInfo()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestResult::~TestResult()}
C {testing::TestInfo::~TestInfo()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestInfo::~TestInfo()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestInfo::~TestInfo()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = const std::basic_string<char>]}
C {testing::TestInfo::~TestInfo()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = const std::basic_string<char>]}
C {testing::TestInfo::~TestInfo()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestResult::~TestResult()}
F {testing::TestInfo::TestInfo(const string&, const string&, const char*, const char*, testing::internal::TypeId, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest.cc:2177}
C {testing::TestInfo::TestInfo(const string&, const string&, const char*, const char*, testing::internal::TypeId, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestInfo::TestInfo(const string&, const string&, const char*, const char*, testing::internal::TypeId, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestInfo::TestInfo(const string&, const string&, const char*, const char*, testing::internal::TypeId, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = const std::basic_string<char>]}
C {testing::TestInfo::TestInfo(const string&, const string&, const char*, const char*, testing::internal::TypeId, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = const std::basic_string<char>]}
C {testing::TestInfo::TestInfo(const string&, const string&, const char*, const char*, testing::internal::TypeId, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::TestInfo::TestInfo(const string&, const string&, const char*, const char*, testing::internal::TypeId, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::TestInfo::TestInfo(const string&, const string&, const char*, const char*, testing::internal::TypeId, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::TestInfo::TestInfo(const string&, const string&, const char*, const char*, testing::internal::TypeId, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::TestInfo::TestInfo(const string&, const string&, const char*, const char*, testing::internal::TypeId, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestResult::TestResult()}
C {testing::TestInfo::TestInfo(const string&, const string&, const char*, const char*, testing::internal::TypeId, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::TestInfo::TestInfo(const string&, const string&, const char*, const char*, testing::internal::TypeId, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::scoped_ptr(T*) [with T = const std::basic_string<char>]}
C {testing::TestInfo::TestInfo(const string&, const string&, const char*, const char*, testing::internal::TypeId, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestInfo::TestInfo(const string&, const string&, const char*, const char*, testing::internal::TypeId, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {testing::TestInfo::TestInfo(const string&, const string&, const char*, const char*, testing::internal::TypeId, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {testing::TestInfo::TestInfo(const string&, const string&, const char*, const char*, testing::internal::TypeId, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::TestInfo::TestInfo(const string&, const string&, const char*, const char*, testing::internal::TypeId, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::scoped_ptr(T*) [with T = const std::basic_string<char>]}
C {testing::TestInfo::TestInfo(const string&, const string&, const char*, const char*, testing::internal::TypeId, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestInfo::TestInfo(const string&, const string&, const char*, const char*, testing::internal::TypeId, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {testing::TestInfo::TestInfo(const string&, const string&, const char*, const char*, testing::internal::TypeId, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {testing::TestInfo::TestInfo(const string&, const string&, const char*, const char*, testing::internal::TypeId, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {testing::TestInfo::TestInfo(const string&, const string&, const char*, const char*, testing::internal::TypeId, testing::internal::TestFactoryBase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
F {static bool testing::Test::HasNonfatalFailure()} {../third-party/gtest/src/gtest.cc:2168}
C {static bool testing::Test::HasNonfatalFailure()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::TestResult::HasNonfatalFailure() const}
C {static bool testing::Test::HasNonfatalFailure()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestResult* testing::internal::UnitTestImpl::current_test_result()}
C {static bool testing::Test::HasNonfatalFailure()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UnitTestImpl* testing::internal::GetUnitTestImpl()}
F {static bool testing::Test::HasFatalFailure()} {../third-party/gtest/src/gtest.cc:2163}
C {static bool testing::Test::HasFatalFailure()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::TestResult::HasFatalFailure() const}
C {static bool testing::Test::HasFatalFailure()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestResult* testing::internal::UnitTestImpl::current_test_result()}
C {static bool testing::Test::HasFatalFailure()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UnitTestImpl* testing::internal::GetUnitTestImpl()}
F {void testing::Test::Run()} {../third-party/gtest/src/gtest.cc:2141}
C {void testing::Test::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::Test, Result = void]}
C {void testing::Test::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::OsStackTraceGetterInterface* testing::internal::UnitTestImpl::os_stack_trace_getter()}
C {void testing::Test::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::Test, Result = void]}
C {void testing::Test::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::OsStackTraceGetterInterface* testing::internal::UnitTestImpl::os_stack_trace_getter()}
C {void testing::Test::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::Test::HasFatalFailure()}
C {void testing::Test::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {Result testing::internal::HandleExceptionsInMethodIfSupported(T*, Result (T::*)(), const char*) [with T = testing::Test, Result = void]}
C {void testing::Test::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::OsStackTraceGetterInterface* testing::internal::UnitTestImpl::os_stack_trace_getter()}
C {void testing::Test::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UnitTestImpl* testing::internal::GetUnitTestImpl()}
C {void testing::Test::Run()} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::Test::HasSameFixtureClass()}
F {testing::internal::GoogleTestFailureException::GoogleTestFailureException(const testing::TestPartResult&)} {../third-party/gtest/src/gtest.cc:2044}
C {testing::internal::GoogleTestFailureException::GoogleTestFailureException(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::internal::GoogleTestFailureException::GoogleTestFailureException(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::GoogleTestFailureException::GoogleTestFailureException(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::GoogleTestFailureException::GoogleTestFailureException(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::internal::GoogleTestFailureException::GoogleTestFailureException(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::GoogleTestFailureException::GoogleTestFailureException(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::GoogleTestFailureException::GoogleTestFailureException(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::runtime_error::runtime_error(const string&)}
C {testing::internal::GoogleTestFailureException::GoogleTestFailureException(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::GoogleTestFailureException::GoogleTestFailureException(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::GoogleTestFailureException::GoogleTestFailureException(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::PrintTestPartResultToString(const testing::TestPartResult&)}
C {testing::internal::GoogleTestFailureException::GoogleTestFailureException(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
F {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest.cc:1945}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::AssertHelper::~AssertHelper()}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::AssertHelper::~AssertHelper()}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::AssertHelper::~AssertHelper()}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::AssertHelper::operator=(const testing::Message&) const}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::AssertHelper::AssertHelper(testing::TestPartResult::Type, const char*, int, const char*)}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [59], testing::Message = testing::Message]}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [63], testing::Message = testing::Message]}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [62], testing::Message = testing::Message]}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [63], testing::Message = testing::Message]}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [2], testing::Message = testing::Message]}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [11], testing::Message = testing::Message]}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [18], testing::Message = testing::Message]}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [3], testing::Message = testing::Message]}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [31], testing::Message = testing::Message]}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [64], testing::Message = testing::Message]}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestInfo::test_case_name() const}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::AssertHelper::~AssertHelper()}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::AssertHelper::operator=(const testing::Message&) const}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::AssertHelper::AssertHelper(testing::TestPartResult::Type, const char*, int, const char*)}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [6], testing::Message = testing::Message]}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [62], testing::Message = testing::Message]}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [39], testing::Message = testing::Message]}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [6], testing::Message = testing::Message]}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [30], testing::Message = testing::Message]}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [6], testing::Message = testing::Message]}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [3], testing::Message = testing::Message]}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [24], testing::Message = testing::Message]}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [59], testing::Message = testing::Message]}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [64], testing::Message = testing::Message]}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestInfo::test_case_name() const}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const void* testing::internal::GetTestTypeId()}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const void* testing::internal::GetTestTypeId()}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestInfo::name() const}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestInfo* testing::internal::UnitTestImpl::current_test_info()}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestInfo::name() const}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) const [with _Tp = testing::TestInfo*, _Alloc = std::allocator<testing::TestInfo*>, std::vector<_Tp, _Alloc>::const_reference = testing::TestInfo* const&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const std::vector<testing::TestInfo*>& testing::TestCase::test_info_list() const}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::TestCase* testing::internal::UnitTestImpl::current_test_case() const}
C {static bool testing::Test::HasSameFixtureClass()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UnitTestImpl* testing::internal::GetUnitTestImpl()}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [24], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [24], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [24], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [30], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [30], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [30], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [11], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [11], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [11], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [59], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [59], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [59], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {void testing::internal::ReportFailureInUnknownLocation(testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest.cc:1926}
C {void testing::internal::ReportFailureInUnknownLocation(testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {void testing::internal::ReportFailureInUnknownLocation(testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::ReportFailureInUnknownLocation(testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {void testing::internal::ReportFailureInUnknownLocation(testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::ReportFailureInUnknownLocation(testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)}
C {void testing::internal::ReportFailureInUnknownLocation(testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static testing::UnitTest* testing::UnitTest::GetInstance()}
C {void testing::internal::ReportFailureInUnknownLocation(testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::ReportFailureInUnknownLocation(testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
F {static void testing::Test::RecordProperty(const string&, int)} {../third-party/gtest/src/gtest.cc:1918}
C {static void testing::Test::RecordProperty(const string&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {static void testing::Test::RecordProperty(const string&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::Test::RecordProperty(const string&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::Test::RecordProperty(const string&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::Test::RecordProperty(const string&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {static void testing::Test::RecordProperty(const string&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::Test::RecordProperty(const string&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::Test::RecordProperty(const string&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::Test::RecordProperty(const string&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::Test::RecordProperty(const string&, const string&)}
C {static void testing::Test::RecordProperty(const string&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::Test::RecordProperty(const string&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::Test::RecordProperty(const string&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::Message::GetString() const}
C {static void testing::Test::RecordProperty(const string&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static void testing::Test::RecordProperty(const string&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = int, testing::Message = testing::Message]}
C {static void testing::Test::RecordProperty(const string&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {static void testing::Test::RecordProperty(const string&, const string&)} {../third-party/gtest/src/gtest.cc:1913}
C {static void testing::Test::RecordProperty(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::UnitTest::RecordProperty(const string&, const string&)}
C {static void testing::Test::RecordProperty(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static testing::UnitTest* testing::UnitTest::GetInstance()}
F {virtual void testing::Test::TearDown()} {../third-party/gtest/src/gtest.cc:1909}
F {virtual void testing::Test::SetUp()} {../third-party/gtest/src/gtest.cc:1903}
F {virtual testing::Test::~Test()} {../third-party/gtest/src/gtest.cc:1896}
C {virtual testing::Test::~Test()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual testing::Test::~Test()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Test::~Test()}
F {testing::Test::~Test()} {../third-party/gtest/src/gtest.cc:1896}
C {testing::Test::~Test()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::Test::~Test()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::Test::~Test()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestFlagSaver::~GTestFlagSaver()}
F {testing::internal::GTestFlagSaver::~GTestFlagSaver()} {../third-party/gtest/src/gtest-internal-inl.h:185}
C {testing::internal::GTestFlagSaver::~GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::GTestFlagSaver::~GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::GTestFlagSaver::~GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::GTestFlagSaver::~GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::GTestFlagSaver::~GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::GTestFlagSaver::~GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::GTestFlagSaver::~GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::GTestFlagSaver::~GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::GTestFlagSaver::~GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::GTestFlagSaver::~GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::GTestFlagSaver::~GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::GTestFlagSaver::~GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::GTestFlagSaver::~GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {testing::internal::GTestFlagSaver::~GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {testing::internal::GTestFlagSaver::~GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {testing::internal::GTestFlagSaver::~GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {testing::internal::GTestFlagSaver::~GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {testing::internal::GTestFlagSaver::~GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
F {testing::Test::Test()} {../third-party/gtest/src/gtest.cc:1891}
C {testing::Test::Test()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::Test::Test()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestFlagSaver::GTestFlagSaver()}
C {testing::Test::Test()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
F {testing::internal::GTestFlagSaver::GTestFlagSaver()} {../third-party/gtest/src/gtest-internal-inl.h:164}
C {testing::internal::GTestFlagSaver::GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::GTestFlagSaver::GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::GTestFlagSaver::GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::GTestFlagSaver::GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::GTestFlagSaver::GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::GTestFlagSaver::GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::GTestFlagSaver::GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {testing::internal::GTestFlagSaver::GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {testing::internal::GTestFlagSaver::GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {testing::internal::GTestFlagSaver::GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {testing::internal::GTestFlagSaver::GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {testing::internal::GTestFlagSaver::GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {testing::internal::GTestFlagSaver::GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::GTestFlagSaver::GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::GTestFlagSaver::GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::GTestFlagSaver::GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::GTestFlagSaver::GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::GTestFlagSaver::GTestFlagSaver()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {int testing::TestResult::test_property_count() const} {../third-party/gtest/src/gtest.cc:1882}
C {int testing::TestResult::test_property_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:570}
F {int testing::TestResult::total_part_count() const} {../third-party/gtest/src/gtest.cc:1877}
C {int testing::TestResult::total_part_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {bool testing::TestResult::HasNonfatalFailure() const} {../third-party/gtest/src/gtest.cc:1871}
C {bool testing::TestResult::HasNonfatalFailure() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::CountIf(const Container&, Predicate) [with Container = std::vector<testing::TestPartResult>, Predicate = bool (*)(const testing::TestPartResult&)]}
F {int testing::internal::CountIf(const Container&, Predicate) [with Container = std::vector<testing::TestPartResult>, Predicate = bool (*)(const testing::TestPartResult&)]} {../third-party/gtest/src/gtest-internal-inl.h:282}
C {int testing::internal::CountIf(const Container&, Predicate) [with Container = std::vector<testing::TestPartResult>, Predicate = bool (*)(const testing::TestPartResult&)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const testing::TestPartResult*, _Container = std::vector<testing::TestPartResult>]}
C {int testing::internal::CountIf(const Container&, Predicate) [with Container = std::vector<testing::TestPartResult>, Predicate = bool (*)(const testing::TestPartResult&)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = const testing::TestPartResult*]}
C {int testing::internal::CountIf(const Container&, Predicate) [with Container = std::vector<testing::TestPartResult>, Predicate = bool (*)(const testing::TestPartResult&)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = const testing::TestPartResult*, _Container = std::vector<testing::TestPartResult>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<const testing::TestPartResult*, std::vector<testing::TestPartResult> >]}
C {int testing::internal::CountIf(const Container&, Predicate) [with Container = std::vector<testing::TestPartResult>, Predicate = bool (*)(const testing::TestPartResult&)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = const testing::TestPartResult*, _Container = std::vector<testing::TestPartResult>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = const testing::TestPartResult&]}
C {int testing::internal::CountIf(const Container&, Predicate) [with Container = std::vector<testing::TestPartResult>, Predicate = bool (*)(const testing::TestPartResult&)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = const testing::TestPartResult*]}
F {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = const testing::TestPartResult*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:472}
C {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = const testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = const testing::TestPartResult*, _Container = std::vector<testing::TestPartResult>]}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = const testing::TestPartResult*, _Container = std::vector<testing::TestPartResult>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:720}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = const testing::TestPartResult*, _Container = std::vector<testing::TestPartResult>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = const testing::TestPartResult&]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:732}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = const testing::TestPartResult*, _Container = std::vector<testing::TestPartResult>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<const testing::TestPartResult*, std::vector<testing::TestPartResult> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:740}
F {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = const testing::TestPartResult*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:490}
C {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const testing::TestPartResult*, std::vector<testing::TestPartResult> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = const testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = const testing::TestPartResult*, _Container = std::vector<testing::TestPartResult>]}
F {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const testing::TestPartResult*, _Container = std::vector<testing::TestPartResult>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:817}
C {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const testing::TestPartResult*, _Container = std::vector<testing::TestPartResult>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = const testing::TestPartResult*, _Container = std::vector<testing::TestPartResult>]}
C {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const testing::TestPartResult*, _Container = std::vector<testing::TestPartResult>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = const testing::TestPartResult*, _Container = std::vector<testing::TestPartResult>]}
F {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = const testing::TestPartResult*, _Container = std::vector<testing::TestPartResult>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:784}
F {bool testing::TestPartNonfatallyFailed(const testing::TestPartResult&)} {../third-party/gtest/src/gtest.cc:1866}
C {bool testing::TestPartNonfatallyFailed(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::TestPartResult::nonfatally_failed() const}
F {bool testing::TestPartResult::nonfatally_failed() const} {../third-party/gtest/include/gtest/gtest-test-part.h:97}
F {bool testing::TestResult::HasFatalFailure() const} {../third-party/gtest/src/gtest.cc:1861}
C {bool testing::TestResult::HasFatalFailure() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::CountIf(const Container&, Predicate) [with Container = std::vector<testing::TestPartResult>, Predicate = bool (*)(const testing::TestPartResult&)]}
F {bool testing::TestPartFatallyFailed(const testing::TestPartResult&)} {../third-party/gtest/src/gtest.cc:1856}
C {bool testing::TestPartFatallyFailed(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::TestPartResult::fatally_failed() const}
F {bool testing::TestResult::Failed() const} {../third-party/gtest/src/gtest.cc:1847}
C {bool testing::TestResult::Failed() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::TestResult::total_part_count() const}
C {bool testing::TestResult::Failed() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::TestPartResult::failed() const}
C {bool testing::TestResult::Failed() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::TestPartResult& testing::TestResult::GetTestPartResult(int) const}
F {void testing::TestResult::Clear()} {../third-party/gtest/src/gtest.cc:1839}
C {void testing::TestResult::Clear()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::clear() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>]}
C {void testing::TestResult::Clear()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::clear() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>]}
F {void std::vector<_Tp, _Alloc>::clear() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:1039}
C {void std::vector<_Tp, _Alloc>::clear() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::_M_erase_at_end(std::vector<_Tp, _Alloc>::pointer) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::pointer = testing::TestPartResult*]}
F {void std::vector<_Tp, _Alloc>::_M_erase_at_end(std::vector<_Tp, _Alloc>::pointer) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::pointer = testing::TestPartResult*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:1253}
C {void std::vector<_Tp, _Alloc>::_M_erase_at_end(std::vector<_Tp, _Alloc>::pointer) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::TestPartResult*, _Tp = testing::TestPartResult]}
C {void std::vector<_Tp, _Alloc>::_M_erase_at_end(std::vector<_Tp, _Alloc>::pointer) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::pointer = testing::TestPartResult*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestPartResult>]}
F {void std::vector<_Tp, _Alloc>::clear() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:1039}
C {void std::vector<_Tp, _Alloc>::clear() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::_M_erase_at_end(std::vector<_Tp, _Alloc>::pointer) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::pointer = testing::TestProperty*]}
F {void std::vector<_Tp, _Alloc>::_M_erase_at_end(std::vector<_Tp, _Alloc>::pointer) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::pointer = testing::TestProperty*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:1253}
C {void std::vector<_Tp, _Alloc>::_M_erase_at_end(std::vector<_Tp, _Alloc>::pointer) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::TestProperty*, _Tp = testing::TestProperty]}
C {void std::vector<_Tp, _Alloc>::_M_erase_at_end(std::vector<_Tp, _Alloc>::pointer) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestProperty>]}
F {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestProperty>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:95}
F {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::TestProperty*, _Tp = testing::TestProperty]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:150}
C {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::TestProperty*, _Tp = testing::TestProperty]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::TestProperty*]}
F {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::TestProperty*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:123}
C {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::TestProperty*, bool <anonymous> = false]}
F {static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::TestProperty*, bool <anonymous> = false]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:101}
C {static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::TestProperty*, bool <anonymous> = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_Tp*) [with _Tp = testing::TestProperty]}
C {static void std::_Destroy_aux<<anonymous> >::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::TestProperty*, bool <anonymous> = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_Tp* std::__addressof(_Tp&) [with _Tp = testing::TestProperty]}
F {_Tp* std::__addressof(_Tp&) [with _Tp = testing::TestProperty]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/move.h:43}
F {void std::_Destroy(_Tp*) [with _Tp = testing::TestProperty]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:93}
C {void std::_Destroy(_Tp*) [with _Tp = testing::TestProperty]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestProperty::~TestProperty()}
F {static bool testing::TestResult::ValidateTestProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest.cc:1832}
C {static bool testing::TestResult::ValidateTestProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]}
C {static bool testing::TestResult::ValidateTestProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static bool testing::TestResult::ValidateTestProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static bool testing::TestResult::ValidateTestProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >]}
C {static bool testing::TestResult::ValidateTestProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static bool testing::TestResult::ValidateTestProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static bool testing::TestResult::ValidateTestProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::ValidateTestPropertyName(const string&, const std::vector<std::basic_string<char> >&)}
C {static bool testing::TestResult::ValidateTestProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static bool testing::TestResult::ValidateTestProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestProperty::key() const}
C {static bool testing::TestResult::ValidateTestProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static bool testing::TestResult::ValidateTestProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<std::basic_string<char> > testing::GetReservedAttributesForElement(const string&)}
F {bool testing::ValidateTestPropertyName(const string&, const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest.cc:1818}
C {bool testing::ValidateTestPropertyName(const string&, const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {bool testing::ValidateTestPropertyName(const string&, const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {bool testing::ValidateTestPropertyName(const string&, const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::AssertHelper::~AssertHelper()}
C {bool testing::ValidateTestPropertyName(const string&, const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {bool testing::ValidateTestPropertyName(const string&, const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {bool testing::ValidateTestPropertyName(const string&, const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::AssertHelper::~AssertHelper()}
C {bool testing::ValidateTestPropertyName(const string&, const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::AssertHelper::operator=(const testing::Message&) const}
C {bool testing::ValidateTestPropertyName(const string&, const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::AssertHelper::AssertHelper(testing::TestPartResult::Type, const char*, int, const char*)}
C {bool testing::ValidateTestPropertyName(const string&, const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [2], testing::Message = testing::Message]}
C {bool testing::ValidateTestPropertyName(const string&, const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [12], testing::Message = testing::Message]}
C {bool testing::ValidateTestPropertyName(const string&, const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [18], testing::Message = testing::Message]}
C {bool testing::ValidateTestPropertyName(const string&, const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = std::basic_string<char>, testing::Message = testing::Message]}
C {bool testing::ValidateTestPropertyName(const string&, const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [3], testing::Message = testing::Message]}
C {bool testing::ValidateTestPropertyName(const string&, const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = std::basic_string<char>, testing::Message = testing::Message]}
C {bool testing::ValidateTestPropertyName(const string&, const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [40], testing::Message = testing::Message]}
C {bool testing::ValidateTestPropertyName(const string&, const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
C {bool testing::ValidateTestPropertyName(const string&, const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::FormatWordList(const std::vector<std::basic_string<char> >&)}
C {bool testing::ValidateTestPropertyName(const string&, const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const std::basic_string<char>*, _Container = std::vector<std::basic_string<char> >]}
C {bool testing::ValidateTestPropertyName(const string&, const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {_IIter std::find(_IIter, _IIter, const _Tp&) [with _IIter = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, _Tp = std::basic_string<char>]}
C {bool testing::ValidateTestPropertyName(const string&, const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = const std::basic_string<char>*]}
C {bool testing::ValidateTestPropertyName(const string&, const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = const std::basic_string<char>*]}
C {bool testing::ValidateTestPropertyName(const string&, const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = const std::basic_string<char>*]}
F {std::string testing::FormatWordList(const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest.cc:1804}
C {std::string testing::FormatWordList(const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {std::string testing::FormatWordList(const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {std::string testing::FormatWordList(const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::Message::GetString() const}
C {std::string testing::FormatWordList(const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::string testing::FormatWordList(const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [2], testing::Message = testing::Message]}
C {std::string testing::FormatWordList(const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = std::basic_string<char>, testing::Message = testing::Message]}
C {std::string testing::FormatWordList(const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [2], testing::Message = testing::Message]}
C {std::string testing::FormatWordList(const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::const_reference = const std::basic_string<char>&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::string testing::FormatWordList(const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [5], testing::Message = testing::Message]}
C {std::string testing::FormatWordList(const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::string testing::FormatWordList(const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [3], testing::Message = testing::Message]}
C {std::string testing::FormatWordList(const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::string testing::FormatWordList(const std::vector<std::basic_string<char> >&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) const [with _Tp = std::basic_string<char>, _Alloc = std::allocator<std::basic_string<char> >, std::vector<_Tp, _Alloc>::const_reference = const std::basic_string<char>&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:710}
F {void testing::TestResult::RecordProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest.cc:1734}
C {void testing::TestResult::RecordProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestMutexLock::~GTestMutexLock()}
C {void testing::TestResult::RecordProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {void testing::TestResult::RecordProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::TestResult::RecordProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {void testing::TestResult::RecordProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::TestResult::RecordProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TestPropertyKeyIs::~TestPropertyKeyIs()}
C {void testing::TestResult::RecordProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestMutexLock::~GTestMutexLock()}
C {void testing::TestResult::RecordProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestMutexLock::~GTestMutexLock()}
C {void testing::TestResult::RecordProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {void testing::TestResult::RecordProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::TestResult::RecordProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::TestProperty::SetValue(const string&)}
C {void testing::TestResult::RecordProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::pointer __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator->() const [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::pointer = testing::TestProperty*]}
C {void testing::TestResult::RecordProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::TestResult::RecordProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestProperty::value() const}
C {void testing::TestResult::RecordProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {void testing::TestResult::RecordProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::value_type = testing::TestProperty]}
C {void testing::TestResult::RecordProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>]}
C {void testing::TestResult::RecordProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]}
C {void testing::TestResult::RecordProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {void testing::TestResult::RecordProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::TestResult::RecordProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TestPropertyKeyIs::~TestPropertyKeyIs()}
C {void testing::TestResult::RecordProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, _Predicate = testing::internal::TestPropertyKeyIs]}
C {void testing::TestResult::RecordProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]}
C {void testing::TestResult::RecordProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]}
C {void testing::TestResult::RecordProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TestPropertyKeyIs::TestPropertyKeyIs(const string&)}
C {void testing::TestResult::RecordProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::TestResult::RecordProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestProperty::key() const}
C {void testing::TestResult::RecordProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {void testing::TestResult::RecordProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestMutexLock::GTestMutexLock(testing::internal::MutexBase*)}
C {void testing::TestResult::RecordProperty(const string&, const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::TestResult::ValidateTestProperty(const string&, const testing::TestProperty&)}
F {testing::internal::TestPropertyKeyIs::TestPropertyKeyIs(const string&)} {../third-party/gtest/src/gtest-internal-inl.h:351}
C {testing::internal::TestPropertyKeyIs::TestPropertyKeyIs(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
F {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:463}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>]}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:720}
F {_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, _Predicate = testing::internal::TestPropertyKeyIs]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algo.h:4418}
C {_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, _Predicate = testing::internal::TestPropertyKeyIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TestPropertyKeyIs::~TestPropertyKeyIs()}
C {_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, _Predicate = testing::internal::TestPropertyKeyIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TestPropertyKeyIs::~TestPropertyKeyIs()}
C {_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, _Predicate = testing::internal::TestPropertyKeyIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, _Predicate = testing::internal::TestPropertyKeyIs]}
C {_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, _Predicate = testing::internal::TestPropertyKeyIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TestPropertyKeyIs::TestPropertyKeyIs(const testing::internal::TestPropertyKeyIs&)}
C {_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, _Predicate = testing::internal::TestPropertyKeyIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::iterator_traits<_Iterator>::iterator_category std::__iterator_category(const _Iter&) [with _Iter = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::iterator_traits<_Iterator>::iterator_category = std::random_access_iterator_tag]}
F {typename std::iterator_traits<_Iterator>::iterator_category std::__iterator_category(const _Iter&) [with _Iter = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::iterator_traits<_Iterator>::iterator_category = std::random_access_iterator_tag]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator_base_types.h:202}
F {testing::internal::TestPropertyKeyIs::TestPropertyKeyIs(const testing::internal::TestPropertyKeyIs&)} {../third-party/gtest/src/gtest-internal-inl.h:346}
C {testing::internal::TestPropertyKeyIs::TestPropertyKeyIs(const testing::internal::TestPropertyKeyIs&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
F {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, _Predicate = testing::internal::TestPropertyKeyIs]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algo.h:202}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, _Predicate = testing::internal::TestPropertyKeyIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >]}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, _Predicate = testing::internal::TestPropertyKeyIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::TestPropertyKeyIs::operator()(const testing::TestProperty&) const}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, _Predicate = testing::internal::TestPropertyKeyIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::TestProperty&]}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, _Predicate = testing::internal::TestPropertyKeyIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >]}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, _Predicate = testing::internal::TestPropertyKeyIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::TestPropertyKeyIs::operator()(const testing::TestProperty&) const}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, _Predicate = testing::internal::TestPropertyKeyIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::TestProperty&]}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, _Predicate = testing::internal::TestPropertyKeyIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >]}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, _Predicate = testing::internal::TestPropertyKeyIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::TestPropertyKeyIs::operator()(const testing::TestProperty&) const}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, _Predicate = testing::internal::TestPropertyKeyIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::TestProperty&]}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, _Predicate = testing::internal::TestPropertyKeyIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, _Predicate = testing::internal::TestPropertyKeyIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >]}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, _Predicate = testing::internal::TestPropertyKeyIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::TestPropertyKeyIs::operator()(const testing::TestProperty&) const}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, _Predicate = testing::internal::TestPropertyKeyIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::TestProperty&]}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, _Predicate = testing::internal::TestPropertyKeyIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >]}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, _Predicate = testing::internal::TestPropertyKeyIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::TestPropertyKeyIs::operator()(const testing::TestProperty&) const}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, _Predicate = testing::internal::TestPropertyKeyIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::TestProperty&]}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, _Predicate = testing::internal::TestPropertyKeyIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >]}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, _Predicate = testing::internal::TestPropertyKeyIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::TestPropertyKeyIs::operator()(const testing::TestProperty&) const}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, _Predicate = testing::internal::TestPropertyKeyIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::TestProperty&]}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, _Predicate = testing::internal::TestPropertyKeyIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >]}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, _Predicate = testing::internal::TestPropertyKeyIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::TestPropertyKeyIs::operator()(const testing::TestProperty&) const}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, _Predicate = testing::internal::TestPropertyKeyIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::TestProperty&]}
C {_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, std::random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, _Predicate = testing::internal::TestPropertyKeyIs]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]}
F {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:890}
C {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>]}
C {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>]}
F {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:784}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::TestProperty&]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:732}
F {bool testing::internal::TestPropertyKeyIs::operator()(const testing::TestProperty&) const} {../third-party/gtest/src/gtest-internal-inl.h:354}
C {bool testing::internal::TestPropertyKeyIs::operator()(const testing::TestProperty&) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::operator==(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {bool testing::internal::TestPropertyKeyIs::operator()(const testing::TestProperty&) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestProperty::key() const}
F {bool std::operator==(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:2448}
C {bool std::operator==(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {int std::basic_string<_CharT, _Traits, _Alloc>::compare(const _CharT*) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:740}
F {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:481}
C {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>]}
F {bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:805}
C {bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>]}
C {bool __gnu_cxx::operator==(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>]}
F {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::value_type = testing::TestProperty]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:826}
C {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::value_type = testing::TestProperty]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]}
C {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::value_type = testing::TestProperty]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]}
C {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::value_type = testing::TestProperty]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::TestProperty, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestProperty*]}
F {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::TestProperty, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestProperty*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:107}
C {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::TestProperty, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*, void*)}
C {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::TestProperty, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestProperty::TestProperty(const testing::TestProperty&)}
C {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::TestProperty, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t, void*)}
F {testing::TestProperty::TestProperty(const testing::TestProperty&)} {../third-party/gtest/include/gtest/gtest.h:463}
C {testing::TestProperty::TestProperty(const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::TestProperty::TestProperty(const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {testing::TestProperty::TestProperty(const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
F {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/vector.tcc:300}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_rethrow()}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestProperty*, std::size_t = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::TestProperty*, _Tp = testing::TestProperty]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestProperty>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::destroy(__gnu_cxx::new_allocator<_Tp>::pointer) [with _Tp = testing::TestProperty, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestProperty*]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_begin_catch(void*)}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_eh_pointer(int)}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestProperty::~TestProperty()}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestProperty*, std::size_t = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::TestProperty*, _Tp = testing::TestProperty]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestProperty>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = testing::TestProperty*, _ForwardIterator = testing::TestProperty*, _Allocator = std::allocator<testing::TestProperty>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestProperty>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = testing::TestProperty*, _ForwardIterator = testing::TestProperty*, _Allocator = std::allocator<testing::TestProperty>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestProperty>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::TestProperty, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestProperty*]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename _Alloc::rebind<_Tp>::other::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestProperty*, std::size_t = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>, typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type = long int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestProperty::~TestProperty()}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestProperty& testing::TestProperty::operator=(const testing::TestProperty&)}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::TestProperty&]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::TestProperty*, _BI2 = testing::TestProperty*]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>]}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestProperty::TestProperty(const testing::TestProperty&)}
C {void std::vector<_Tp, _Alloc>::_M_insert_aux(std::vector<_Tp, _Alloc>::iterator, const _Tp&) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<testing::TestProperty*, std::vector<testing::TestProperty> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::construct(__gnu_cxx::new_allocator<_Tp>::pointer, const _Tp&) [with _Tp = testing::TestProperty, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestProperty*]}
F {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::TestProperty*, _BI2 = testing::TestProperty*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:613}
C {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::TestProperty*, _BI2 = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestProperty*, _BI2 = testing::TestProperty*]}
C {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::TestProperty*, _BI2 = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::TestProperty*, typename std::_Miter_base<_Iterator>::iterator_type = testing::TestProperty*]}
C {_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = testing::TestProperty*, _BI2 = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::TestProperty*, typename std::_Miter_base<_Iterator>::iterator_type = testing::TestProperty*]}
F {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::TestProperty*, typename std::_Miter_base<_Iterator>::iterator_type = testing::TestProperty*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:282}
C {typename std::_Miter_base<_Iterator>::iterator_type std::__miter_base(_Iterator) [with _Iterator = testing::TestProperty*, typename std::_Miter_base<_Iterator>::iterator_type = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = testing::TestProperty*, bool _HasBase = false, std::_Iter_base<_Iterator, _HasBase>::iterator_type = testing::TestProperty*]}
F {static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = testing::TestProperty*, bool _HasBase = false, std::_Iter_base<_Iterator, _HasBase>::iterator_type = testing::TestProperty*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator_base_types.h:213}
F {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestProperty*, _BI2 = testing::TestProperty*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:586}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestProperty*, _BI2 = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestProperty*, _BI2 = testing::TestProperty*]}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestProperty*, _BI2 = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestProperty*, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestProperty*]}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestProperty*, _BI2 = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestProperty*, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestProperty*]}
C {_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestProperty*, _BI2 = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestProperty*, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestProperty*]}
F {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestProperty*, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestProperty*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:271}
C {typename std::_Niter_base<_Iterator>::iterator_type std::__niter_base(_Iterator) [with _Iterator = testing::TestProperty*, typename std::_Niter_base<_Iterator>::iterator_type = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::_Iter_base<_Iterator, _HasBase>::iterator_type std::_Iter_base<_Iterator, _HasBase>::_S_base(_Iterator) [with _Iterator = testing::TestProperty*, bool _HasBase = false, std::_Iter_base<_Iterator, _HasBase>::iterator_type = testing::TestProperty*]}
F {_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestProperty*, _BI2 = testing::TestProperty*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:568}
C {_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = false, _BI1 = testing::TestProperty*, _BI2 = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _BI2 std::__copy_move_backward<false, false, std::random_access_iterator_tag>::__copy_move_b(_BI1, _BI1, _BI2) [with _BI1 = testing::TestProperty*, _BI2 = testing::TestProperty*]}
F {static _BI2 std::__copy_move_backward<false, false, std::random_access_iterator_tag>::__copy_move_b(_BI1, _BI1, _BI2) [with _BI1 = testing::TestProperty*, _BI2 = testing::TestProperty*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_algobase.h:527}
C {static _BI2 std::__copy_move_backward<false, false, std::random_access_iterator_tag>::__copy_move_b(_BI1, _BI1, _BI2) [with _BI1 = testing::TestProperty*, _BI2 = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestProperty& testing::TestProperty::operator=(const testing::TestProperty&)}
F {testing::TestProperty& testing::TestProperty::operator=(const testing::TestProperty&)} {../third-party/gtest/include/gtest/gtest.h:463}
C {testing::TestProperty& testing::TestProperty::operator=(const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {testing::TestProperty& testing::TestProperty::operator=(const testing::TestProperty&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
F {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:1239}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::__throw_length_error(const char*)}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:575}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = testing::TestProperty, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestProperty>]}
F {const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestProperty>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:99}
F {__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = testing::TestProperty, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:101}
F {typename _Alloc::rebind<_Tp>::other::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestProperty*, std::size_t = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:149}
C {typename _Alloc::rebind<_Tp>::other::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestProperty*, std::size_t = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::TestProperty, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestProperty*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::TestProperty, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestProperty*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:87}
C {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::TestProperty, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestProperty*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::TestProperty, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestProperty*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::__throw_bad_alloc()}
C {_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = testing::TestProperty, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestProperty*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = testing::TestProperty, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = testing::TestProperty*, _ForwardIterator = testing::TestProperty*, _Allocator = std::allocator<testing::TestProperty>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:264}
C {_ForwardIterator std::__uninitialized_move_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = testing::TestProperty*, _ForwardIterator = testing::TestProperty*, _Allocator = std::allocator<testing::TestProperty>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = testing::TestProperty*, _ForwardIterator = testing::TestProperty*, _Tp = testing::TestProperty]}
F {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = testing::TestProperty*, _ForwardIterator = testing::TestProperty*, _Tp = testing::TestProperty]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:257}
C {_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = testing::TestProperty*, _ForwardIterator = testing::TestProperty*, _Tp = testing::TestProperty]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestProperty*, _ForwardIterator = testing::TestProperty*]}
F {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestProperty*, _ForwardIterator = testing::TestProperty*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:109}
C {_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestProperty*, _ForwardIterator = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestProperty*, _ForwardIterator = testing::TestProperty*, bool _TrivialValueTypes = false]}
F {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestProperty*, _ForwardIterator = testing::TestProperty*, bool _TrivialValueTypes = false]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_uninitialized.h:70}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestProperty*, _ForwardIterator = testing::TestProperty*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_rethrow()}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestProperty*, _ForwardIterator = testing::TestProperty*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = testing::TestProperty*]}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestProperty*, _ForwardIterator = testing::TestProperty*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __cxa_begin_catch(void*)}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestProperty*, _ForwardIterator = testing::TestProperty*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __builtin_eh_pointer(int)}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestProperty*, _ForwardIterator = testing::TestProperty*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __cxa_end_catch()}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestProperty*, _ForwardIterator = testing::TestProperty*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Construct(_T1*, const _T2&) [with _T1 = testing::TestProperty, _T2 = testing::TestProperty]}
C {static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = testing::TestProperty*, _ForwardIterator = testing::TestProperty*, bool _TrivialValueTypes = false]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_Tp* std::__addressof(_Tp&) [with _Tp = testing::TestProperty]}
F {void std::_Construct(_T1*, const _T2&) [with _T1 = testing::TestProperty, _T2 = testing::TestProperty]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_construct.h:80}
C {void std::_Construct(_T1*, const _T2&) [with _T1 = testing::TestProperty, _T2 = testing::TestProperty]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*, void*)}
C {void std::_Construct(_T1*, const _T2&) [with _T1 = testing::TestProperty, _T2 = testing::TestProperty]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestProperty::TestProperty(const testing::TestProperty&)}
C {void std::_Construct(_T1*, const _T2&) [with _T1 = testing::TestProperty, _T2 = testing::TestProperty]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t, void*)}
F {void __gnu_cxx::new_allocator<_Tp>::destroy(__gnu_cxx::new_allocator<_Tp>::pointer) [with _Tp = testing::TestProperty, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestProperty*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:118}
C {void __gnu_cxx::new_allocator<_Tp>::destroy(__gnu_cxx::new_allocator<_Tp>::pointer) [with _Tp = testing::TestProperty, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestProperty*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestProperty::~TestProperty()}
F {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestProperty*, std::size_t = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:153}
C {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestProperty*, std::size_t = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = testing::TestProperty, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestProperty*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]}
F {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = testing::TestProperty, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestProperty*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:97}
C {void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = testing::TestProperty, __gnu_cxx::new_allocator<_Tp>::pointer = testing::TestProperty*, __gnu_cxx::new_allocator<_Tp>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
F {__gnu_cxx::__normal_iterator<_Iterator, _Container>::pointer __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator->() const [with _Iterator = testing::TestProperty*, _Container = std::vector<testing::TestProperty>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::pointer = testing::TestProperty*]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_iterator.h:736}
F {void testing::TestProperty::SetValue(const string&)} {../third-party/gtest/include/gtest/gtest.h:483}
C {void testing::TestProperty::SetValue(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
F {testing::internal::TestPropertyKeyIs::~TestPropertyKeyIs()} {../third-party/gtest/src/gtest-internal-inl.h:346}
C {testing::internal::TestPropertyKeyIs::~TestPropertyKeyIs()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {void testing::TestResult::AddTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest.cc:1727}
C {void testing::TestResult::AddTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::value_type = testing::TestPartResult]}
F {void testing::TestResult::ClearTestPartResults()} {../third-party/gtest/src/gtest.cc:1722}
C {void testing::TestResult::ClearTestPartResults()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::clear() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>]}
F {const testing::TestProperty& testing::TestResult::GetTestProperty(int) const} {../third-party/gtest/src/gtest.cc:1715}
C {const testing::TestProperty& testing::TestResult::GetTestProperty(int) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::at(std::vector<_Tp, _Alloc>::size_type) const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::const_reference = const testing::TestProperty&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {const testing::TestProperty& testing::TestResult::GetTestProperty(int) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::posix::Abort()}
C {const testing::TestProperty& testing::TestResult::GetTestProperty(int) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::TestResult::test_property_count() const}
F {std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::at(std::vector<_Tp, _Alloc>::size_type) const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::const_reference = const testing::TestProperty&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:753}
C {std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::at(std::vector<_Tp, _Alloc>::size_type) const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::const_reference = const testing::TestProperty&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::const_reference = const testing::TestProperty&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::at(std::vector<_Tp, _Alloc>::size_type) const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::const_reference = const testing::TestProperty&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::_M_range_check(std::vector<_Tp, _Alloc>::size_type) const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {void std::vector<_Tp, _Alloc>::_M_range_check(std::vector<_Tp, _Alloc>::size_type) const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:716}
C {void std::vector<_Tp, _Alloc>::_M_range_check(std::vector<_Tp, _Alloc>::size_type) const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::__throw_out_of_range(const char*)}
C {void std::vector<_Tp, _Alloc>::_M_range_check(std::vector<_Tp, _Alloc>::size_type) const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) const [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::vector<_Tp, _Alloc>::const_reference = const testing::TestProperty&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:710}
F {const testing::TestPartResult& testing::TestResult::GetTestPartResult(int) const} {../third-party/gtest/src/gtest.cc:1706}
C {const testing::TestPartResult& testing::TestResult::GetTestPartResult(int) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::at(std::vector<_Tp, _Alloc>::size_type) const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::const_reference = const testing::TestPartResult&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {const testing::TestPartResult& testing::TestResult::GetTestPartResult(int) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::posix::Abort()}
C {const testing::TestPartResult& testing::TestResult::GetTestPartResult(int) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::TestResult::total_part_count() const}
F {std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::at(std::vector<_Tp, _Alloc>::size_type) const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::const_reference = const testing::TestPartResult&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:753}
C {std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::at(std::vector<_Tp, _Alloc>::size_type) const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::const_reference = const testing::TestPartResult&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::const_reference = const testing::TestPartResult&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::at(std::vector<_Tp, _Alloc>::size_type) const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::const_reference = const testing::TestPartResult&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::vector<_Tp, _Alloc>::_M_range_check(std::vector<_Tp, _Alloc>::size_type) const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {void std::vector<_Tp, _Alloc>::_M_range_check(std::vector<_Tp, _Alloc>::size_type) const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:716}
C {void std::vector<_Tp, _Alloc>::_M_range_check(std::vector<_Tp, _Alloc>::size_type) const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::__throw_out_of_range(const char*)}
C {void std::vector<_Tp, _Alloc>::_M_range_check(std::vector<_Tp, _Alloc>::size_type) const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {testing::TestResult::~TestResult()} {../third-party/gtest/src/gtest.cc:1700}
C {testing::TestResult::~TestResult()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::Mutex::~Mutex()}
C {testing::TestResult::~TestResult()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>]}
C {testing::TestResult::~TestResult()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::Mutex::~Mutex()}
C {testing::TestResult::~TestResult()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>]}
C {testing::TestResult::~TestResult()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>]}
F {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:349}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>]}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>]}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::TestProperty*, _Tp = testing::TestProperty]}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestProperty>]}
F {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:141}
C {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<testing::TestProperty, std::allocator<testing::TestProperty> >::_Vector_impl::~_Vector_impl()}
C {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<testing::TestProperty, std::allocator<testing::TestProperty> >::_Vector_impl::~_Vector_impl()}
C {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestProperty*, std::size_t = long unsigned int]}
F {std::_Vector_base<testing::TestProperty, std::allocator<testing::TestProperty> >::_Vector_impl::~_Vector_impl()} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:75}
C {std::_Vector_base<testing::TestProperty, std::allocator<testing::TestProperty> >::_Vector_impl::~_Vector_impl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = testing::TestProperty]}
F {std::allocator<_Alloc>::~allocator() [with _Tp = testing::TestProperty]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:115}
C {std::allocator<_Alloc>::~allocator() [with _Tp = testing::TestProperty]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = testing::TestProperty]}
F {__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = testing::TestProperty]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:76}
F {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:349}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>]}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>]}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = testing::TestPartResult*, _Tp = testing::TestPartResult]}
C {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type = std::allocator<testing::TestPartResult>]}
F {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:141}
C {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<testing::TestPartResult, std::allocator<testing::TestPartResult> >::_Vector_impl::~_Vector_impl()}
C {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<testing::TestPartResult, std::allocator<testing::TestPartResult> >::_Vector_impl::~_Vector_impl()}
C {std::_Vector_base<_Tp, _Alloc>::~_Vector_base() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(typename _Alloc::rebind<_Tp>::other::pointer, std::size_t) [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>, typename _Alloc::rebind<_Tp>::other::pointer = testing::TestPartResult*, std::size_t = long unsigned int]}
F {std::_Vector_base<testing::TestPartResult, std::allocator<testing::TestPartResult> >::_Vector_impl::~_Vector_impl()} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:75}
C {std::_Vector_base<testing::TestPartResult, std::allocator<testing::TestPartResult> >::_Vector_impl::~_Vector_impl()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = testing::TestPartResult]}
F {std::allocator<_Alloc>::~allocator() [with _Tp = testing::TestPartResult]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:115}
C {std::allocator<_Alloc>::~allocator() [with _Tp = testing::TestPartResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = testing::TestPartResult]}
F {__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = testing::TestPartResult]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:76}
F {testing::TestResult::TestResult()} {../third-party/gtest/src/gtest.cc:1694}
C {testing::TestResult::TestResult()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::Mutex::~Mutex()}
C {testing::TestResult::TestResult()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::~vector() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>]}
C {testing::TestResult::TestResult()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::vector() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>]}
C {testing::TestResult::TestResult()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::vector() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>]}
C {testing::TestResult::TestResult()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::Mutex::Mutex()}
F {std::vector<_Tp, _Alloc>::vector() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:217}
C {std::vector<_Tp, _Alloc>::vector() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>]}
F {std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:106}
C {std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>]}
F {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:82}
C {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = testing::TestPartResult, _Alloc = std::allocator<testing::TestPartResult>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = testing::TestPartResult]}
F {std::allocator<_Alloc>::allocator() [with _Tp = testing::TestPartResult]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:107}
C {std::allocator<_Alloc>::allocator() [with _Tp = testing::TestPartResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = testing::TestPartResult]}
F {__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = testing::TestPartResult]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:69}
F {std::vector<_Tp, _Alloc>::vector() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:217}
C {std::vector<_Tp, _Alloc>::vector() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>]}
F {std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:106}
C {std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>]}
F {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/stl_vector.h:82}
C {std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = testing::TestProperty, _Alloc = std::allocator<testing::TestProperty>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = testing::TestProperty]}
F {std::allocator<_Alloc>::allocator() [with _Tp = testing::TestProperty]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:107}
C {std::allocator<_Alloc>::allocator() [with _Tp = testing::TestProperty]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = testing::TestProperty]}
F {__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = testing::TestProperty]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:69}
F {std::string testing::internal::AppendUserMessage(const string&, const testing::Message&)} {../third-party/gtest/src/gtest.cc:1678}
C {std::string testing::internal::AppendUserMessage(const string&, const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::AppendUserMessage(const string&, const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::AppendUserMessage(const string&, const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::AppendUserMessage(const string&, const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::AppendUserMessage(const string&, const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::AppendUserMessage(const string&, const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::AppendUserMessage(const string&, const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {std::string testing::internal::AppendUserMessage(const string&, const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::basic_string<_CharT, _Traits, _Alloc>::empty() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::AppendUserMessage(const string&, const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::Message::GetString() const}
F {std::string testing::internal::StringStreamToString(std::stringstream*)} {../third-party/gtest/src/gtest.cc:1659}
C {std::string testing::internal::StringStreamToString(std::stringstream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::StringStreamToString(std::stringstream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::StringStreamToString(std::stringstream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::StringStreamToString(std::stringstream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator+=(_CharT) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {std::string testing::internal::StringStreamToString(std::stringstream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator+=(const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {std::string testing::internal::StringStreamToString(std::stringstream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::basic_string<_CharT, _Traits, _Alloc>::reserve(std::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {std::string testing::internal::StringStreamToString(std::stringstream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::StringStreamToString(std::stringstream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {std::string testing::internal::StringStreamToString(std::stringstream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::StringStreamToString(std::stringstream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::__string_type std::basic_stringstream<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringstream<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]}
F {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator+=(_CharT) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:942}
C {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator+=(_CharT) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::basic_string<_CharT, _Traits, _Alloc>::push_back(_CharT) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {static std::string testing::internal::String::FormatByte(unsigned char)} {../third-party/gtest/src/gtest.cc:1650}
C {static std::string testing::internal::String::FormatByte(unsigned char)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::String::FormatByte(unsigned char)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::String::FormatByte(unsigned char)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::__string_type std::basic_stringstream<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringstream<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]}
C {static std::string testing::internal::String::FormatByte(unsigned char)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(unsigned int) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]}
C {static std::string testing::internal::String::FormatByte(unsigned char)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::ios_base& (*)(std::ios_base&)) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]}
C {static std::string testing::internal::String::FormatByte(unsigned char)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::ios_base& (*)(std::ios_base&)) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]}
C {static std::string testing::internal::String::FormatByte(unsigned char)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setw) [with _CharT = char, _Traits = std::char_traits<char>]}
C {static std::string testing::internal::String::FormatByte(unsigned char)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setfill<_CharT>) [with _CharT = char, _Traits = std::char_traits<char>]}
C {static std::string testing::internal::String::FormatByte(unsigned char)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Setfill<_CharT> std::setfill(_CharT) [with _CharT = char]}
C {static std::string testing::internal::String::FormatByte(unsigned char)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Setw std::setw(int)}
C {static std::string testing::internal::String::FormatByte(unsigned char)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::basic_stringstream(std::ios_base::openmode) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::ios_base::openmode = std::_Ios_Openmode]}
C {static std::string testing::internal::String::FormatByte(unsigned char)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Ios_Openmode std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)}
F {std::_Setw std::setw(int)} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/iomanip:224}
F {std::_Setfill<_CharT> std::setfill(_CharT) [with _CharT = char]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/iomanip:164}
F {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setfill<_CharT>) [with _CharT = char, _Traits = std::char_traits<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/iomanip:177}
C {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setfill<_CharT>) [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ios<_CharT, _Traits>::char_type std::basic_ios<_CharT, _Traits>::fill(std::basic_ios<_CharT, _Traits>::char_type) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ios<_CharT, _Traits>::char_type = char]}
F {std::basic_ios<_CharT, _Traits>::char_type std::basic_ios<_CharT, _Traits>::fill(std::basic_ios<_CharT, _Traits>::char_type) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ios<_CharT, _Traits>::char_type = char]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_ios.h:382}
C {std::basic_ios<_CharT, _Traits>::char_type std::basic_ios<_CharT, _Traits>::fill(std::basic_ios<_CharT, _Traits>::char_type) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ios<_CharT, _Traits>::char_type = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ios<_CharT, _Traits>::char_type std::basic_ios<_CharT, _Traits>::fill() const [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ios<_CharT, _Traits>::char_type = char]}
F {std::basic_ios<_CharT, _Traits>::char_type std::basic_ios<_CharT, _Traits>::fill() const [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ios<_CharT, _Traits>::char_type = char]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_ios.h:362}
C {std::basic_ios<_CharT, _Traits>::char_type std::basic_ios<_CharT, _Traits>::fill() const [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ios<_CharT, _Traits>::char_type = char]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ios<_CharT, _Traits>::char_type std::basic_ios<_CharT, _Traits>::widen(char) const [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ios<_CharT, _Traits>::char_type = char]}
F {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setw) [with _CharT = char, _Traits = std::char_traits<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/iomanip:237}
C {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setw) [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::streamsize std::ios_base::width(std::streamsize)}
F {std::streamsize std::ios_base::width(std::streamsize)} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/ios_base.h:655}
F {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::ios_base& (*)(std::ios_base&)) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ostream:129}
F {std::ios_base& std::uppercase(std::ios_base&)} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/ios_base.h:877}
C {std::ios_base& std::uppercase(std::ios_base&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ios_base::fmtflags std::ios_base::setf(std::ios_base::fmtflags)}
F {std::ios_base::fmtflags std::ios_base::setf(std::ios_base::fmtflags)} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/ios_base.h:580}
C {std::ios_base::fmtflags std::ios_base::setf(std::ios_base::fmtflags)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const std::_Ios_Fmtflags& std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)}
F {const std::_Ios_Fmtflags& std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/ios_base.h:93}
C {const std::_Ios_Fmtflags& std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Ios_Fmtflags std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)}
F {std::_Ios_Fmtflags std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/ios_base.h:81}
F {std::ios_base& std::hex(std::ios_base&)} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/ios_base.h:943}
C {std::ios_base& std::hex(std::ios_base&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ios_base::fmtflags std::ios_base::setf(std::ios_base::fmtflags, std::ios_base::fmtflags)}
F {std::ios_base::fmtflags std::ios_base::setf(std::ios_base::fmtflags, std::ios_base::fmtflags)} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/ios_base.h:597}
C {std::ios_base::fmtflags std::ios_base::setf(std::ios_base::fmtflags, std::ios_base::fmtflags)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const std::_Ios_Fmtflags& std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)}
C {std::ios_base::fmtflags std::ios_base::setf(std::ios_base::fmtflags, std::ios_base::fmtflags)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Ios_Fmtflags std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)}
C {std::ios_base::fmtflags std::ios_base::setf(std::ios_base::fmtflags, std::ios_base::fmtflags)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const std::_Ios_Fmtflags& std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)}
C {std::ios_base::fmtflags std::ios_base::setf(std::ios_base::fmtflags, std::ios_base::fmtflags)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Ios_Fmtflags std::operator~(std::_Ios_Fmtflags)}
F {std::_Ios_Fmtflags std::operator~(std::_Ios_Fmtflags)} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/ios_base.h:89}
F {const std::_Ios_Fmtflags& std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/ios_base.h:97}
C {const std::_Ios_Fmtflags& std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Ios_Fmtflags std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)}
F {std::_Ios_Fmtflags std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/ios_base.h:77}
F {static std::string testing::internal::String::FormatHexInt(int)} {../third-party/gtest/src/gtest.cc:1643}
C {static std::string testing::internal::String::FormatHexInt(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::String::FormatHexInt(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::String::FormatHexInt(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::__string_type std::basic_stringstream<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringstream<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]}
C {static std::string testing::internal::String::FormatHexInt(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char, _Traits = std::char_traits<char>]}
C {static std::string testing::internal::String::FormatHexInt(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::ios_base& (*)(std::ios_base&)) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]}
C {static std::string testing::internal::String::FormatHexInt(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::ios_base& (*)(std::ios_base&)) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]}
C {static std::string testing::internal::String::FormatHexInt(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::basic_stringstream(std::ios_base::openmode) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::ios_base::openmode = std::_Ios_Openmode]}
C {static std::string testing::internal::String::FormatHexInt(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Ios_Openmode std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)}
F {static std::string testing::internal::String::FormatIntWidth2(int)} {../third-party/gtest/src/gtest.cc:1636}
C {static std::string testing::internal::String::FormatIntWidth2(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::String::FormatIntWidth2(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::String::FormatIntWidth2(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::__string_type std::basic_stringstream<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringstream<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]}
C {static std::string testing::internal::String::FormatIntWidth2(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char, _Traits = std::char_traits<char>]}
C {static std::string testing::internal::String::FormatIntWidth2(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setw) [with _CharT = char, _Traits = std::char_traits<char>]}
C {static std::string testing::internal::String::FormatIntWidth2(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setfill<_CharT>) [with _CharT = char, _Traits = std::char_traits<char>]}
C {static std::string testing::internal::String::FormatIntWidth2(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Setfill<_CharT> std::setfill(_CharT) [with _CharT = char]}
C {static std::string testing::internal::String::FormatIntWidth2(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Setw std::setw(int)}
C {static std::string testing::internal::String::FormatIntWidth2(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::basic_stringstream(std::ios_base::openmode) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::ios_base::openmode = std::_Ios_Openmode]}
C {static std::string testing::internal::String::FormatIntWidth2(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Ios_Openmode std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)}
F {static bool testing::internal::String::EndsWithCaseInsensitive(const string&, const string&)} {../third-party/gtest/src/gtest.cc:1626}
C {static bool testing::internal::String::EndsWithCaseInsensitive(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::String::CaseInsensitiveCStringEquals(const char*, const char*)}
C {static bool testing::internal::String::EndsWithCaseInsensitive(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static bool testing::internal::String::EndsWithCaseInsensitive(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static bool testing::internal::String::EndsWithCaseInsensitive(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {static bool testing::internal::String::EndsWithCaseInsensitive(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
F {static bool testing::internal::String::CaseInsensitiveWideCStringEquals(const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest.cc:1602}
C {static bool testing::internal::String::CaseInsensitiveWideCStringEquals(const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int wcscasecmp(const wchar_t*, const wchar_t*)}
F {static bool testing::internal::String::CaseInsensitiveCStringEquals(const char*, const char*)} {../third-party/gtest/src/gtest.cc:1582}
C {static bool testing::internal::String::CaseInsensitiveCStringEquals(const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::posix::StrCaseCmp(const char*, const char*)}
F {int testing::internal::posix::StrCaseCmp(const char*, const char*)} {../third-party/gtest/include/gtest/internal/gtest-port.h:1744}
C {int testing::internal::posix::StrCaseCmp(const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int strcasecmp(const char*, const char*)}
F {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest.cc:1562}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::AssertionResult(const testing::AssertionResult&)}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<char>, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [5], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<char>, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [12], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [7], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [12], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionFailure()}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::PrintToString(const T&) [with T = const wchar_t*, std::string = std::basic_string<char>]}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::PrintToString(const T&) [with T = const wchar_t*, std::string = std::basic_string<char>]}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionSuccess()}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::String::WideCStringEquals(const wchar_t*, const wchar_t*)}
F {std::string testing::PrintToString(const T&) [with T = const wchar_t*, std::string = std::basic_string<char>]} {../third-party/gtest/include/gtest/gtest-printers.h:847}
C {std::string testing::PrintToString(const T&) [with T = const wchar_t*, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::PrintToString(const T&) [with T = const wchar_t*, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::PrintToString(const T&) [with T = const wchar_t*, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::__string_type std::basic_stringstream<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringstream<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]}
C {std::string testing::PrintToString(const T&) [with T = const wchar_t*, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::UniversalTersePrinter<const wchar_t*>::Print(const wchar_t*, std::ostream*)}
C {std::string testing::PrintToString(const T&) [with T = const wchar_t*, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::basic_stringstream(std::ios_base::openmode) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::ios_base::openmode = std::_Ios_Openmode]}
C {std::string testing::PrintToString(const T&) [with T = const wchar_t*, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Ios_Openmode std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)}
F {static void testing::internal::UniversalTersePrinter<const wchar_t*>::Print(const wchar_t*, std::ostream*)} {../third-party/gtest/include/gtest/gtest-printers.h:724}
C {static void testing::internal::UniversalTersePrinter<const wchar_t*>::Print(const wchar_t*, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = wchar_t]}
C {static void testing::internal::UniversalTersePrinter<const wchar_t*>::Print(const wchar_t*, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]}
C {static void testing::internal::UniversalTersePrinter<const wchar_t*>::Print(const wchar_t*, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = wchar_t]}
C {static void testing::internal::UniversalTersePrinter<const wchar_t*>::Print(const wchar_t*, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]}
C {static void testing::internal::UniversalTersePrinter<const wchar_t*>::Print(const wchar_t*, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::UniversalPrint(const T&, std::ostream*) [with T = std::basic_string<wchar_t>, std::ostream = std::basic_ostream<char>]}
C {static void testing::internal::UniversalTersePrinter<const wchar_t*>::Print(const wchar_t*, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]}
C {static void testing::internal::UniversalTersePrinter<const wchar_t*>::Print(const wchar_t*, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = wchar_t]}
C {static void testing::internal::UniversalTersePrinter<const wchar_t*>::Print(const wchar_t*, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
F {std::allocator<_Alloc>::allocator() [with _Tp = wchar_t]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:107}
C {std::allocator<_Alloc>::allocator() [with _Tp = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = wchar_t]}
F {__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = wchar_t]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:69}
F {void testing::internal::UniversalPrint(const T&, std::ostream*) [with T = std::basic_string<wchar_t>, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/include/gtest/gtest-printers.h:752}
C {void testing::internal::UniversalPrint(const T&, std::ostream*) [with T = std::basic_string<wchar_t>, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::UniversalPrinter<T>::Print(const T&, std::ostream*) [with T = std::basic_string<wchar_t>, std::ostream = std::basic_ostream<char>]}
F {static void testing::internal::UniversalPrinter<T>::Print(const T&, std::ostream*) [with T = std::basic_string<wchar_t>, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/include/gtest/gtest-printers.h:591}
C {static void testing::internal::UniversalPrinter<T>::Print(const T&, std::ostream*) [with T = std::basic_string<wchar_t>, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::PrintTo(const wstring&, std::ostream*)}
F {void testing::internal::PrintTo(const wstring&, std::ostream*)} {../third-party/gtest/include/gtest/gtest-printers.h:478}
C {void testing::internal::PrintTo(const wstring&, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::PrintWideStringTo(const wstring&, std::ostream*)}
F {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:533}
C {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<wchar_t>::_Alloc_hider::~_Alloc_hider()}
C {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = wchar_t]}
C {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<wchar_t>::_Alloc_hider::~_Alloc_hider()}
C {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = wchar_t]}
C {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_dispose(const _Alloc&) [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]}
C {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::_Rep* std::basic_string<_CharT, _Traits, _Alloc>::_M_rep() const [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]}
C {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::allocator_type std::basic_string<_CharT, _Traits, _Alloc>::get_allocator() const [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>, std::basic_string<_CharT, _Traits, _Alloc>::allocator_type = std::allocator<wchar_t>]}
F {std::basic_string<_CharT, _Traits, _Alloc>::allocator_type std::basic_string<_CharT, _Traits, _Alloc>::get_allocator() const [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>, std::basic_string<_CharT, _Traits, _Alloc>::allocator_type = std::allocator<wchar_t>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:1783}
C {std::basic_string<_CharT, _Traits, _Alloc>::allocator_type std::basic_string<_CharT, _Traits, _Alloc>::get_allocator() const [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>, std::basic_string<_CharT, _Traits, _Alloc>::allocator_type = std::allocator<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator(const std::allocator<_Alloc>&) [with _Tp = wchar_t, std::allocator<_Alloc> = std::allocator<wchar_t>]}
F {std::allocator<_Alloc>::allocator(const std::allocator<_Alloc>&) [with _Tp = wchar_t, std::allocator<_Alloc> = std::allocator<wchar_t>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:109}
C {std::allocator<_Alloc>::allocator(const std::allocator<_Alloc>&) [with _Tp = wchar_t, std::allocator<_Alloc> = std::allocator<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = wchar_t, __gnu_cxx::new_allocator<_Tp> = __gnu_cxx::new_allocator<wchar_t>]}
F {__gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = wchar_t, __gnu_cxx::new_allocator<_Tp> = __gnu_cxx::new_allocator<wchar_t>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:71}
F {void std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_dispose(const _Alloc&) [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:232}
C {void std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_dispose(const _Alloc&) [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_destroy(const _Alloc&) [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]}
C {void std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_dispose(const _Alloc&) [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_Atomic_word __gnu_cxx::__exchange_and_add_dispatch(_Atomic_word*, int)}
C {void std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_dispose(const _Alloc&) [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {long int __builtin_expect(long int, long int)}
C {void std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_M_dispose(const _Alloc&) [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::basic_string<_CharT, _Traits, _Alloc>::_Rep& std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_S_empty_rep() [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>, std::basic_string<_CharT, _Traits, _Alloc>::_Rep = std::basic_string<wchar_t>::_Rep]}
F {static std::basic_string<_CharT, _Traits, _Alloc>::_Rep& std::basic_string<_CharT, _Traits, _Alloc>::_Rep::_S_empty_rep() [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>, std::basic_string<_CharT, _Traits, _Alloc>::_Rep = std::basic_string<wchar_t>::_Rep]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:176}
F {std::basic_string<wchar_t>::_Alloc_hider::~_Alloc_hider()} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:267}
C {std::basic_string<wchar_t>::_Alloc_hider::~_Alloc_hider()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = wchar_t]}
F {std::allocator<_Alloc>::~allocator() [with _Tp = wchar_t]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/allocator.h:115}
C {std::allocator<_Alloc>::~allocator() [with _Tp = wchar_t]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = wchar_t]}
F {__gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = wchar_t]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ext/new_allocator.h:76}
F {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [7], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/include/gtest/gtest.h:282}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [7], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [7], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [7], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::AssertionResult::AppendMessage(const testing::Message&)}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [7], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [7], testing::Message = testing::Message]}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [7], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {void testing::AssertionResult::AppendMessage(const testing::Message&)} {../third-party/gtest/include/gtest/gtest.h:297}
C {void testing::AssertionResult::AppendMessage(const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::AssertionResult::AppendMessage(const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {void testing::AssertionResult::AppendMessage(const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::AssertionResult::AppendMessage(const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::append(const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {void testing::AssertionResult::AppendMessage(const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {T* testing::internal::scoped_ptr<T>::operator->() const [with T = std::basic_string<char>]}
C {void testing::AssertionResult::AppendMessage(const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::AssertionResult::AppendMessage(const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::Message::GetString() const}
C {void testing::AssertionResult::AppendMessage(const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::scoped_ptr<T>::reset(T*) [with T = std::basic_string<char>]}
C {void testing::AssertionResult::AppendMessage(const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::AssertionResult::AppendMessage(const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {void testing::AssertionResult::AppendMessage(const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {T* testing::internal::scoped_ptr<T>::get() const [with T = std::basic_string<char>]}
F {T* testing::internal::scoped_ptr<T>::get() const [with T = std::basic_string<char>]} {../third-party/gtest/include/gtest/internal/gtest-port.h:899}
F {T* testing::internal::scoped_ptr<T>::operator->() const [with T = std::basic_string<char>]} {../third-party/gtest/include/gtest/internal/gtest-port.h:898}
F {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/include/gtest/gtest.h:282}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::AssertionResult::AppendMessage(const testing::Message&)}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [12], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/include/gtest/gtest.h:282}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [12], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [12], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [12], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::AssertionResult::AppendMessage(const testing::Message&)}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [12], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [12], testing::Message = testing::Message]}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [12], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [5], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/include/gtest/gtest.h:282}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [5], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [5], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [5], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::AssertionResult::AppendMessage(const testing::Message&)}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [5], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [5], testing::Message = testing::Message]}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [5], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<char>, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/include/gtest/gtest.h:282}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<char>, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<char>, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<char>, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::AssertionResult::AppendMessage(const testing::Message&)}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<char>, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = std::basic_string<char>, testing::Message = testing::Message]}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<char>, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {testing::AssertionResult testing::internal::CmpHelperSTREQ(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest.cc:1546}
C {testing::AssertionResult testing::internal::CmpHelperSTREQ(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperSTREQ(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperSTREQ(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperSTREQ(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperSTREQ(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::internal::EqFailure(const char*, const char*, const string&, const string&, bool)}
C {testing::AssertionResult testing::internal::CmpHelperSTREQ(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::PrintToString(const T&) [with T = const wchar_t*, std::string = std::basic_string<char>]}
C {testing::AssertionResult testing::internal::CmpHelperSTREQ(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::PrintToString(const T&) [with T = const wchar_t*, std::string = std::basic_string<char>]}
C {testing::AssertionResult testing::internal::CmpHelperSTREQ(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionSuccess()}
C {testing::AssertionResult testing::internal::CmpHelperSTREQ(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::String::WideCStringEquals(const wchar_t*, const wchar_t*)}
F {static bool testing::internal::String::WideCStringEquals(const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest.cc:1537}
C {static bool testing::internal::String::WideCStringEquals(const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int wcscmp(const wchar_t*, const wchar_t*)}
F {static std::string testing::internal::String::ShowWideCString(const wchar_t*)} {../third-party/gtest/src/gtest.cc:1525}
C {static std::string testing::internal::String::ShowWideCString(const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static std::string testing::internal::String::ShowWideCString(const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::WideStringToUtf8(const wchar_t*, int)}
C {static std::string testing::internal::String::ShowWideCString(const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static std::string testing::internal::String::ShowWideCString(const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::String::ShowWideCString(const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
F {std::string testing::internal::WideStringToUtf8(const wchar_t*, int)} {../third-party/gtest/src/gtest.cc:1500}
C {std::string testing::internal::WideStringToUtf8(const wchar_t*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::WideStringToUtf8(const wchar_t*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::WideStringToUtf8(const wchar_t*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::WideStringToUtf8(const wchar_t*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StringStreamToString(std::stringstream*)}
C {std::string testing::internal::WideStringToUtf8(const wchar_t*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::WideStringToUtf8(const wchar_t*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::WideStringToUtf8(const wchar_t*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::CodePointToUtf8(testing::internal::UInt32)}
C {std::string testing::internal::WideStringToUtf8(const wchar_t*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UInt32 testing::internal::CreateCodePointFromUtf16SurrogatePair(wchar_t, wchar_t)}
C {std::string testing::internal::WideStringToUtf8(const wchar_t*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsUtf16SurrogatePair(wchar_t, wchar_t)}
C {std::string testing::internal::WideStringToUtf8(const wchar_t*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::basic_stringstream(std::ios_base::openmode) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::ios_base::openmode = std::_Ios_Openmode]}
C {std::string testing::internal::WideStringToUtf8(const wchar_t*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Ios_Openmode std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)}
C {std::string testing::internal::WideStringToUtf8(const wchar_t*, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {size_t wcslen(const wchar_t*)}
F {bool testing::internal::IsUtf16SurrogatePair(wchar_t, wchar_t)} {../third-party/gtest/src/gtest.cc:1471}
F {testing::internal::UInt32 testing::internal::CreateCodePointFromUtf16SurrogatePair(wchar_t, wchar_t)} {../third-party/gtest/src/gtest.cc:1477}
F {std::string testing::internal::CodePointToUtf8(testing::internal::UInt32)} {../third-party/gtest/src/gtest.cc:1436}
C {std::string testing::internal::CodePointToUtf8(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {std::string testing::internal::CodePointToUtf8(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::CodePointToUtf8(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::CodePointToUtf8(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {std::string testing::internal::CodePointToUtf8(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::CodePointToUtf8(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {std::string testing::internal::CodePointToUtf8(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UInt32 testing::internal::ChopLowBits(testing::internal::UInt32*, int)}
C {std::string testing::internal::CodePointToUtf8(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UInt32 testing::internal::ChopLowBits(testing::internal::UInt32*, int)}
C {std::string testing::internal::CodePointToUtf8(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UInt32 testing::internal::ChopLowBits(testing::internal::UInt32*, int)}
C {std::string testing::internal::CodePointToUtf8(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UInt32 testing::internal::ChopLowBits(testing::internal::UInt32*, int)}
C {std::string testing::internal::CodePointToUtf8(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UInt32 testing::internal::ChopLowBits(testing::internal::UInt32*, int)}
C {std::string testing::internal::CodePointToUtf8(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UInt32 testing::internal::ChopLowBits(testing::internal::UInt32*, int)}
C {std::string testing::internal::CodePointToUtf8(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::CodePointToUtf8(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::CodePointToUtf8(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::CodePointToUtf8(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::CodePointToUtf8(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::string testing::internal::String::FormatHexInt(int)}
F {testing::internal::UInt32 testing::internal::ChopLowBits(testing::internal::UInt32*, int)} {../third-party/gtest/src/gtest.cc:1424}
F {testing::AssertionResult testing::IsNotSubstring(const char*, const char*, const wstring&, const wstring&)} {../third-party/gtest/src/gtest.cc:1326}
C {testing::AssertionResult testing::IsNotSubstring(const char*, const char*, const wstring&, const wstring&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<wchar_t>]}
F {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<wchar_t>]} {../third-party/gtest/src/gtest.cc:1260}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::AssertionResult(const testing::AssertionResult&)}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [2], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<wchar_t>, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [11], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [2], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [16], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [11], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [3], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<wchar_t>, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [11], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [2], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [11], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionFailure()}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionSuccess()}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::{anonymous}::IsSubstringPred(const StringType&, const StringType&) [with StringType = std::basic_string<wchar_t>]}
F {bool testing::{anonymous}::IsSubstringPred(const StringType&, const StringType&) [with StringType = std::basic_string<wchar_t>]} {../third-party/gtest/src/gtest.cc:1250}
C {bool testing::{anonymous}::IsSubstringPred(const StringType&, const StringType&) [with StringType = std::basic_string<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::find(const std::basic_string<_CharT, _Traits, _Alloc>&, std::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<wchar_t>]}
F {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::find(const std::basic_string<_CharT, _Traits, _Alloc>&, std::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<wchar_t>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:1811}
C {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::find(const std::basic_string<_CharT, _Traits, _Alloc>&, std::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::find(const _CharT*, std::basic_string<_CharT, _Traits, _Alloc>::size_type, std::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::find(const std::basic_string<_CharT, _Traits, _Alloc>&, std::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::data() const [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]}
C {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::find(const std::basic_string<_CharT, _Traits, _Alloc>&, std::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
F {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [3], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/include/gtest/gtest.h:282}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [3], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [3], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [3], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::AssertionResult::AppendMessage(const testing::Message&)}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [3], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [3], testing::Message = testing::Message]}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [3], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [16], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/include/gtest/gtest.h:282}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [16], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [16], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [16], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::AssertionResult::AppendMessage(const testing::Message&)}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [16], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [16], testing::Message = testing::Message]}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [16], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [11], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/include/gtest/gtest.h:282}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [11], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [11], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [11], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::AssertionResult::AppendMessage(const testing::Message&)}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [11], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [11], testing::Message = testing::Message]}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [11], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<wchar_t>, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/include/gtest/gtest.h:282}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<wchar_t>, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<wchar_t>, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<wchar_t>, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::AssertionResult::AppendMessage(const testing::Message&)}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<wchar_t>, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const wstring&)}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<wchar_t>, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [2], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/include/gtest/gtest.h:282}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [2], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [2], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [2], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::AssertionResult::AppendMessage(const testing::Message&)}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [2], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [2], testing::Message = testing::Message]}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [2], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {testing::AssertionResult testing::IsSubstring(const char*, const char*, const wstring&, const wstring&)} {../third-party/gtest/src/gtest.cc:1320}
C {testing::AssertionResult testing::IsSubstring(const char*, const char*, const wstring&, const wstring&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<wchar_t>]}
F {testing::AssertionResult testing::IsNotSubstring(const char*, const char*, const string&, const string&)} {../third-party/gtest/src/gtest.cc:1313}
C {testing::AssertionResult testing::IsNotSubstring(const char*, const char*, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<char>]}
F {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<char>]} {../third-party/gtest/src/gtest.cc:1260}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::AssertionResult(const testing::AssertionResult&)}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [2], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<char>, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [11], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [2], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [16], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [11], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [3], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<char>, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [11], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [2], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [11], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionFailure()}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionSuccess()}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::{anonymous}::IsSubstringPred(const StringType&, const StringType&) [with StringType = std::basic_string<char>]}
F {bool testing::{anonymous}::IsSubstringPred(const StringType&, const StringType&) [with StringType = std::basic_string<char>]} {../third-party/gtest/src/gtest.cc:1250}
C {bool testing::{anonymous}::IsSubstringPred(const StringType&, const StringType&) [with StringType = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::find(const std::basic_string<_CharT, _Traits, _Alloc>&, std::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
F {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::find(const std::basic_string<_CharT, _Traits, _Alloc>&, std::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:1811}
C {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::find(const std::basic_string<_CharT, _Traits, _Alloc>&, std::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::find(const _CharT*, std::basic_string<_CharT, _Traits, _Alloc>::size_type, std::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::find(const std::basic_string<_CharT, _Traits, _Alloc>&, std::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::data() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::find(const std::basic_string<_CharT, _Traits, _Alloc>&, std::basic_string<_CharT, _Traits, _Alloc>::size_type) const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
F {testing::AssertionResult testing::IsSubstring(const char*, const char*, const string&, const string&)} {../third-party/gtest/src/gtest.cc:1307}
C {testing::AssertionResult testing::IsSubstring(const char*, const char*, const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = std::basic_string<char>]}
F {testing::AssertionResult testing::IsNotSubstring(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest.cc:1301}
C {testing::AssertionResult testing::IsNotSubstring(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const wchar_t*]}
F {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const wchar_t*]} {../third-party/gtest/src/gtest.cc:1260}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const wchar_t*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const wchar_t*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const wchar_t*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::AssertionResult(const testing::AssertionResult&)}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const wchar_t*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [2], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const wchar_t*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const wchar_t*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const wchar_t*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const wchar_t*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [11], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const wchar_t*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [2], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const wchar_t*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const wchar_t*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [16], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const wchar_t*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const wchar_t*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [11], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const wchar_t*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [3], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const wchar_t*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const wchar_t*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const wchar_t*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const wchar_t*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [11], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const wchar_t*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [2], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const wchar_t*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const wchar_t*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [11], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const wchar_t*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionFailure()}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const wchar_t*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionSuccess()}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const wchar_t*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::{anonymous}::IsSubstringPred(const wchar_t*, const wchar_t*)}
F {bool testing::{anonymous}::IsSubstringPred(const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest.cc:1241}
C {bool testing::{anonymous}::IsSubstringPred(const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const wchar_t* wcsstr(const wchar_t*, const wchar_t*)}
F {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const wchar_t*, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/include/gtest/gtest.h:282}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const wchar_t*, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const wchar_t*, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const wchar_t*, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::AssertionResult::AppendMessage(const testing::Message&)}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const wchar_t*, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const wchar_t*)}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const wchar_t*, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {testing::AssertionResult testing::IsNotSubstring(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest.cc:1295}
C {testing::AssertionResult testing::IsNotSubstring(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const char*]}
F {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const char*]} {../third-party/gtest/src/gtest.cc:1260}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::AssertionResult(const testing::AssertionResult&)}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [2], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [11], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [2], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [16], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [11], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [3], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [11], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [2], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [11], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionFailure()}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionSuccess()}
C {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const char*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::{anonymous}::IsSubstringPred(const char*, const char*)}
F {bool testing::{anonymous}::IsSubstringPred(const char*, const char*)} {../third-party/gtest/src/gtest.cc:1234}
C {bool testing::{anonymous}::IsSubstringPred(const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* strstr(const char*, const char*)}
F {testing::AssertionResult testing::IsSubstring(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest.cc:1289}
C {testing::AssertionResult testing::IsSubstring(const char*, const char*, const wchar_t*, const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const wchar_t*]}
F {testing::AssertionResult testing::IsSubstring(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest.cc:1283}
C {testing::AssertionResult testing::IsSubstring(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::{anonymous}::IsSubstringImpl(bool, const char*, const char*, const StringType&, const StringType&) [with StringType = const char*]}
F {testing::AssertionResult testing::internal::CmpHelperSTRCASENE(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest.cc:1210}
C {testing::AssertionResult testing::internal::CmpHelperSTRCASENE(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::internal::CmpHelperSTRCASENE(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::internal::CmpHelperSTRCASENE(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::AssertionResult(const testing::AssertionResult&)}
C {testing::AssertionResult testing::internal::CmpHelperSTRCASENE(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [2], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperSTRCASENE(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperSTRCASENE(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [7], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperSTRCASENE(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperSTRCASENE(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [29], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperSTRCASENE(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperSTRCASENE(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [7], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperSTRCASENE(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperSTRCASENE(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [12], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperSTRCASENE(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionFailure()}
C {testing::AssertionResult testing::internal::CmpHelperSTRCASENE(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionSuccess()}
C {testing::AssertionResult testing::internal::CmpHelperSTRCASENE(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::String::CaseInsensitiveCStringEquals(const char*, const char*)}
F {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [29], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/include/gtest/gtest.h:282}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [29], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [29], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [29], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::AssertionResult::AppendMessage(const testing::Message&)}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [29], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [29], testing::Message = testing::Message]}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [29], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [29], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [29], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [29], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest.cc:1196}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::AssertionResult(const testing::AssertionResult&)}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [2], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [7], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [13], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [7], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [12], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionFailure()}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionSuccess()}
C {testing::AssertionResult testing::internal::CmpHelperSTRNE(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::String::CStringEquals(const char*, const char*)}
F {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [13], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/include/gtest/gtest.h:282}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [13], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [13], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [13], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::AssertionResult::AppendMessage(const testing::Message&)}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [13], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [13], testing::Message = testing::Message]}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [13], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {testing::AssertionResult testing::internal::CmpHelperSTRCASEEQ(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest.cc:1180}
C {testing::AssertionResult testing::internal::CmpHelperSTRCASEEQ(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperSTRCASEEQ(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperSTRCASEEQ(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperSTRCASEEQ(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperSTRCASEEQ(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::internal::EqFailure(const char*, const char*, const string&, const string&, bool)}
C {testing::AssertionResult testing::internal::CmpHelperSTRCASEEQ(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::PrintToString(const T&) [with T = const char*, std::string = std::basic_string<char>]}
C {testing::AssertionResult testing::internal::CmpHelperSTRCASEEQ(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::PrintToString(const T&) [with T = const char*, std::string = std::basic_string<char>]}
C {testing::AssertionResult testing::internal::CmpHelperSTRCASEEQ(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionSuccess()}
C {testing::AssertionResult testing::internal::CmpHelperSTRCASEEQ(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::String::CaseInsensitiveCStringEquals(const char*, const char*)}
F {std::string testing::PrintToString(const T&) [with T = const char*, std::string = std::basic_string<char>]} {../third-party/gtest/include/gtest/gtest-printers.h:847}
C {std::string testing::PrintToString(const T&) [with T = const char*, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::PrintToString(const T&) [with T = const char*, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::PrintToString(const T&) [with T = const char*, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::__string_type std::basic_stringstream<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringstream<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]}
C {std::string testing::PrintToString(const T&) [with T = const char*, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::UniversalTersePrinter<const char*>::Print(const char*, std::ostream*)}
C {std::string testing::PrintToString(const T&) [with T = const char*, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::basic_stringstream(std::ios_base::openmode) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::ios_base::openmode = std::_Ios_Openmode]}
C {std::string testing::PrintToString(const T&) [with T = const char*, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Ios_Openmode std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)}
F {static void testing::internal::UniversalTersePrinter<const char*>::Print(const char*, std::ostream*)} {../third-party/gtest/include/gtest/gtest-printers.h:704}
C {static void testing::internal::UniversalTersePrinter<const char*>::Print(const char*, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::UniversalTersePrinter<const char*>::Print(const char*, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::UniversalTersePrinter<const char*>::Print(const char*, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static void testing::internal::UniversalTersePrinter<const char*>::Print(const char*, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::UniversalTersePrinter<const char*>::Print(const char*, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::UniversalPrint(const T&, std::ostream*) [with T = std::basic_string<char>, std::ostream = std::basic_ostream<char>]}
C {static void testing::internal::UniversalTersePrinter<const char*>::Print(const char*, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static void testing::internal::UniversalTersePrinter<const char*>::Print(const char*, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static void testing::internal::UniversalTersePrinter<const char*>::Print(const char*, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
F {void testing::internal::UniversalPrint(const T&, std::ostream*) [with T = std::basic_string<char>, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/include/gtest/gtest-printers.h:752}
C {void testing::internal::UniversalPrint(const T&, std::ostream*) [with T = std::basic_string<char>, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::UniversalPrinter<T>::Print(const T&, std::ostream*) [with T = std::basic_string<char>, std::ostream = std::basic_ostream<char>]}
F {static void testing::internal::UniversalPrinter<T>::Print(const T&, std::ostream*) [with T = std::basic_string<char>, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/include/gtest/gtest-printers.h:591}
C {static void testing::internal::UniversalPrinter<T>::Print(const T&, std::ostream*) [with T = std::basic_string<char>, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::PrintTo(const string&, std::ostream*)}
F {void testing::internal::PrintTo(const string&, std::ostream*)} {../third-party/gtest/include/gtest/gtest-printers.h:464}
C {void testing::internal::PrintTo(const string&, std::ostream*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::PrintStringTo(const string&, std::ostream*)}
F {testing::AssertionResult testing::internal::CmpHelperSTREQ(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest.cc:1164}
C {testing::AssertionResult testing::internal::CmpHelperSTREQ(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperSTREQ(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperSTREQ(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperSTREQ(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperSTREQ(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::internal::EqFailure(const char*, const char*, const string&, const string&, bool)}
C {testing::AssertionResult testing::internal::CmpHelperSTREQ(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::PrintToString(const T&) [with T = const char*, std::string = std::basic_string<char>]}
C {testing::AssertionResult testing::internal::CmpHelperSTREQ(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::PrintToString(const T&) [with T = const char*, std::string = std::basic_string<char>]}
C {testing::AssertionResult testing::internal::CmpHelperSTREQ(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionSuccess()}
C {testing::AssertionResult testing::internal::CmpHelperSTREQ(const char*, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::String::CStringEquals(const char*, const char*)}
F {testing::AssertionResult testing::internal::CmpHelperGT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest.cc:1159}
C {testing::AssertionResult testing::internal::CmpHelperGT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperGT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperGT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::internal::CmpHelperGT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperGT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperGT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::internal::CmpHelperGT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::AssertionResult(const testing::AssertionResult&)}
C {testing::AssertionResult testing::internal::CmpHelperGT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<char>, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperGT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [5], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperGT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<char>, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperGT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [12], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperGT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperGT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [6], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperGT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperGT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [12], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperGT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionFailure()}
C {testing::AssertionResult testing::internal::CmpHelperGT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatForComparisonFailureMessage(const T1&, const T2&) [with T1 = long long int, T2 = long long int, std::string = std::basic_string<char>]}
C {testing::AssertionResult testing::internal::CmpHelperGT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatForComparisonFailureMessage(const T1&, const T2&) [with T1 = long long int, T2 = long long int, std::string = std::basic_string<char>]}
C {testing::AssertionResult testing::internal::CmpHelperGT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionSuccess()}
F {std::string testing::internal::FormatForComparisonFailureMessage(const T1&, const T2&) [with T1 = long long int, T2 = long long int, std::string = std::basic_string<char>]} {../third-party/gtest/include/gtest/gtest.h:1431}
C {std::string testing::internal::FormatForComparisonFailureMessage(const T1&, const T2&) [with T1 = long long int, T2 = long long int, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::string testing::internal::FormatForComparison<ToPrint, OtherOperand>::Format(const ToPrint&) [with ToPrint = long long int, OtherOperand = long long int, std::string = std::basic_string<char>]}
F {static std::string testing::internal::FormatForComparison<ToPrint, OtherOperand>::Format(const ToPrint&) [with ToPrint = long long int, OtherOperand = long long int, std::string = std::basic_string<char>]} {../third-party/gtest/include/gtest/gtest.h:1357}
C {static std::string testing::internal::FormatForComparison<ToPrint, OtherOperand>::Format(const ToPrint&) [with ToPrint = long long int, OtherOperand = long long int, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::PrintToString(const T&) [with T = long long int, std::string = std::basic_string<char>]}
F {std::string testing::PrintToString(const T&) [with T = long long int, std::string = std::basic_string<char>]} {../third-party/gtest/include/gtest/gtest-printers.h:847}
C {std::string testing::PrintToString(const T&) [with T = long long int, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::PrintToString(const T&) [with T = long long int, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::PrintToString(const T&) [with T = long long int, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::__string_type std::basic_stringstream<_CharT, _Traits, _Alloc>::str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_stringstream<_CharT, _Traits, _Alloc>::__string_type = std::basic_string<char>]}
C {std::string testing::PrintToString(const T&) [with T = long long int, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::UniversalTersePrinter<T>::Print(const T&, std::ostream*) [with T = long long int, std::ostream = std::basic_ostream<char>]}
C {std::string testing::PrintToString(const T&) [with T = long long int, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::basic_stringstream(std::ios_base::openmode) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::ios_base::openmode = std::_Ios_Openmode]}
C {std::string testing::PrintToString(const T&) [with T = long long int, std::string = std::basic_string<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Ios_Openmode std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)}
F {static void testing::internal::UniversalTersePrinter<T>::Print(const T&, std::ostream*) [with T = long long int, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/include/gtest/gtest-printers.h:683}
C {static void testing::internal::UniversalTersePrinter<T>::Print(const T&, std::ostream*) [with T = long long int, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::UniversalPrint(const T&, std::ostream*) [with T = long long int, std::ostream = std::basic_ostream<char>]}
F {void testing::internal::UniversalPrint(const T&, std::ostream*) [with T = long long int, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/include/gtest/gtest-printers.h:752}
C {void testing::internal::UniversalPrint(const T&, std::ostream*) [with T = long long int, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static void testing::internal::UniversalPrinter<T>::Print(const T&, std::ostream*) [with T = long long int, std::ostream = std::basic_ostream<char>]}
F {static void testing::internal::UniversalPrinter<T>::Print(const T&, std::ostream*) [with T = long long int, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/include/gtest/gtest-printers.h:591}
C {static void testing::internal::UniversalPrinter<T>::Print(const T&, std::ostream*) [with T = long long int, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::PrintTo(const T&, std::ostream*) [with T = long long int, std::ostream = std::basic_ostream<char>]}
F {void testing::internal::PrintTo(const T&, std::ostream*) [with T = long long int, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/include/gtest/gtest-printers.h:353}
C {void testing::internal::PrintTo(const T&, std::ostream*) [with T = long long int, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::DefaultPrintTo(testing::internal::IsNotContainer, testing::internal::false_type, const T&, std::ostream*) [with T = long long int, testing::internal::IsNotContainer = char, testing::internal::false_type = testing::internal::bool_constant<false>, std::ostream = std::basic_ostream<char>]}
C {void testing::internal::PrintTo(const T&, std::ostream*) [with T = long long int, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::IsNotContainer testing::internal::IsContainerTest(long int) [with C = long long int, testing::internal::IsNotContainer = char]}
F {testing::internal::IsNotContainer testing::internal::IsContainerTest(long int) [with C = long long int, testing::internal::IsNotContainer = char]} {../third-party/gtest/include/gtest/internal/gtest-internal.h:869}
F {void testing::internal::DefaultPrintTo(testing::internal::IsNotContainer, testing::internal::false_type, const T&, std::ostream*) [with T = long long int, testing::internal::IsNotContainer = char, testing::internal::false_type = testing::internal::bool_constant<false>, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/include/gtest/gtest-printers.h:335}
C {void testing::internal::DefaultPrintTo(testing::internal::IsNotContainer, testing::internal::false_type, const T&, std::ostream*) [with T = long long int, testing::internal::IsNotContainer = char, testing::internal::false_type = testing::internal::bool_constant<false>, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing_internal::DefaultPrintNonContainerTo(const T&, std::ostream*) [with T = long long int, std::ostream = std::basic_ostream<char>]}
F {void testing_internal::DefaultPrintNonContainerTo(const T&, std::ostream*) [with T = long long int, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/include/gtest/gtest-printers.h:218}
C {void testing_internal::DefaultPrintNonContainerTo(const T&, std::ostream*) [with T = long long int, std::ostream = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long long int) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]}
F {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [6], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/include/gtest/gtest.h:282}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [6], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [6], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [6], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::AssertionResult::AppendMessage(const testing::Message&)}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [6], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [6], testing::Message = testing::Message]}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [6], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {testing::AssertionResult testing::internal::CmpHelperGE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest.cc:1156}
C {testing::AssertionResult testing::internal::CmpHelperGE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperGE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperGE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::internal::CmpHelperGE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperGE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperGE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::internal::CmpHelperGE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::AssertionResult(const testing::AssertionResult&)}
C {testing::AssertionResult testing::internal::CmpHelperGE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<char>, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperGE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [5], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperGE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<char>, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperGE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [12], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperGE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperGE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [7], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperGE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperGE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [12], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperGE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionFailure()}
C {testing::AssertionResult testing::internal::CmpHelperGE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatForComparisonFailureMessage(const T1&, const T2&) [with T1 = long long int, T2 = long long int, std::string = std::basic_string<char>]}
C {testing::AssertionResult testing::internal::CmpHelperGE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatForComparisonFailureMessage(const T1&, const T2&) [with T1 = long long int, T2 = long long int, std::string = std::basic_string<char>]}
C {testing::AssertionResult testing::internal::CmpHelperGE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionSuccess()}
F {testing::AssertionResult testing::internal::CmpHelperLT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest.cc:1153}
C {testing::AssertionResult testing::internal::CmpHelperLT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperLT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperLT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::internal::CmpHelperLT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperLT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperLT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::internal::CmpHelperLT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::AssertionResult(const testing::AssertionResult&)}
C {testing::AssertionResult testing::internal::CmpHelperLT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<char>, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperLT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [5], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperLT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<char>, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperLT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [12], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperLT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperLT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [6], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperLT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperLT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [12], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperLT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionFailure()}
C {testing::AssertionResult testing::internal::CmpHelperLT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatForComparisonFailureMessage(const T1&, const T2&) [with T1 = long long int, T2 = long long int, std::string = std::basic_string<char>]}
C {testing::AssertionResult testing::internal::CmpHelperLT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatForComparisonFailureMessage(const T1&, const T2&) [with T1 = long long int, T2 = long long int, std::string = std::basic_string<char>]}
C {testing::AssertionResult testing::internal::CmpHelperLT(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionSuccess()}
F {testing::AssertionResult testing::internal::CmpHelperLE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest.cc:1150}
C {testing::AssertionResult testing::internal::CmpHelperLE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperLE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperLE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::internal::CmpHelperLE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperLE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperLE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::internal::CmpHelperLE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::AssertionResult(const testing::AssertionResult&)}
C {testing::AssertionResult testing::internal::CmpHelperLE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<char>, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperLE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [5], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperLE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<char>, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperLE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [12], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperLE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperLE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [7], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperLE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperLE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [12], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperLE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionFailure()}
C {testing::AssertionResult testing::internal::CmpHelperLE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatForComparisonFailureMessage(const T1&, const T2&) [with T1 = long long int, T2 = long long int, std::string = std::basic_string<char>]}
C {testing::AssertionResult testing::internal::CmpHelperLE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatForComparisonFailureMessage(const T1&, const T2&) [with T1 = long long int, T2 = long long int, std::string = std::basic_string<char>]}
C {testing::AssertionResult testing::internal::CmpHelperLE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionSuccess()}
F {testing::AssertionResult testing::internal::CmpHelperNE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest.cc:1147}
C {testing::AssertionResult testing::internal::CmpHelperNE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperNE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperNE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::internal::CmpHelperNE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperNE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperNE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::internal::CmpHelperNE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::AssertionResult(const testing::AssertionResult&)}
C {testing::AssertionResult testing::internal::CmpHelperNE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<char>, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperNE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [5], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperNE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<char>, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperNE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [12], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperNE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperNE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [7], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperNE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperNE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [12], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::CmpHelperNE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionFailure()}
C {testing::AssertionResult testing::internal::CmpHelperNE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatForComparisonFailureMessage(const T1&, const T2&) [with T1 = long long int, T2 = long long int, std::string = std::basic_string<char>]}
C {testing::AssertionResult testing::internal::CmpHelperNE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatForComparisonFailureMessage(const T1&, const T2&) [with T1 = long long int, T2 = long long int, std::string = std::basic_string<char>]}
C {testing::AssertionResult testing::internal::CmpHelperNE(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionSuccess()}
F {testing::AssertionResult testing::internal::CmpHelperEQ(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest.cc:1114}
C {testing::AssertionResult testing::internal::CmpHelperEQ(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperEQ(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperEQ(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperEQ(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::CmpHelperEQ(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::internal::EqFailure(const char*, const char*, const string&, const string&, bool)}
C {testing::AssertionResult testing::internal::CmpHelperEQ(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatForComparisonFailureMessage(const T1&, const T2&) [with T1 = long long int, T2 = long long int, std::string = std::basic_string<char>]}
C {testing::AssertionResult testing::internal::CmpHelperEQ(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::FormatForComparisonFailureMessage(const T1&, const T2&) [with T1 = long long int, T2 = long long int, std::string = std::basic_string<char>]}
C {testing::AssertionResult testing::internal::CmpHelperEQ(const char*, const char*, testing::internal::BiggestInt, testing::internal::BiggestInt)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionSuccess()}
F {testing::AssertionResult testing::DoubleLE(const char*, const char*, double, double)} {../third-party/gtest/src/gtest.cc:1105}
C {testing::AssertionResult testing::DoubleLE(const char*, const char*, double, double)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]}
F {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest.cc:1061}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::AssertionResult(const testing::AssertionResult&)}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<char>, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [5], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<char>, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [11], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [3], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [7], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [12], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionFailure()}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StringStreamToString(std::stringstream*)}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StringStreamToString(std::stringstream*)}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(double) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setprecision) [with _CharT = char, _Traits = std::char_traits<char>]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Setprecision std::setprecision(int)}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::basic_stringstream(std::ios_base::openmode) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::ios_base::openmode = std::_Ios_Openmode]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Ios_Openmode std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(double) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setprecision) [with _CharT = char, _Traits = std::char_traits<char>]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Setprecision std::setprecision(int)}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::basic_stringstream(std::ios_base::openmode) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::ios_base::openmode = std::_Ios_Openmode]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Ios_Openmode std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionSuccess()}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::FloatingPoint<RawType>::AlmostEquals(const testing::internal::FloatingPoint<RawType>&) const [with RawType = double, testing::internal::FloatingPoint<RawType> = testing::internal::FloatingPoint<double>]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FloatingPoint<RawType>::FloatingPoint(const RawType&) [with RawType = double]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FloatingPoint<RawType>::FloatingPoint(const RawType&) [with RawType = double]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionSuccess()}
F {testing::internal::FloatingPoint<RawType>::FloatingPoint(const RawType&) [with RawType = double]} {../third-party/gtest/include/gtest/internal/gtest-internal.h:280}
F {bool testing::internal::FloatingPoint<RawType>::AlmostEquals(const testing::internal::FloatingPoint<RawType>&) const [with RawType = double, testing::internal::FloatingPoint<RawType> = testing::internal::FloatingPoint<double>]} {../third-party/gtest/include/gtest/internal/gtest-internal.h:328}
C {bool testing::internal::FloatingPoint<RawType>::AlmostEquals(const testing::internal::FloatingPoint<RawType>&) const [with RawType = double, testing::internal::FloatingPoint<RawType> = testing::internal::FloatingPoint<double>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static testing::internal::FloatingPoint<RawType>::Bits testing::internal::FloatingPoint<RawType>::DistanceBetweenSignAndMagnitudeNumbers(const Bits&, const Bits&) [with RawType = double, testing::internal::FloatingPoint<RawType>::Bits = long long unsigned int]}
C {bool testing::internal::FloatingPoint<RawType>::AlmostEquals(const testing::internal::FloatingPoint<RawType>&) const [with RawType = double, testing::internal::FloatingPoint<RawType> = testing::internal::FloatingPoint<double>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::FloatingPoint<RawType>::is_nan() const [with RawType = double]}
C {bool testing::internal::FloatingPoint<RawType>::AlmostEquals(const testing::internal::FloatingPoint<RawType>&) const [with RawType = double, testing::internal::FloatingPoint<RawType> = testing::internal::FloatingPoint<double>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::FloatingPoint<RawType>::is_nan() const [with RawType = double]}
F {bool testing::internal::FloatingPoint<RawType>::is_nan() const [with RawType = double]} {../third-party/gtest/include/gtest/internal/gtest-internal.h:316}
C {bool testing::internal::FloatingPoint<RawType>::is_nan() const [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FloatingPoint<RawType>::Bits testing::internal::FloatingPoint<RawType>::fraction_bits() const [with RawType = double, testing::internal::FloatingPoint<RawType>::Bits = long long unsigned int]}
C {bool testing::internal::FloatingPoint<RawType>::is_nan() const [with RawType = double]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FloatingPoint<RawType>::Bits testing::internal::FloatingPoint<RawType>::exponent_bits() const [with RawType = double, testing::internal::FloatingPoint<RawType>::Bits = long long unsigned int]}
F {testing::internal::FloatingPoint<RawType>::Bits testing::internal::FloatingPoint<RawType>::exponent_bits() const [with RawType = double, testing::internal::FloatingPoint<RawType>::Bits = long long unsigned int]} {../third-party/gtest/include/gtest/internal/gtest-internal.h:307}
F {testing::internal::FloatingPoint<RawType>::Bits testing::internal::FloatingPoint<RawType>::fraction_bits() const [with RawType = double, testing::internal::FloatingPoint<RawType>::Bits = long long unsigned int]} {../third-party/gtest/include/gtest/internal/gtest-internal.h:310}
F {static testing::internal::FloatingPoint<RawType>::Bits testing::internal::FloatingPoint<RawType>::DistanceBetweenSignAndMagnitudeNumbers(const Bits&, const Bits&) [with RawType = double, testing::internal::FloatingPoint<RawType>::Bits = long long unsigned int]} {../third-party/gtest/include/gtest/internal/gtest-internal.h:371}
C {static testing::internal::FloatingPoint<RawType>::Bits testing::internal::FloatingPoint<RawType>::DistanceBetweenSignAndMagnitudeNumbers(const Bits&, const Bits&) [with RawType = double, testing::internal::FloatingPoint<RawType>::Bits = long long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static testing::internal::FloatingPoint<RawType>::Bits testing::internal::FloatingPoint<RawType>::SignAndMagnitudeToBiased(const Bits&) [with RawType = double, testing::internal::FloatingPoint<RawType>::Bits = long long unsigned int]}
C {static testing::internal::FloatingPoint<RawType>::Bits testing::internal::FloatingPoint<RawType>::DistanceBetweenSignAndMagnitudeNumbers(const Bits&, const Bits&) [with RawType = double, testing::internal::FloatingPoint<RawType>::Bits = long long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static testing::internal::FloatingPoint<RawType>::Bits testing::internal::FloatingPoint<RawType>::SignAndMagnitudeToBiased(const Bits&) [with RawType = double, testing::internal::FloatingPoint<RawType>::Bits = long long unsigned int]}
F {static testing::internal::FloatingPoint<RawType>::Bits testing::internal::FloatingPoint<RawType>::SignAndMagnitudeToBiased(const Bits&) [with RawType = double, testing::internal::FloatingPoint<RawType>::Bits = long long unsigned int]} {../third-party/gtest/include/gtest/internal/gtest-internal.h:359}
F {std::_Setprecision std::setprecision(int)} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/iomanip:194}
F {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setprecision) [with _CharT = char, _Traits = std::char_traits<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/iomanip:207}
C {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setprecision) [with _CharT = char, _Traits = std::char_traits<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::streamsize std::ios_base::precision(std::streamsize)}
F {std::streamsize std::ios_base::precision(std::streamsize)} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/ios_base.h:632}
F {testing::AssertionResult testing::FloatLE(const char*, const char*, float, float)} {../third-party/gtest/src/gtest.cc:1098}
C {testing::AssertionResult testing::FloatLE(const char*, const char*, float, float)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]}
F {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest.cc:1061}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::~basic_stringstream() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::AssertionResult(const testing::AssertionResult&)}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<char>, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [5], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<char>, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [11], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [3], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [7], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [12], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionFailure()}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StringStreamToString(std::stringstream*)}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StringStreamToString(std::stringstream*)}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(float) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setprecision) [with _CharT = char, _Traits = std::char_traits<char>]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Setprecision std::setprecision(int)}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::basic_stringstream(std::ios_base::openmode) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::ios_base::openmode = std::_Ios_Openmode]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Ios_Openmode std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(float) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setprecision) [with _CharT = char, _Traits = std::char_traits<char>]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Setprecision std::setprecision(int)}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::basic_stringstream(std::ios_base::openmode) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::ios_base::openmode = std::_Ios_Openmode]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Ios_Openmode std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionSuccess()}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::FloatingPoint<RawType>::AlmostEquals(const testing::internal::FloatingPoint<RawType>&) const [with RawType = float, testing::internal::FloatingPoint<RawType> = testing::internal::FloatingPoint<float>]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FloatingPoint<RawType>::FloatingPoint(const RawType&) [with RawType = float]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FloatingPoint<RawType>::FloatingPoint(const RawType&) [with RawType = float]}
C {testing::AssertionResult testing::internal::FloatingPointLE(const char*, const char*, RawType, RawType) [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionSuccess()}
F {testing::internal::FloatingPoint<RawType>::FloatingPoint(const RawType&) [with RawType = float]} {../third-party/gtest/include/gtest/internal/gtest-internal.h:280}
F {bool testing::internal::FloatingPoint<RawType>::AlmostEquals(const testing::internal::FloatingPoint<RawType>&) const [with RawType = float, testing::internal::FloatingPoint<RawType> = testing::internal::FloatingPoint<float>]} {../third-party/gtest/include/gtest/internal/gtest-internal.h:328}
C {bool testing::internal::FloatingPoint<RawType>::AlmostEquals(const testing::internal::FloatingPoint<RawType>&) const [with RawType = float, testing::internal::FloatingPoint<RawType> = testing::internal::FloatingPoint<float>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static testing::internal::FloatingPoint<RawType>::Bits testing::internal::FloatingPoint<RawType>::DistanceBetweenSignAndMagnitudeNumbers(const Bits&, const Bits&) [with RawType = float, testing::internal::FloatingPoint<RawType>::Bits = unsigned int]}
C {bool testing::internal::FloatingPoint<RawType>::AlmostEquals(const testing::internal::FloatingPoint<RawType>&) const [with RawType = float, testing::internal::FloatingPoint<RawType> = testing::internal::FloatingPoint<float>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::FloatingPoint<RawType>::is_nan() const [with RawType = float]}
C {bool testing::internal::FloatingPoint<RawType>::AlmostEquals(const testing::internal::FloatingPoint<RawType>&) const [with RawType = float, testing::internal::FloatingPoint<RawType> = testing::internal::FloatingPoint<float>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::FloatingPoint<RawType>::is_nan() const [with RawType = float]}
F {bool testing::internal::FloatingPoint<RawType>::is_nan() const [with RawType = float]} {../third-party/gtest/include/gtest/internal/gtest-internal.h:316}
C {bool testing::internal::FloatingPoint<RawType>::is_nan() const [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FloatingPoint<RawType>::Bits testing::internal::FloatingPoint<RawType>::fraction_bits() const [with RawType = float, testing::internal::FloatingPoint<RawType>::Bits = unsigned int]}
C {bool testing::internal::FloatingPoint<RawType>::is_nan() const [with RawType = float]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FloatingPoint<RawType>::Bits testing::internal::FloatingPoint<RawType>::exponent_bits() const [with RawType = float, testing::internal::FloatingPoint<RawType>::Bits = unsigned int]}
F {testing::internal::FloatingPoint<RawType>::Bits testing::internal::FloatingPoint<RawType>::exponent_bits() const [with RawType = float, testing::internal::FloatingPoint<RawType>::Bits = unsigned int]} {../third-party/gtest/include/gtest/internal/gtest-internal.h:307}
F {testing::internal::FloatingPoint<RawType>::Bits testing::internal::FloatingPoint<RawType>::fraction_bits() const [with RawType = float, testing::internal::FloatingPoint<RawType>::Bits = unsigned int]} {../third-party/gtest/include/gtest/internal/gtest-internal.h:310}
F {static testing::internal::FloatingPoint<RawType>::Bits testing::internal::FloatingPoint<RawType>::DistanceBetweenSignAndMagnitudeNumbers(const Bits&, const Bits&) [with RawType = float, testing::internal::FloatingPoint<RawType>::Bits = unsigned int]} {../third-party/gtest/include/gtest/internal/gtest-internal.h:371}
C {static testing::internal::FloatingPoint<RawType>::Bits testing::internal::FloatingPoint<RawType>::DistanceBetweenSignAndMagnitudeNumbers(const Bits&, const Bits&) [with RawType = float, testing::internal::FloatingPoint<RawType>::Bits = unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static testing::internal::FloatingPoint<RawType>::Bits testing::internal::FloatingPoint<RawType>::SignAndMagnitudeToBiased(const Bits&) [with RawType = float, testing::internal::FloatingPoint<RawType>::Bits = unsigned int]}
C {static testing::internal::FloatingPoint<RawType>::Bits testing::internal::FloatingPoint<RawType>::DistanceBetweenSignAndMagnitudeNumbers(const Bits&, const Bits&) [with RawType = float, testing::internal::FloatingPoint<RawType>::Bits = unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {static testing::internal::FloatingPoint<RawType>::Bits testing::internal::FloatingPoint<RawType>::SignAndMagnitudeToBiased(const Bits&) [with RawType = float, testing::internal::FloatingPoint<RawType>::Bits = unsigned int]}
F {static testing::internal::FloatingPoint<RawType>::Bits testing::internal::FloatingPoint<RawType>::SignAndMagnitudeToBiased(const Bits&) [with RawType = float, testing::internal::FloatingPoint<RawType>::Bits = unsigned int]} {../third-party/gtest/include/gtest/internal/gtest-internal.h:359}
F {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(float) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/ostream:215}
C {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(float) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::_M_insert(_ValueT) [with _ValueT = double, _CharT = char, _Traits = std::char_traits<char>]}
F {testing::AssertionResult testing::internal::DoubleNearPredFormat(const char*, const char*, const char*, double, double, double)} {../third-party/gtest/src/gtest.cc:1039}
C {testing::AssertionResult testing::internal::DoubleNearPredFormat(const char*, const char*, const char*, double, double, double)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::internal::DoubleNearPredFormat(const char*, const char*, const char*, double, double, double)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::internal::DoubleNearPredFormat(const char*, const char*, const char*, double, double, double)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::AssertionResult(const testing::AssertionResult&)}
C {testing::AssertionResult testing::internal::DoubleNearPredFormat(const char*, const char*, const char*, double, double, double)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [2], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::DoubleNearPredFormat(const char*, const char*, const char*, double, double, double)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = double, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::DoubleNearPredFormat(const char*, const char*, const char*, double, double, double)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [15], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::DoubleNearPredFormat(const char*, const char*, const char*, double, double, double)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::DoubleNearPredFormat(const char*, const char*, const char*, double, double, double)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [7], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::DoubleNearPredFormat(const char*, const char*, const char*, double, double, double)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = double, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::DoubleNearPredFormat(const char*, const char*, const char*, double, double, double)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [15], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::DoubleNearPredFormat(const char*, const char*, const char*, double, double, double)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::DoubleNearPredFormat(const char*, const char*, const char*, double, double, double)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [3], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::DoubleNearPredFormat(const char*, const char*, const char*, double, double, double)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = double, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::DoubleNearPredFormat(const char*, const char*, const char*, double, double, double)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [15], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::DoubleNearPredFormat(const char*, const char*, const char*, double, double, double)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::DoubleNearPredFormat(const char*, const char*, const char*, double, double, double)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [9], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::DoubleNearPredFormat(const char*, const char*, const char*, double, double, double)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::DoubleNearPredFormat(const char*, const char*, const char*, double, double, double)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [17], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::DoubleNearPredFormat(const char*, const char*, const char*, double, double, double)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = double, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::DoubleNearPredFormat(const char*, const char*, const char*, double, double, double)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [5], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::DoubleNearPredFormat(const char*, const char*, const char*, double, double, double)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::DoubleNearPredFormat(const char*, const char*, const char*, double, double, double)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [6], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::DoubleNearPredFormat(const char*, const char*, const char*, double, double, double)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = const char*, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::DoubleNearPredFormat(const char*, const char*, const char*, double, double, double)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [24], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::DoubleNearPredFormat(const char*, const char*, const char*, double, double, double)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionFailure()}
C {testing::AssertionResult testing::internal::DoubleNearPredFormat(const char*, const char*, const char*, double, double, double)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionSuccess()}
F {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [24], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/include/gtest/gtest.h:282}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [24], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [24], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [24], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::AssertionResult::AppendMessage(const testing::Message&)}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [24], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [24], testing::Message = testing::Message]}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [24], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [17], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/include/gtest/gtest.h:282}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [17], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [17], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [17], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::AssertionResult::AppendMessage(const testing::Message&)}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [17], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [17], testing::Message = testing::Message]}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [17], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [9], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/include/gtest/gtest.h:282}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [9], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [9], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [9], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::AssertionResult::AppendMessage(const testing::Message&)}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [9], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [9], testing::Message = testing::Message]}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [9], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [15], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/include/gtest/gtest.h:282}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [15], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [15], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [15], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::AssertionResult::AppendMessage(const testing::Message&)}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [15], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [15], testing::Message = testing::Message]}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [15], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = double, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/include/gtest/gtest.h:282}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = double, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = double, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = double, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::AssertionResult::AppendMessage(const testing::Message&)}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = double, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = double, testing::Message = testing::Message]}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = double, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {testing::Message& testing::Message::operator<<(const T&) [with T = double, testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = double, testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(double) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = double, testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {std::string testing::internal::GetBoolAssertionFailureMessage(const testing::AssertionResult&, const char*, const char*, const char*)} {../third-party/gtest/src/gtest.cc:1023}
C {std::string testing::internal::GetBoolAssertionFailureMessage(const testing::AssertionResult&, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {std::string testing::internal::GetBoolAssertionFailureMessage(const testing::AssertionResult&, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {std::string testing::internal::GetBoolAssertionFailureMessage(const testing::AssertionResult&, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::Message::GetString() const}
C {std::string testing::internal::GetBoolAssertionFailureMessage(const testing::AssertionResult&, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]}
C {std::string testing::internal::GetBoolAssertionFailureMessage(const testing::AssertionResult&, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [12], testing::Message = testing::Message]}
C {std::string testing::internal::GetBoolAssertionFailureMessage(const testing::AssertionResult&, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [2], testing::Message = testing::Message]}
C {std::string testing::internal::GetBoolAssertionFailureMessage(const testing::AssertionResult&, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]}
C {std::string testing::internal::GetBoolAssertionFailureMessage(const testing::AssertionResult&, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [3], testing::Message = testing::Message]}
C {std::string testing::internal::GetBoolAssertionFailureMessage(const testing::AssertionResult&, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]}
C {std::string testing::internal::GetBoolAssertionFailureMessage(const testing::AssertionResult&, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [12], testing::Message = testing::Message]}
C {std::string testing::internal::GetBoolAssertionFailureMessage(const testing::AssertionResult&, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]}
C {std::string testing::internal::GetBoolAssertionFailureMessage(const testing::AssertionResult&, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [11], testing::Message = testing::Message]}
C {std::string testing::internal::GetBoolAssertionFailureMessage(const testing::AssertionResult&, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
C {std::string testing::internal::GetBoolAssertionFailureMessage(const testing::AssertionResult&, const char*, const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::AssertionResult::message() const}
F {const char* testing::AssertionResult::message() const} {../third-party/gtest/include/gtest/gtest.h:274}
C {const char* testing::AssertionResult::message() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {const char* testing::AssertionResult::message() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {T* testing::internal::scoped_ptr<T>::operator->() const [with T = std::basic_string<char>]}
C {const char* testing::AssertionResult::message() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {T* testing::internal::scoped_ptr<T>::get() const [with T = std::basic_string<char>]}
F {testing::AssertionResult testing::internal::EqFailure(const char*, const char*, const string&, const string&, bool)} {../third-party/gtest/src/gtest.cc:1000}
C {testing::AssertionResult testing::internal::EqFailure(const char*, const char*, const string&, const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult testing::internal::EqFailure(const char*, const char*, const string&, const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::internal::EqFailure(const char*, const char*, const string&, const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult testing::internal::EqFailure(const char*, const char*, const string&, const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::internal::EqFailure(const char*, const char*, const string&, const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::AssertionResult(const testing::AssertionResult&)}
C {testing::AssertionResult testing::internal::EqFailure(const char*, const char*, const string&, const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = testing::Message, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::EqFailure(const char*, const char*, const string&, const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionFailure()}
C {testing::AssertionResult testing::internal::EqFailure(const char*, const char*, const string&, const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = std::basic_string<char>, testing::Message = testing::Message]}
C {testing::AssertionResult testing::internal::EqFailure(const char*, const char*, const string&, const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [12], testing::Message = testing::Message]}
C {testing::AssertionResult testing::internal::EqFailure(const char*, const char*, const string&, const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::operator!=(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::EqFailure(const char*, const char*, const string&, const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [17], testing::Message = testing::Message]}
C {testing::AssertionResult testing::internal::EqFailure(const char*, const char*, const string&, const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]}
C {testing::AssertionResult testing::internal::EqFailure(const char*, const char*, const string&, const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [12], testing::Message = testing::Message]}
C {testing::AssertionResult testing::internal::EqFailure(const char*, const char*, const string&, const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = std::basic_string<char>, testing::Message = testing::Message]}
C {testing::AssertionResult testing::internal::EqFailure(const char*, const char*, const string&, const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [12], testing::Message = testing::Message]}
C {testing::AssertionResult testing::internal::EqFailure(const char*, const char*, const string&, const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::operator!=(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::EqFailure(const char*, const char*, const string&, const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(T* const&) [with T = const char, testing::Message = testing::Message]}
C {testing::AssertionResult testing::internal::EqFailure(const char*, const char*, const string&, const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [11], testing::Message = testing::Message]}
C {testing::AssertionResult testing::internal::EqFailure(const char*, const char*, const string&, const string&, bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = testing::Message, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/include/gtest/gtest.h:282}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = testing::Message, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = testing::Message, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = testing::Message, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::AssertionResult::AppendMessage(const testing::Message&)}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = testing::Message, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = testing::Message, testing::Message = testing::Message]}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = testing::Message, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {testing::AssertionResult testing::AssertionFailure(const testing::Message&)} {../third-party/gtest/src/gtest.cc:979}
C {testing::AssertionResult testing::AssertionFailure(const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::AssertionFailure(const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::AssertionFailure(const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::AssertionResult(const testing::AssertionResult&)}
C {testing::AssertionResult testing::AssertionFailure(const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = testing::Message, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::AssertionFailure(const testing::Message&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionFailure()}
F {testing::AssertionResult testing::AssertionFailure()} {../third-party/gtest/src/gtest.cc:973}
C {testing::AssertionResult testing::AssertionFailure()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::AssertionResult(bool)}
F {testing::AssertionResult testing::AssertionSuccess()} {../third-party/gtest/src/gtest.cc:968}
C {testing::AssertionResult testing::AssertionSuccess()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::AssertionResult(bool)}
F {testing::AssertionResult testing::AssertionResult::operator!() const} {../third-party/gtest/src/gtest.cc:960}
C {testing::AssertionResult testing::AssertionResult::operator!() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::AssertionResult::operator!() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<char>, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::AssertionResult::operator!() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_string<char>]}
C {testing::AssertionResult testing::AssertionResult::operator!() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {T* testing::internal::scoped_ptr<T>::get() const [with T = std::basic_string<char>]}
C {testing::AssertionResult testing::AssertionResult::operator!() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::AssertionResult(bool)}
F {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_string<char>]} {../third-party/gtest/include/gtest/internal/gtest-port.h:897}
F {testing::AssertionResult::AssertionResult(const testing::AssertionResult&)} {../third-party/gtest/src/gtest.cc:952}
C {testing::AssertionResult::AssertionResult(const testing::AssertionResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::AssertionResult::AssertionResult(const testing::AssertionResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::scoped_ptr(T*) [with T = std::basic_string<char>]}
C {testing::AssertionResult::AssertionResult(const testing::AssertionResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {testing::AssertionResult::AssertionResult(const testing::AssertionResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {testing::AssertionResult::AssertionResult(const testing::AssertionResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_string<char>]}
C {testing::AssertionResult::AssertionResult(const testing::AssertionResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {T* testing::internal::scoped_ptr<T>::get() const [with T = std::basic_string<char>]}
F {std::string testing::Message::GetString() const} {../third-party/gtest/src/gtest.cc:946}
C {std::string testing::Message::GetString() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StringStreamToString(std::stringstream*)}
C {std::string testing::Message::GetString() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {T* testing::internal::scoped_ptr<T>::get() const [with T = std::basic_stringstream<char>]}
F {T* testing::internal::scoped_ptr<T>::get() const [with T = std::basic_stringstream<char>]} {../third-party/gtest/include/gtest/internal/gtest-port.h:899}
F {testing::Message& testing::Message::operator<<(const wstring&)} {../third-party/gtest/src/gtest.cc:929}
C {testing::Message& testing::Message::operator<<(const wstring&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::StreamWideCharsToMessage(const wchar_t*, size_t, testing::Message*)}
C {testing::Message& testing::Message::operator<<(const wstring&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]}
C {testing::Message& testing::Message::operator<<(const wstring&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
F {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:716}
C {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::_Rep* std::basic_string<_CharT, _Traits, _Alloc>::_M_rep() const [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]}
F {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]} {/home/sudoku/gcc-graph/gccgraph/lib/gcc/x86_64-unknown-linux-gnu/4.6.2/../../../../include/c++/4.6.2/bits/basic_string.h:1766}
C {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]} {../third-party/gtest/src/gtest-typed-test.cc:110} {_CharT* std::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = wchar_t, _Traits = std::char_traits<wchar_t>, _Alloc = std::allocator<wchar_t>]}
F {void testing::internal::StreamWideCharsToMessage(const wchar_t*, size_t, testing::Message*)} {../third-party/gtest/src/gtest.cc:888}
C {void testing::internal::StreamWideCharsToMessage(const wchar_t*, size_t, testing::Message*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::StreamWideCharsToMessage(const wchar_t*, size_t, testing::Message*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char, testing::Message = testing::Message]}
C {void testing::internal::StreamWideCharsToMessage(const wchar_t*, size_t, testing::Message*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::StreamWideCharsToMessage(const wchar_t*, size_t, testing::Message*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = std::basic_string<char>, testing::Message = testing::Message]}
C {void testing::internal::StreamWideCharsToMessage(const wchar_t*, size_t, testing::Message*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::WideStringToUtf8(const wchar_t*, int)}
F {testing::Message& testing::Message::operator<<(wchar_t*)} {../third-party/gtest/src/gtest.cc:922}
C {testing::Message& testing::Message::operator<<(wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::Message& testing::Message::operator<<(wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::Message& testing::Message::operator<<(wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = std::basic_string<char>, testing::Message = testing::Message]}
C {testing::Message& testing::Message::operator<<(wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::string testing::internal::String::ShowWideCString(const wchar_t*)}
F {testing::Message& testing::Message::operator<<(const wchar_t*)} {../third-party/gtest/src/gtest.cc:919}
C {testing::Message& testing::Message::operator<<(const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::Message& testing::Message::operator<<(const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::Message& testing::Message::operator<<(const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = std::basic_string<char>, testing::Message = testing::Message]}
C {testing::Message& testing::Message::operator<<(const wchar_t*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::string testing::internal::String::ShowWideCString(const wchar_t*)}
F {testing::Message::Message()} {../third-party/gtest/src/gtest.cc:911}
C {testing::Message::Message()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::~scoped_ptr() [with T = std::basic_stringstream<char>]}
C {testing::Message::Message()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::Message::Message()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setprecision) [with _CharT = char, _Traits = std::char_traits<char>]}
C {testing::Message::Message()} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
C {testing::Message::Message()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Setprecision std::setprecision(int)}
C {testing::Message::Message()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::scoped_ptr<T>::scoped_ptr(T*) [with T = std::basic_stringstream<char>]}
C {testing::Message::Message()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_stringstream<_CharT, _Traits, _Alloc>::basic_stringstream(std::ios_base::openmode) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::ios_base::openmode = std::_Ios_Openmode]}
C {testing::Message::Message()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {testing::Message::Message()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::_Ios_Openmode std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)}
F {static bool testing::internal::String::CStringEquals(const char*, const char*)} {../third-party/gtest/src/gtest.cc:876}
C {static bool testing::internal::String::CStringEquals(const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int strcmp(const char*, const char*)}
F {testing::internal::TimeInMillis testing::internal::GetTimeInMillis()} {../third-party/gtest/src/gtest.cc:780}
C {testing::internal::TimeInMillis testing::internal::GetTimeInMillis()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int gettimeofday(timeval*, __timezone_ptr_t)}
F {std::string testing::internal::UnitTestImpl::CurrentOsStackTraceExceptTop(int)} {../third-party/gtest/src/gtest.cc:774}
C {std::string testing::internal::UnitTestImpl::CurrentOsStackTraceExceptTop(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {std::string testing::internal::UnitTestImpl::CurrentOsStackTraceExceptTop(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {std::string testing::internal::UnitTestImpl::CurrentOsStackTraceExceptTop(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {std::string testing::internal::UnitTestImpl::CurrentOsStackTraceExceptTop(int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
F {int testing::internal::UnitTestImpl::test_to_run_count() const} {../third-party/gtest/src/gtest.cc:760}
C {int testing::internal::UnitTestImpl::test_to_run_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::SumOverTestCaseList(const std::vector<testing::TestCase*>&, int (testing::TestCase::*)()const)}
F {int testing::internal::SumOverTestCaseList(const std::vector<testing::TestCase*>&, int (testing::TestCase::*)()const)} {../third-party/gtest/src/gtest.cc:321}
C {int testing::internal::SumOverTestCaseList(const std::vector<testing::TestCase*>&, int (testing::TestCase::*)()const)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
C {int testing::internal::SumOverTestCaseList(const std::vector<testing::TestCase*>&, int (testing::TestCase::*)()const)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::const_reference = testing::TestCase* const&, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {int testing::internal::UnitTestImpl::total_test_count() const} {../third-party/gtest/src/gtest.cc:755}
C {int testing::internal::UnitTestImpl::total_test_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::SumOverTestCaseList(const std::vector<testing::TestCase*>&, int (testing::TestCase::*)()const)}
F {int testing::internal::UnitTestImpl::reportable_test_count() const} {../third-party/gtest/src/gtest.cc:750}
C {int testing::internal::UnitTestImpl::reportable_test_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::SumOverTestCaseList(const std::vector<testing::TestCase*>&, int (testing::TestCase::*)()const)}
F {int testing::internal::UnitTestImpl::disabled_test_count() const} {../third-party/gtest/src/gtest.cc:745}
C {int testing::internal::UnitTestImpl::disabled_test_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::SumOverTestCaseList(const std::vector<testing::TestCase*>&, int (testing::TestCase::*)()const)}
F {int testing::internal::UnitTestImpl::reportable_disabled_test_count() const} {../third-party/gtest/src/gtest.cc:739}
C {int testing::internal::UnitTestImpl::reportable_disabled_test_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::SumOverTestCaseList(const std::vector<testing::TestCase*>&, int (testing::TestCase::*)()const)}
F {int testing::internal::UnitTestImpl::failed_test_count() const} {../third-party/gtest/src/gtest.cc:734}
C {int testing::internal::UnitTestImpl::failed_test_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::SumOverTestCaseList(const std::vector<testing::TestCase*>&, int (testing::TestCase::*)()const)}
F {int testing::internal::UnitTestImpl::successful_test_count() const} {../third-party/gtest/src/gtest.cc:729}
C {int testing::internal::UnitTestImpl::successful_test_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::SumOverTestCaseList(const std::vector<testing::TestCase*>&, int (testing::TestCase::*)()const)}
F {int testing::internal::UnitTestImpl::test_case_to_run_count() const} {../third-party/gtest/src/gtest.cc:724}
C {int testing::internal::UnitTestImpl::test_case_to_run_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::CountIf(const Container&, Predicate) [with Container = std::vector<testing::TestCase*>, Predicate = bool (*)(const testing::TestCase*)]}
F {int testing::internal::CountIf(const Container&, Predicate) [with Container = std::vector<testing::TestCase*>, Predicate = bool (*)(const testing::TestCase*)]} {../third-party/gtest/src/gtest-internal-inl.h:282}
C {int testing::internal::CountIf(const Container&, Predicate) [with Container = std::vector<testing::TestCase*>, Predicate = bool (*)(const testing::TestCase*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = testing::TestCase* const*, _Container = std::vector<testing::TestCase*>]}
C {int testing::internal::CountIf(const Container&, Predicate) [with Container = std::vector<testing::TestCase*>, Predicate = bool (*)(const testing::TestCase*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<testing::TestCase* const*, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = testing::TestCase* const*]}
C {int testing::internal::CountIf(const Container&, Predicate) [with Container = std::vector<testing::TestCase*>, Predicate = bool (*)(const testing::TestCase*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = testing::TestCase* const*, _Container = std::vector<testing::TestCase*>, __gnu_cxx::__normal_iterator<_Iterator, _Container> = __gnu_cxx::__normal_iterator<testing::TestCase* const*, std::vector<testing::TestCase*> >]}
C {int testing::internal::CountIf(const Container&, Predicate) [with Container = std::vector<testing::TestCase*>, Predicate = bool (*)(const testing::TestCase*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = testing::TestCase* const*, _Container = std::vector<testing::TestCase*>, __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference = testing::TestCase* const&]}
C {int testing::internal::CountIf(const Container&, Predicate) [with Container = std::vector<testing::TestCase*>, Predicate = bool (*)(const testing::TestCase*)]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::const_iterator = __gnu_cxx::__normal_iterator<testing::TestCase* const*, std::vector<testing::TestCase*> >, typename std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type::const_pointer = testing::TestCase* const*]}
F {bool testing::internal::ShouldRunTestCase(const testing::TestCase*)} {../third-party/gtest/src/gtest.cc:342}
C {bool testing::internal::ShouldRunTestCase(const testing::TestCase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::TestCase::should_run() const}
F {int testing::internal::UnitTestImpl::total_test_case_count() const} {../third-party/gtest/src/gtest.cc:718}
C {int testing::internal::UnitTestImpl::total_test_case_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = testing::TestCase*, _Alloc = std::allocator<testing::TestCase*>, std::vector<_Tp, _Alloc>::size_type = long unsigned int]}
F {int testing::internal::UnitTestImpl::failed_test_case_count() const} {../third-party/gtest/src/gtest.cc:713}
C {int testing::internal::UnitTestImpl::failed_test_case_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::CountIf(const Container&, Predicate) [with Container = std::vector<testing::TestCase*>, Predicate = bool (*)(const testing::TestCase*)]}
F {bool testing::internal::TestCaseFailed(const testing::TestCase*)} {../third-party/gtest/src/gtest.cc:336}
C {bool testing::internal::TestCaseFailed(const testing::TestCase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::TestCase::Failed() const}
C {bool testing::internal::TestCaseFailed(const testing::TestCase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::TestCase::should_run() const}
F {bool testing::TestCase::Failed() const} {../third-party/gtest/include/gtest/gtest.h:806}
C {bool testing::TestCase::Failed() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::TestCase::failed_test_count() const}
F {int testing::internal::UnitTestImpl::successful_test_case_count() const} {../third-party/gtest/src/gtest.cc:708}
C {int testing::internal::UnitTestImpl::successful_test_case_count() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::internal::CountIf(const Container&, Predicate) [with Container = std::vector<testing::TestCase*>, Predicate = bool (*)(const testing::TestCase*)]}
F {bool testing::internal::TestCasePassed(const testing::TestCase*)} {../third-party/gtest/src/gtest.cc:331}
C {bool testing::internal::TestCasePassed(const testing::TestCase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::TestCase::Passed() const}
C {bool testing::internal::TestCasePassed(const testing::TestCase*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::TestCase::should_run() const}
F {bool testing::TestCase::Passed() const} {../third-party/gtest/include/gtest/gtest.h:803}
C {bool testing::TestCase::Passed() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::TestCase::Failed() const}
F {void testing::internal::UnitTestImpl::SetTestPartResultReporterForCurrentThread(testing::TestPartResultReporterInterface*)} {../third-party/gtest/src/gtest.cc:702}
C {void testing::internal::UnitTestImpl::SetTestPartResultReporterForCurrentThread(testing::TestPartResultReporterInterface*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::ThreadLocal<T>::set(const T&) [with T = testing::TestPartResultReporterInterface*]}
F {void testing::internal::ThreadLocal<T>::set(const T&) [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/include/gtest/internal/gtest-port.h:1492}
C {void testing::internal::ThreadLocal<T>::set(const T&) [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T* testing::internal::ThreadLocal<T>::pointer() [with T = testing::TestPartResultReporterInterface*]}
F {T* testing::internal::ThreadLocal<T>::pointer() [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/include/gtest/internal/gtest-port.h:1489}
C {T* testing::internal::ThreadLocal<T>::pointer() [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = testing::TestPartResultReporterInterface*]}
F {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/include/gtest/internal/gtest-port.h:1516}
C {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T* testing::internal::ThreadLocal<T>::ValueHolder::pointer() [with T = testing::TestPartResultReporterInterface*]}
C {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char, _Traits = std::char_traits<char>]}
C {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {int pthread_setspecific(pthread_key_t, const void*)}
C {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ThreadLocal<T>::ValueHolder::ValueHolder(const T&) [with T = testing::TestPartResultReporterInterface*]}
C {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
C {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T* testing::internal::ThreadLocal<T>::ValueHolder::pointer() [with T = testing::TestPartResultReporterInterface*]}
C {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {Derived* testing::internal::CheckedDowncastToActualType(Base*) [with Derived = testing::internal::ThreadLocal<testing::TestPartResultReporterInterface*>::ValueHolder, Base = testing::internal::ThreadLocalValueHolderBase]}
C {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* pthread_getspecific(pthread_key_t)}
F {Derived* testing::internal::CheckedDowncastToActualType(Base*) [with Derived = testing::internal::ThreadLocal<testing::TestPartResultReporterInterface*>::ValueHolder, Base = testing::internal::ThreadLocalValueHolderBase]} {../third-party/gtest/include/gtest/internal/gtest-port.h:1145}
C {Derived* testing::internal::CheckedDowncastToActualType(Base*) [with Derived = testing::internal::ThreadLocal<testing::TestPartResultReporterInterface*>::ValueHolder, Base = testing::internal::ThreadLocalValueHolderBase]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {Derived* testing::internal::CheckedDowncastToActualType(Base*) [with Derived = testing::internal::ThreadLocal<testing::TestPartResultReporterInterface*>::ValueHolder, Base = testing::internal::ThreadLocalValueHolderBase]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* __dynamic_cast(const void*, const __cxxabiv1::__class_type_info*, const __cxxabiv1::__class_type_info*, long int)}
C {Derived* testing::internal::CheckedDowncastToActualType(Base*) [with Derived = testing::internal::ThreadLocal<testing::TestPartResultReporterInterface*>::ValueHolder, Base = testing::internal::ThreadLocalValueHolderBase]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {Derived* testing::internal::CheckedDowncastToActualType(Base*) [with Derived = testing::internal::ThreadLocal<testing::TestPartResultReporterInterface*>::ValueHolder, Base = testing::internal::ThreadLocalValueHolderBase]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {Derived* testing::internal::CheckedDowncastToActualType(Base*) [with Derived = testing::internal::ThreadLocal<testing::TestPartResultReporterInterface*>::ValueHolder, Base = testing::internal::ThreadLocalValueHolderBase]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {Derived* testing::internal::CheckedDowncastToActualType(Base*) [with Derived = testing::internal::ThreadLocal<testing::TestPartResultReporterInterface*>::ValueHolder, Base = testing::internal::ThreadLocalValueHolderBase]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {Derived* testing::internal::CheckedDowncastToActualType(Base*) [with Derived = testing::internal::ThreadLocal<testing::TestPartResultReporterInterface*>::ValueHolder, Base = testing::internal::ThreadLocalValueHolderBase]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const std::type_info& __cxa_bad_typeid()}
C {Derived* testing::internal::CheckedDowncastToActualType(Base*) [with Derived = testing::internal::ThreadLocal<testing::TestPartResultReporterInterface*>::ValueHolder, Base = testing::internal::ThreadLocalValueHolderBase]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsTrue(bool)}
C {Derived* testing::internal::CheckedDowncastToActualType(Base*) [with Derived = testing::internal::ThreadLocal<testing::TestPartResultReporterInterface*>::ValueHolder, Base = testing::internal::ThreadLocalValueHolderBase]} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::type_info::operator==(const std::type_info&) const}
F {testing::internal::ThreadLocal<T>::ValueHolder::ValueHolder(const T&) [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/include/gtest/internal/gtest-port.h:1498}
C {testing::internal::ThreadLocal<T>::ValueHolder::ValueHolder(const T&) [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ThreadLocalValueHolderBase::ThreadLocalValueHolderBase()}
F {T* testing::internal::ThreadLocal<T>::ValueHolder::pointer() [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/include/gtest/internal/gtest-port.h:1500}
F {testing::TestPartResultReporterInterface* testing::internal::UnitTestImpl::GetTestPartResultReporterForCurrentThread()} {../third-party/gtest/src/gtest.cc:697}
C {testing::TestPartResultReporterInterface* testing::internal::UnitTestImpl::GetTestPartResultReporterForCurrentThread()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const T& testing::internal::ThreadLocal<T>::get() const [with T = testing::TestPartResultReporterInterface*]}
F {const T& testing::internal::ThreadLocal<T>::get() const [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/include/gtest/internal/gtest-port.h:1491}
C {const T& testing::internal::ThreadLocal<T>::get() const [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {const T* testing::internal::ThreadLocal<T>::pointer() const [with T = testing::TestPartResultReporterInterface*]}
F {const T* testing::internal::ThreadLocal<T>::pointer() const [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/include/gtest/internal/gtest-port.h:1490}
C {const T* testing::internal::ThreadLocal<T>::pointer() const [with T = testing::TestPartResultReporterInterface*]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T* testing::internal::ThreadLocal<T>::GetOrCreateValue() const [with T = testing::TestPartResultReporterInterface*]}
F {void testing::internal::UnitTestImpl::SetGlobalTestPartResultReporter(testing::TestPartResultReporterInterface*)} {../third-party/gtest/src/gtest.cc:689}
C {void testing::internal::UnitTestImpl::SetGlobalTestPartResultReporter(testing::TestPartResultReporterInterface*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestMutexLock::~GTestMutexLock()}
C {void testing::internal::UnitTestImpl::SetGlobalTestPartResultReporter(testing::TestPartResultReporterInterface*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestMutexLock::GTestMutexLock(testing::internal::MutexBase*)}
F {testing::TestPartResultReporterInterface* testing::internal::UnitTestImpl::GetGlobalTestPartResultReporter()} {../third-party/gtest/src/gtest.cc:683}
C {testing::TestPartResultReporterInterface* testing::internal::UnitTestImpl::GetGlobalTestPartResultReporter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestMutexLock::~GTestMutexLock()}
C {testing::TestPartResultReporterInterface* testing::internal::UnitTestImpl::GetGlobalTestPartResultReporter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestMutexLock::GTestMutexLock(testing::internal::MutexBase*)}
F {virtual void testing::internal::DefaultPerThreadTestPartResultReporter::ReportTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest.cc:676}
C {virtual void testing::internal::DefaultPerThreadTestPartResultReporter::ReportTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResultReporterInterface* testing::internal::UnitTestImpl::GetGlobalTestPartResultReporter()}
F {testing::internal::DefaultPerThreadTestPartResultReporter::DefaultPerThreadTestPartResultReporter(testing::internal::UnitTestImpl*)} {../third-party/gtest/src/gtest.cc:673}
C {testing::internal::DefaultPerThreadTestPartResultReporter::DefaultPerThreadTestPartResultReporter(testing::internal::UnitTestImpl*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResultReporterInterface::TestPartResultReporterInterface()}
F {virtual void testing::internal::DefaultGlobalTestPartResultReporter::ReportTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest.cc:667}
C {virtual void testing::internal::DefaultGlobalTestPartResultReporter::ReportTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestEventListener* testing::TestEventListeners::repeater()}
C {virtual void testing::internal::DefaultGlobalTestPartResultReporter::ReportTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestEventListeners* testing::internal::UnitTestImpl::listeners()}
C {virtual void testing::internal::DefaultGlobalTestPartResultReporter::ReportTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::TestResult::AddTestPartResult(const testing::TestPartResult&)}
C {virtual void testing::internal::DefaultGlobalTestPartResultReporter::ReportTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestResult* testing::internal::UnitTestImpl::current_test_result()}
F {testing::internal::DefaultGlobalTestPartResultReporter::DefaultGlobalTestPartResultReporter(testing::internal::UnitTestImpl*)} {../third-party/gtest/src/gtest.cc:664}
C {testing::internal::DefaultGlobalTestPartResultReporter::DefaultGlobalTestPartResultReporter(testing::internal::UnitTestImpl*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResultReporterInterface::TestPartResultReporterInterface()}
F {testing::internal::SingleFailureChecker::~SingleFailureChecker()} {../third-party/gtest/src/gtest.cc:660}
C {testing::internal::SingleFailureChecker::~SingleFailureChecker()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::SingleFailureChecker::~SingleFailureChecker()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::internal::SingleFailureChecker::~SingleFailureChecker()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::internal::SingleFailureChecker::~SingleFailureChecker()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::AssertHelper::~AssertHelper()}
C {testing::internal::SingleFailureChecker::~SingleFailureChecker()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::SingleFailureChecker::~SingleFailureChecker()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::internal::SingleFailureChecker::~SingleFailureChecker()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::internal::SingleFailureChecker::~SingleFailureChecker()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::AssertHelper::~AssertHelper()}
C {testing::internal::SingleFailureChecker::~SingleFailureChecker()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::AssertHelper::operator=(const testing::Message&) const}
C {testing::internal::SingleFailureChecker::~SingleFailureChecker()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::AssertHelper::AssertHelper(testing::TestPartResult::Type, const char*, int, const char*)}
C {testing::internal::SingleFailureChecker::~SingleFailureChecker()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::AssertionResult::failure_message() const}
C {testing::internal::SingleFailureChecker::~SingleFailureChecker()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
C {testing::internal::SingleFailureChecker::~SingleFailureChecker()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::operator bool() const}
C {testing::internal::SingleFailureChecker::~SingleFailureChecker()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)}
F {const char* testing::AssertionResult::failure_message() const} {../third-party/gtest/include/gtest/gtest.h:279}
C {const char* testing::AssertionResult::failure_message() const} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::AssertionResult::message() const}
F {testing::internal::SingleFailureChecker::SingleFailureChecker(const testing::TestPartResultArray*, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest.cc:648}
C {testing::internal::SingleFailureChecker::SingleFailureChecker(const testing::TestPartResultArray*, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
F {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest.cc:609}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionSuccess()}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::AssertionResult(const testing::AssertionResult&)}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = testing::TestPartResult, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [11], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [3], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<char>, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [14], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<char>, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [11], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionFailure()}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* strstr(const char*, const char*)}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestPartResult::message() const}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::AssertionResult(const testing::AssertionResult&)}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = testing::TestPartResult, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [11], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [2], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = std::basic_string<char>, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [11], testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionFailure()}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResult::Type testing::TestPartResult::type() const}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::TestPartResult& testing::TestPartResultArray::GetTestPartResult(int) const}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::~AssertionResult()}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult::AssertionResult(const testing::AssertionResult&)}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = testing::Message, testing::AssertionResult = testing::AssertionResult]}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::AssertionResult testing::AssertionFailure()}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::TestPartResultArray::size() const}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = testing::TestPartResult, testing::Message = testing::Message]}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [2], testing::Message = testing::Message]}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::TestPartResult& testing::TestPartResultArray::GetTestPartResult(int) const}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [10], testing::Message = testing::Message]}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = int, testing::Message = testing::Message]}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [11], testing::Message = testing::Message]}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [2], testing::Message = testing::Message]}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = std::basic_string<char>, testing::Message = testing::Message]}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [11], testing::Message = testing::Message]}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::TestPartResultArray::size() const}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::TestPartResultArray::size() const}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::AssertionResult testing::internal::HasOneFailure(const char*, const char*, const char*, const testing::TestPartResultArray&, testing::TestPartResult::Type, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
F {testing::Message& testing::Message::operator<<(const T&) [with T = testing::TestPartResult, testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = testing::TestPartResult, testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::operator<<(std::ostream&, const testing::TestPartResult&)}
C {testing::Message& testing::Message::operator<<(const T&) [with T = testing::TestPartResult, testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [14], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/include/gtest/gtest.h:282}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [14], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [14], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [14], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::AssertionResult::AppendMessage(const testing::Message&)}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [14], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = char [14], testing::Message = testing::Message]}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = char [14], testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {testing::Message& testing::Message::operator<<(const T&) [with T = char [14], testing::Message = testing::Message]} {../third-party/gtest/include/gtest/gtest-message.h:115}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [14], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::Message& testing::Message::operator<<(const T&) [with T = char [14], testing::Message = testing::Message]} {../third-party/gtest/src/gtest-typed-test.cc:110} {T& testing::internal::scoped_ptr<T>::operator*() const [with T = std::basic_stringstream<char>]}
F {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = testing::TestPartResult, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/include/gtest/gtest.h:282}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = testing::TestPartResult, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = testing::TestPartResult, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::~Message()}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = testing::TestPartResult, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::AssertionResult::AppendMessage(const testing::Message&)}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = testing::TestPartResult, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message& testing::Message::operator<<(const T&) [with T = testing::TestPartResult, testing::Message = testing::Message]}
C {testing::AssertionResult& testing::AssertionResult::operator<<(const T&) [with T = testing::TestPartResult, testing::AssertionResult = testing::AssertionResult]} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Message::Message()}
F {const void* testing::internal::GetTestTypeId()} {../third-party/gtest/src/gtest.cc:598}
C {const void* testing::internal::GetTestTypeId()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const void* testing::internal::GetTypeId() [with T = testing::Test, testing::internal::TypeId = const void*]}
F {const void* testing::internal::GetTypeId() [with T = testing::Test, testing::internal::TypeId = const void*]} {../third-party/gtest/include/gtest/internal/gtest-internal.h:417}
F {virtual void testing::ScopedFakeTestPartResultReporter::ReportTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest.cc:582}
C {virtual void testing::ScopedFakeTestPartResultReporter::ReportTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::TestPartResultArray::Append(const testing::TestPartResult&)}
F {virtual testing::ScopedFakeTestPartResultReporter::~ScopedFakeTestPartResultReporter()} {../third-party/gtest/src/gtest.cc:571}
C {virtual testing::ScopedFakeTestPartResultReporter::~ScopedFakeTestPartResultReporter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual testing::ScopedFakeTestPartResultReporter::~ScopedFakeTestPartResultReporter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::ScopedFakeTestPartResultReporter::~ScopedFakeTestPartResultReporter()}
F {testing::ScopedFakeTestPartResultReporter::~ScopedFakeTestPartResultReporter()} {../third-party/gtest/src/gtest.cc:571}
C {testing::ScopedFakeTestPartResultReporter::~ScopedFakeTestPartResultReporter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResultReporterInterface::~TestPartResultReporterInterface()}
C {testing::ScopedFakeTestPartResultReporter::~ScopedFakeTestPartResultReporter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::ScopedFakeTestPartResultReporter::~ScopedFakeTestPartResultReporter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResultReporterInterface::~TestPartResultReporterInterface()}
C {testing::ScopedFakeTestPartResultReporter::~ScopedFakeTestPartResultReporter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::UnitTestImpl::SetTestPartResultReporterForCurrentThread(testing::TestPartResultReporterInterface*)}
C {testing::ScopedFakeTestPartResultReporter::~ScopedFakeTestPartResultReporter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::UnitTestImpl::SetGlobalTestPartResultReporter(testing::TestPartResultReporterInterface*)}
C {testing::ScopedFakeTestPartResultReporter::~ScopedFakeTestPartResultReporter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UnitTestImpl* testing::internal::GetUnitTestImpl()}
F {void testing::ScopedFakeTestPartResultReporter::Init()} {../third-party/gtest/src/gtest.cc:558}
C {void testing::ScopedFakeTestPartResultReporter::Init()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::UnitTestImpl::SetTestPartResultReporterForCurrentThread(testing::TestPartResultReporterInterface*)}
C {void testing::ScopedFakeTestPartResultReporter::Init()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResultReporterInterface* testing::internal::UnitTestImpl::GetTestPartResultReporterForCurrentThread()}
C {void testing::ScopedFakeTestPartResultReporter::Init()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::UnitTestImpl::SetGlobalTestPartResultReporter(testing::TestPartResultReporterInterface*)}
C {void testing::ScopedFakeTestPartResultReporter::Init()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResultReporterInterface* testing::internal::UnitTestImpl::GetGlobalTestPartResultReporter()}
C {void testing::ScopedFakeTestPartResultReporter::Init()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UnitTestImpl* testing::internal::GetUnitTestImpl()}
F {testing::ScopedFakeTestPartResultReporter::ScopedFakeTestPartResultReporter(testing::ScopedFakeTestPartResultReporter::InterceptMode, testing::TestPartResultArray*)} {../third-party/gtest/src/gtest.cc:551}
C {testing::ScopedFakeTestPartResultReporter::ScopedFakeTestPartResultReporter(testing::ScopedFakeTestPartResultReporter::InterceptMode, testing::TestPartResultArray*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResultReporterInterface::~TestPartResultReporterInterface()}
C {testing::ScopedFakeTestPartResultReporter::ScopedFakeTestPartResultReporter(testing::ScopedFakeTestPartResultReporter::InterceptMode, testing::TestPartResultArray*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::ScopedFakeTestPartResultReporter::Init()}
C {testing::ScopedFakeTestPartResultReporter::ScopedFakeTestPartResultReporter(testing::ScopedFakeTestPartResultReporter::InterceptMode, testing::TestPartResultArray*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResultReporterInterface::TestPartResultReporterInterface()}
F {testing::ScopedFakeTestPartResultReporter::ScopedFakeTestPartResultReporter(testing::TestPartResultArray*)} {../third-party/gtest/src/gtest.cc:541}
C {testing::ScopedFakeTestPartResultReporter::ScopedFakeTestPartResultReporter(testing::TestPartResultArray*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResultReporterInterface::~TestPartResultReporterInterface()}
C {testing::ScopedFakeTestPartResultReporter::ScopedFakeTestPartResultReporter(testing::TestPartResultArray*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::ScopedFakeTestPartResultReporter::Init()}
C {testing::ScopedFakeTestPartResultReporter::ScopedFakeTestPartResultReporter(testing::TestPartResultArray*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResultReporterInterface::TestPartResultReporterInterface()}
F {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest.cc:480}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::UnitTestOptions::MatchesFilter(const string&, const char*)}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::UnitTestOptions::MatchesFilter(const string&, const char*)}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool std::basic_string<_CharT, _Traits, _Alloc>::empty() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(_InputIterator, _InputIterator, const _Alloc&) [with _InputIterator = const char*, _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>& std::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* strchr(const char*, int)}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static bool testing::internal::UnitTestOptions::FilterMatchesTest(const string&, const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {static bool testing::internal::UnitTestOptions::MatchesFilter(const string&, const char*)} {../third-party/gtest/src/gtest.cc:457}
C {static bool testing::internal::UnitTestOptions::MatchesFilter(const string&, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* strchr(const char*, int)}
C {static bool testing::internal::UnitTestOptions::MatchesFilter(const string&, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::UnitTestOptions::PatternMatchesString(const char*, const char*)}
C {static bool testing::internal::UnitTestOptions::MatchesFilter(const string&, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {static bool testing::internal::UnitTestOptions::PatternMatchesString(const char*, const char*)} {../third-party/gtest/src/gtest.cc:440}
C {static bool testing::internal::UnitTestOptions::PatternMatchesString(const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::UnitTestOptions::PatternMatchesString(const char*, const char*)}
C {static bool testing::internal::UnitTestOptions::PatternMatchesString(const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::UnitTestOptions::PatternMatchesString(const char*, const char*)}
C {static bool testing::internal::UnitTestOptions::PatternMatchesString(const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::UnitTestOptions::PatternMatchesString(const char*, const char*)}
C {static bool testing::internal::UnitTestOptions::PatternMatchesString(const char*, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static bool testing::internal::UnitTestOptions::PatternMatchesString(const char*, const char*)}
F {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest.cc:404}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const string& testing::internal::FilePath::string() const}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {static testing::internal::FilePath testing::internal::FilePath::GenerateUniqueFileName(const testing::internal::FilePath&, const testing::internal::FilePath&, const char*)}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath testing::internal::GetCurrentExecutableName()}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {static std::string testing::internal::UnitTestOptions::GetOutputFormat()}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const string& testing::internal::FilePath::string() const}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::FilePath::IsDirectory() const}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath& testing::internal::FilePath::operator=(const testing::internal::FilePath&)}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {static testing::internal::FilePath testing::internal::FilePath::ConcatPaths(const testing::internal::FilePath&, const testing::internal::FilePath&)}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::FilePath(const string&)}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::UnitTest::original_working_dir() const}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {static testing::UnitTest* testing::UnitTest::GetInstance()}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::FilePath(const string&)}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::FilePath::IsAbsolutePath() const}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::FilePath(const string&)}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc> = std::basic_string<char>]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const string& testing::internal::FilePath::string() const}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {static testing::internal::FilePath testing::internal::FilePath::ConcatPaths(const testing::internal::FilePath&, const testing::internal::FilePath&)}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::FilePath(const string&)}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::UnitTest::original_working_dir() const}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {static testing::UnitTest* testing::UnitTest::GetInstance()}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::FilePath(const string&)}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* strchr(const char*, int)}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static std::string testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {testing::internal::FilePath& testing::internal::FilePath::operator=(const testing::internal::FilePath&)} {../third-party/gtest/include/gtest/internal/gtest-filepath.h:68}
C {testing::internal::FilePath& testing::internal::FilePath::operator=(const testing::internal::FilePath&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::FilePath::Set(const testing::internal::FilePath&)}
F {static std::string testing::internal::UnitTestOptions::GetOutputFormat()} {../third-party/gtest/src/gtest.cc:392}
C {static std::string testing::internal::UnitTestOptions::GetOutputFormat()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static std::string testing::internal::UnitTestOptions::GetOutputFormat()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static std::string testing::internal::UnitTestOptions::GetOutputFormat()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static std::string testing::internal::UnitTestOptions::GetOutputFormat()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static std::string testing::internal::UnitTestOptions::GetOutputFormat()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static std::string testing::internal::UnitTestOptions::GetOutputFormat()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, std::basic_string<_CharT, _Traits, _Alloc>::size_type, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {static std::string testing::internal::UnitTestOptions::GetOutputFormat()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static std::string testing::internal::UnitTestOptions::GetOutputFormat()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::UnitTestOptions::GetOutputFormat()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static std::string testing::internal::UnitTestOptions::GetOutputFormat()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* strchr(const char*, int)}
C {static std::string testing::internal::UnitTestOptions::GetOutputFormat()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {static std::string testing::internal::UnitTestOptions::GetOutputFormat()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {static std::string testing::internal::UnitTestOptions::GetOutputFormat()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {static std::string testing::internal::UnitTestOptions::GetOutputFormat()} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {testing::internal::FilePath testing::internal::GetCurrentExecutableName()} {../third-party/gtest/src/gtest.cc:377}
C {testing::internal::FilePath testing::internal::GetCurrentExecutableName()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {testing::internal::FilePath testing::internal::GetCurrentExecutableName()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {testing::internal::FilePath testing::internal::GetCurrentExecutableName()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {testing::internal::FilePath testing::internal::GetCurrentExecutableName()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath testing::internal::FilePath::RemoveDirectoryName() const}
C {testing::internal::FilePath testing::internal::GetCurrentExecutableName()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::~FilePath()}
C {testing::internal::FilePath testing::internal::GetCurrentExecutableName()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::FilePath::Set(const testing::internal::FilePath&)}
C {testing::internal::FilePath testing::internal::GetCurrentExecutableName()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::FilePath(const string&)}
C {testing::internal::FilePath testing::internal::GetCurrentExecutableName()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::FilePath::FilePath()}
F {void testing::internal::AssertHelper::operator=(const testing::Message&) const} {../third-party/gtest/src/gtest.cc:359}
C {void testing::internal::AssertHelper::operator=(const testing::Message&) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::AssertHelper::operator=(const testing::Message&) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::AssertHelper::operator=(const testing::Message&) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::AssertHelper::operator=(const testing::Message&) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {void testing::internal::AssertHelper::operator=(const testing::Message&) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::UnitTest::AddTestPartResult(testing::TestPartResult::Type, const char*, int, const string&, const string&)}
C {void testing::internal::AssertHelper::operator=(const testing::Message&) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {static testing::UnitTest* testing::UnitTest::GetInstance()}
C {void testing::internal::AssertHelper::operator=(const testing::Message&) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::AppendUserMessage(const string&, const testing::Message&)}
C {void testing::internal::AssertHelper::operator=(const testing::Message&) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::UnitTestImpl::CurrentOsStackTraceExceptTop(int)}
C {void testing::internal::AssertHelper::operator=(const testing::Message&) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::UnitTestImpl* testing::UnitTest::impl()}
C {void testing::internal::AssertHelper::operator=(const testing::Message&) const} {../third-party/gtest/src/gtest-typed-test.cc:110} {static testing::UnitTest* testing::UnitTest::GetInstance()}
F {testing::internal::AssertHelper::~AssertHelper()} {../third-party/gtest/src/gtest.cc:354}
C {testing::internal::AssertHelper::~AssertHelper()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::AssertHelper::~AssertHelper()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::AssertHelper::AssertHelperData::~AssertHelperData()}
F {testing::internal::AssertHelper::AssertHelperData::~AssertHelperData()} {../third-party/gtest/include/gtest/gtest.h:1741}
C {testing::internal::AssertHelper::AssertHelperData::~AssertHelperData()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
F {testing::internal::AssertHelper::AssertHelper(testing::TestPartResult::Type, const char*, int, const char*)} {../third-party/gtest/src/gtest.cc:347}
C {testing::internal::AssertHelper::AssertHelper(testing::TestPartResult::Type, const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {testing::internal::AssertHelper::AssertHelper(testing::TestPartResult::Type, const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::AssertHelper::AssertHelperData::AssertHelperData(testing::TestPartResult::Type, const char*, int, const char*)}
C {testing::internal::AssertHelper::AssertHelper(testing::TestPartResult::Type, const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void* operator new(std::size_t)}
F {testing::internal::AssertHelper::AssertHelperData::AssertHelperData(testing::TestPartResult::Type, const char*, int, const char*)} {../third-party/gtest/include/gtest/gtest.h:1742}
C {testing::internal::AssertHelper::AssertHelperData::AssertHelperData(testing::TestPartResult::Type, const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::internal::AssertHelper::AssertHelperData::AssertHelperData(testing::TestPartResult::Type, const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::internal::AssertHelper::AssertHelperData::AssertHelperData(testing::TestPartResult::Type, const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::AssertHelper::AssertHelperData::AssertHelperData(testing::TestPartResult::Type, const char*, int, const char*)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
F {testing::internal::UInt32 testing::internal::Random::Generate(testing::internal::UInt32)} {../third-party/gtest/src/gtest.cc:291}
C {testing::internal::UInt32 testing::internal::Random::Generate(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {testing::internal::UInt32 testing::internal::Random::Generate(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {testing::internal::UInt32 testing::internal::Random::Generate(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {testing::internal::UInt32 testing::internal::Random::Generate(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::UInt32 testing::internal::Random::Generate(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(unsigned int) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]}
C {testing::internal::UInt32 testing::internal::Random::Generate(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::UInt32 testing::internal::Random::Generate(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::UInt32 testing::internal::Random::Generate(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(unsigned int) [with _CharT = char, _Traits = std::char_traits<char>, std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]}
C {testing::internal::UInt32 testing::internal::Random::Generate(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::UInt32 testing::internal::Random::Generate(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::UInt32 testing::internal::Random::Generate(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {testing::internal::UInt32 testing::internal::Random::Generate(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {testing::internal::UInt32 testing::internal::Random::Generate(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsTrue(bool)}
C {testing::internal::UInt32 testing::internal::Random::Generate(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {testing::internal::UInt32 testing::internal::Random::Generate(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::UInt32 testing::internal::Random::Generate(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {testing::internal::UInt32 testing::internal::Random::Generate(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {testing::internal::UInt32 testing::internal::Random::Generate(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {testing::internal::UInt32 testing::internal::Random::Generate(testing::internal::UInt32)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsTrue(bool)}
F {virtual void testing::internal::StreamingListener::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-internal-inl.h:1189}
C {virtual void testing::internal::StreamingListener::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::StreamingListener::SendLn(const string&)}
C {virtual void testing::internal::StreamingListener::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static testing::internal::string testing::internal::StreamingListener::UrlEncode(const char*)}
C {virtual void testing::internal::StreamingListener::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
C {virtual void testing::internal::StreamingListener::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {int testing::TestPartResult::line_number() const}
C {virtual void testing::internal::StreamingListener::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {static testing::internal::string testing::internal::StreamingListener::UrlEncode(const char*)}
C {virtual void testing::internal::StreamingListener::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestPartResult::message() const}
C {virtual void testing::internal::StreamingListener::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestPartResult::file_name() const}
F {virtual void testing::internal::StreamingListener::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-internal-inl.h:1182}
C {virtual void testing::internal::StreamingListener::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::StreamingListener::SendLn(const string&)}
C {virtual void testing::internal::StreamingListener::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::string testing::internal::StreamingListener::FormatBool(bool)}
C {virtual void testing::internal::StreamingListener::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::TestResult::Passed() const}
C {virtual void testing::internal::StreamingListener::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::TestResult* testing::TestInfo::result() const}
C {virtual void testing::internal::StreamingListener::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = long long int, std::string = std::basic_string<char>]}
C {virtual void testing::internal::StreamingListener::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TimeInMillis testing::TestResult::elapsed_time() const}
C {virtual void testing::internal::StreamingListener::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const testing::TestResult* testing::TestInfo::result() const}
F {testing::internal::string testing::internal::StreamingListener::FormatBool(bool)} {../third-party/gtest/src/gtest-internal-inl.h:1206}
C {testing::internal::string testing::internal::StreamingListener::FormatBool(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::internal::string testing::internal::StreamingListener::FormatBool(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {testing::internal::string testing::internal::StreamingListener::FormatBool(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {testing::internal::string testing::internal::StreamingListener::FormatBool(bool)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
F {virtual void testing::internal::StreamingListener::OnTestStart(const testing::TestInfo&)} {../third-party/gtest/src/gtest-internal-inl.h:1178}
C {virtual void testing::internal::StreamingListener::OnTestStart(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual void testing::internal::StreamingListener::OnTestStart(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestStart(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestStart(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual void testing::internal::StreamingListener::OnTestStart(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestStart(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestStart(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::StreamingListener::SendLn(const string&)}
C {virtual void testing::internal::StreamingListener::OnTestStart(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestStart(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestStart(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {virtual void testing::internal::StreamingListener::OnTestStart(const testing::TestInfo&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestInfo::name() const}
F {virtual void testing::internal::StreamingListener::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-internal-inl.h:1172}
C {virtual void testing::internal::StreamingListener::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::StreamingListener::SendLn(const string&)}
C {virtual void testing::internal::StreamingListener::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::string testing::internal::StreamingListener::FormatBool(bool)}
C {virtual void testing::internal::StreamingListener::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::TestCase::Passed() const}
C {virtual void testing::internal::StreamingListener::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = long long int, std::string = std::basic_string<char>]}
C {virtual void testing::internal::StreamingListener::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TimeInMillis testing::TestCase::elapsed_time() const}
F {virtual void testing::internal::StreamingListener::OnTestCaseStart(const testing::TestCase&)} {../third-party/gtest/src/gtest-internal-inl.h:1168}
C {virtual void testing::internal::StreamingListener::OnTestCaseStart(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual void testing::internal::StreamingListener::OnTestCaseStart(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestCaseStart(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestCaseStart(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual void testing::internal::StreamingListener::OnTestCaseStart(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestCaseStart(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestCaseStart(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::StreamingListener::SendLn(const string&)}
C {virtual void testing::internal::StreamingListener::OnTestCaseStart(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestCaseStart(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestCaseStart(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
C {virtual void testing::internal::StreamingListener::OnTestCaseStart(const testing::TestCase&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const char* testing::TestCase::name() const}
F {virtual void testing::internal::StreamingListener::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-internal-inl.h:1162}
C {virtual void testing::internal::StreamingListener::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::StreamingListener::SendLn(const string&)}
C {virtual void testing::internal::StreamingListener::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::string testing::internal::StreamingListener::FormatBool(bool)}
C {virtual void testing::internal::StreamingListener::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::UnitTest::Passed() const}
C {virtual void testing::internal::StreamingListener::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = long long int, std::string = std::basic_string<char>]}
C {virtual void testing::internal::StreamingListener::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TimeInMillis testing::UnitTest::elapsed_time() const}
F {virtual void testing::internal::StreamingListener::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-internal-inl.h:1157}
C {virtual void testing::internal::StreamingListener::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::StreamingListener::SendLn(const string&)}
C {virtual void testing::internal::StreamingListener::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::string testing::internal::StreamableToString(const T&) [with T = int, std::string = std::basic_string<char>]}
F {virtual void testing::internal::StreamingListener::OnTestProgramEnd(const testing::UnitTest&)} {../third-party/gtest/src/gtest-internal-inl.h:1148}
C {virtual void testing::internal::StreamingListener::OnTestProgramEnd(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestProgramEnd(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestProgramEnd(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {T* testing::internal::scoped_ptr<T>::operator->() const [with T = testing::internal::StreamingListener::AbstractSocketWriter]}
C {virtual void testing::internal::StreamingListener::OnTestProgramEnd(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestProgramEnd(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestProgramEnd(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::StreamingListener::SendLn(const string&)}
C {virtual void testing::internal::StreamingListener::OnTestProgramEnd(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestProgramEnd(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::string testing::internal::StreamingListener::FormatBool(bool)}
C {virtual void testing::internal::StreamingListener::OnTestProgramEnd(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::UnitTest::Passed() const}
F {virtual void testing::internal::StreamingListener::OnTestProgramStart(const testing::UnitTest&)} {../third-party/gtest/src/gtest-internal-inl.h:1144}
C {virtual void testing::internal::StreamingListener::OnTestProgramStart(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual void testing::internal::StreamingListener::OnTestProgramStart(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestProgramStart(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::~allocator() [with _Tp = char]}
C {virtual void testing::internal::StreamingListener::OnTestProgramStart(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestProgramStart(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {void testing::internal::StreamingListener::SendLn(const string&)}
C {virtual void testing::internal::StreamingListener::OnTestProgramStart(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::OnTestProgramStart(const testing::UnitTest&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::allocator<_Alloc>::allocator() [with _Tp = char]}
F {virtual testing::EmptyTestEventListener::~EmptyTestEventListener()} {../third-party/gtest/include/gtest/gtest.h:1012}
C {virtual testing::EmptyTestEventListener::~EmptyTestEventListener()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual testing::EmptyTestEventListener::~EmptyTestEventListener()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::EmptyTestEventListener::~EmptyTestEventListener()}
F {virtual void testing::internal::StreamingListener::SocketWriter::CloseConnection()} {../third-party/gtest/src/gtest-internal-inl.h:1120}
C {virtual void testing::internal::StreamingListener::SocketWriter::CloseConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {virtual void testing::internal::StreamingListener::SocketWriter::CloseConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {int close(int)}
C {virtual void testing::internal::StreamingListener::SocketWriter::CloseConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {virtual void testing::internal::StreamingListener::SocketWriter::CloseConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {virtual void testing::internal::StreamingListener::SocketWriter::CloseConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {virtual void testing::internal::StreamingListener::SocketWriter::CloseConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {virtual void testing::internal::StreamingListener::SocketWriter::CloseConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {virtual void testing::internal::StreamingListener::SocketWriter::CloseConnection()} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsTrue(bool)}
F {virtual void testing::internal::StreamingListener::SocketWriter::Send(const string&)} {../third-party/gtest/src/gtest-internal-inl.h:1103}
C {virtual void testing::internal::StreamingListener::SocketWriter::Send(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {virtual void testing::internal::StreamingListener::SocketWriter::Send(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {virtual void testing::internal::StreamingListener::SocketWriter::Send(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {virtual void testing::internal::StreamingListener::SocketWriter::Send(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::SocketWriter::Send(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {virtual void testing::internal::StreamingListener::SocketWriter::Send(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::SocketWriter::Send(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {virtual void testing::internal::StreamingListener::SocketWriter::Send(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {virtual void testing::internal::StreamingListener::SocketWriter::Send(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {virtual void testing::internal::StreamingListener::SocketWriter::Send(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {ssize_t write(int, const void*, size_t)}
C {virtual void testing::internal::StreamingListener::SocketWriter::Send(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {const _CharT* std::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>]}
C {virtual void testing::internal::StreamingListener::SocketWriter::Send(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_string<_CharT, _Traits, _Alloc>::size_type std::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = char, _Traits = std::char_traits<char>, _Alloc = std::allocator<char>, std::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]}
C {virtual void testing::internal::StreamingListener::SocketWriter::Send(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::~GTestLog()}
C {virtual void testing::internal::StreamingListener::SocketWriter::Send(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {virtual void testing::internal::StreamingListener::SocketWriter::Send(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]}
C {virtual void testing::internal::StreamingListener::SocketWriter::Send(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {std::ostream& testing::internal::GTestLog::GetStream()}
C {virtual void testing::internal::StreamingListener::SocketWriter::Send(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::GTestLog::GTestLog(testing::internal::GTestLogSeverity, const char*, int)}
C {virtual void testing::internal::StreamingListener::SocketWriter::Send(const string&)} {../third-party/gtest/src/gtest-typed-test.cc:110} {bool testing::internal::IsTrue(bool)}
F {virtual testing::internal::StreamingListener::SocketWriter::~SocketWriter()} {../third-party/gtest/src/gtest-internal-inl.h:1097}
C {virtual testing::internal::StreamingListener::SocketWriter::~SocketWriter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual testing::internal::StreamingListener::SocketWriter::~SocketWriter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::StreamingListener::SocketWriter::~SocketWriter()}
F {virtual void testing::internal::StreamingListener::AbstractSocketWriter::CloseConnection()} {../third-party/gtest/src/gtest-internal-inl.h:1081}
F {virtual testing::internal::StreamingListener::AbstractSocketWriter::~AbstractSocketWriter()} {../third-party/gtest/src/gtest-internal-inl.h:1075}
C {virtual testing::internal::StreamingListener::AbstractSocketWriter::~AbstractSocketWriter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual testing::internal::StreamingListener::AbstractSocketWriter::~AbstractSocketWriter()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::StreamingListener::AbstractSocketWriter::~AbstractSocketWriter()}
F {virtual testing::internal::OsStackTraceGetterInterface::~OsStackTraceGetterInterface()} {../third-party/gtest/src/gtest-internal-inl.h:420}
C {virtual testing::internal::OsStackTraceGetterInterface::~OsStackTraceGetterInterface()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual testing::internal::OsStackTraceGetterInterface::~OsStackTraceGetterInterface()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::OsStackTraceGetterInterface::~OsStackTraceGetterInterface()}
F {virtual void testing::EmptyTestEventListener::OnTestProgramEnd(const testing::UnitTest&)} {../third-party/gtest/include/gtest/gtest.h:1028}
F {virtual void testing::EmptyTestEventListener::OnTestIterationEnd(const testing::UnitTest&, int)} {../third-party/gtest/include/gtest/gtest.h:1026}
F {virtual void testing::EmptyTestEventListener::OnEnvironmentsTearDownEnd(const testing::UnitTest&)} {../third-party/gtest/include/gtest/gtest.h:1025}
F {virtual void testing::EmptyTestEventListener::OnEnvironmentsTearDownStart(const testing::UnitTest&)} {../third-party/gtest/include/gtest/gtest.h:1024}
F {virtual void testing::EmptyTestEventListener::OnTestCaseEnd(const testing::TestCase&)} {../third-party/gtest/include/gtest/gtest.h:1023}
F {virtual void testing::EmptyTestEventListener::OnTestEnd(const testing::TestInfo&)} {../third-party/gtest/include/gtest/gtest.h:1022}
F {virtual void testing::EmptyTestEventListener::OnTestPartResult(const testing::TestPartResult&)} {../third-party/gtest/include/gtest/gtest.h:1021}
F {virtual void testing::EmptyTestEventListener::OnTestStart(const testing::TestInfo&)} {../third-party/gtest/include/gtest/gtest.h:1020}
F {virtual void testing::EmptyTestEventListener::OnTestCaseStart(const testing::TestCase&)} {../third-party/gtest/include/gtest/gtest.h:1019}
F {virtual void testing::EmptyTestEventListener::OnEnvironmentsSetUpEnd(const testing::UnitTest&)} {../third-party/gtest/include/gtest/gtest.h:1018}
F {virtual void testing::EmptyTestEventListener::OnEnvironmentsSetUpStart(const testing::UnitTest&)} {../third-party/gtest/include/gtest/gtest.h:1017}
F {virtual void testing::EmptyTestEventListener::OnTestIterationStart(const testing::UnitTest&, int)} {../third-party/gtest/include/gtest/gtest.h:1015}
F {virtual void testing::EmptyTestEventListener::OnTestProgramStart(const testing::UnitTest&)} {../third-party/gtest/include/gtest/gtest.h:1014}
F {virtual testing::TestEventListener::~TestEventListener()} {../third-party/gtest/include/gtest/gtest.h:961}
C {virtual testing::TestEventListener::~TestEventListener()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual testing::TestEventListener::~TestEventListener()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestEventListener::~TestEventListener()}
F {virtual testing::Environment::Setup_should_be_spelled_SetUp* testing::Environment::Setup()} {../third-party/gtest/include/gtest/gtest.h:954}
F {virtual void testing::Environment::TearDown()} {../third-party/gtest/include/gtest/gtest.h:949}
F {virtual void testing::Environment::SetUp()} {../third-party/gtest/include/gtest/gtest.h:946}
F {virtual testing::Environment::~Environment()} {../third-party/gtest/include/gtest/gtest.h:943}
C {virtual testing::Environment::~Environment()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual testing::Environment::~Environment()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::Environment::~Environment()}
F {testing::Environment::~Environment()} {../third-party/gtest/include/gtest/gtest.h:943}
C {testing::Environment::~Environment()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
F {virtual testing::Test::Setup_should_be_spelled_SetUp* testing::Test::Setup()} {../third-party/gtest/include/gtest/gtest.h:451}
F {virtual testing::TestPartResultReporterInterface::~TestPartResultReporterInterface()} {../third-party/gtest/include/gtest/gtest-test-part.h:148}
C {virtual testing::TestPartResultReporterInterface::~TestPartResultReporterInterface()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual testing::TestPartResultReporterInterface::~TestPartResultReporterInterface()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::TestPartResultReporterInterface::~TestPartResultReporterInterface()}
F {virtual testing::internal::ParameterizedTestCaseInfoBase::~ParameterizedTestCaseInfoBase()} {../third-party/gtest/include/gtest/internal/gtest-param-util.h:417}
C {virtual testing::internal::ParameterizedTestCaseInfoBase::~ParameterizedTestCaseInfoBase()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual testing::internal::ParameterizedTestCaseInfoBase::~ParameterizedTestCaseInfoBase()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ParameterizedTestCaseInfoBase::~ParameterizedTestCaseInfoBase()}
F {testing::internal::ParameterizedTestCaseInfoBase::~ParameterizedTestCaseInfoBase()} {../third-party/gtest/include/gtest/internal/gtest-param-util.h:417}
C {testing::internal::ParameterizedTestCaseInfoBase::~ParameterizedTestCaseInfoBase()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
F {virtual testing::internal::DeathTestFactory::~DeathTestFactory()} {../third-party/gtest/include/gtest/internal/gtest-death-test-internal.h:142}
C {virtual testing::internal::DeathTestFactory::~DeathTestFactory()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual testing::internal::DeathTestFactory::~DeathTestFactory()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::DeathTestFactory::~DeathTestFactory()}
F {virtual testing::internal::DeathTest::~DeathTest()} {../third-party/gtest/include/gtest/internal/gtest-death-test-internal.h:82}
C {virtual testing::internal::DeathTest::~DeathTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual testing::internal::DeathTest::~DeathTest()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::DeathTest::~DeathTest()}
F {virtual testing::internal::TestFactoryBase::~TestFactoryBase()} {../third-party/gtest/include/gtest/internal/gtest-internal.h:436}
C {virtual testing::internal::TestFactoryBase::~TestFactoryBase()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual testing::internal::TestFactoryBase::~TestFactoryBase()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::TestFactoryBase::~TestFactoryBase()}
F {testing::internal::TestFactoryBase::~TestFactoryBase()} {../third-party/gtest/include/gtest/internal/gtest-internal.h:436}
C {testing::internal::TestFactoryBase::~TestFactoryBase()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
F {virtual testing::internal::ThreadLocalValueHolderBase::~ThreadLocalValueHolderBase()} {../third-party/gtest/include/gtest/internal/gtest-port.h:1434}
C {virtual testing::internal::ThreadLocalValueHolderBase::~ThreadLocalValueHolderBase()} {../third-party/gtest/src/gtest-typed-test.cc:110} {void operator delete(void*)}
C {virtual testing::internal::ThreadLocalValueHolderBase::~ThreadLocalValueHolderBase()} {../third-party/gtest/src/gtest-typed-test.cc:110} {testing::internal::ThreadLocalValueHolderBase::~ThreadLocalValueHolderBase()}
F {virtual testing::internal::ThreadWithParamBase::~ThreadWithParamBase()} {../third-party/gtest/include/gtest/internal/gtest-port.h:1246}
C {virtual testing::internal::ThreadWithParamBase::~ThreadWithParamBase()}